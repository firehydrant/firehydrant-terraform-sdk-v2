openapi: 3.0.0
info:
  title: FireHydrant API
  version: 0.0.1
security:
  - api_key: []
tags:
  - name: ping
    description: Operations about pings
  - name: environments
    description: Operations about environments
  - name: services
    description: Operations about services
  - name: service_dependencies
    description: Operations about service_dependencies
  - name: functionalities
    description: Operations about functionalities
  - name: teams
    description: Operations about teams
  - name: changes
    description: Operations about changes
  - name: change_types
    description: Operations about change_types
  - name: entitlements
    description: Operations about entitlements
  - name: incidents
    description: Operations about incidents
  - name: incident_roles
    description: Operations about incident_roles
  - name: incident_tags
    description: Operations about incident_tags
  - name: incident_types
    description: Operations about incident_types
  - name: integrations
    description: Operations about integrations
  - name: users
    description: Operations about users
  - name: current_user
    description: Operations about current_users
  - name: reports
    description: Operations about reports
  - name: metrics
    description: Operations about metrics
  - name: runbooks
    description: Operations about runbooks
  - name: runbook_audits
    description: Operations about runbook_audits
  - name: nunc_connections
    description: Operations about nunc_connections
  - name: saved_searches
    description: Operations about saved_searches
  - name: lifecycles
    description: Operations about lifecycles
  - name: priorities
    description: Operations about priorities
  - name: severities
    description: Operations about severities
  - name: severity_matrix
    description: Operations about severity_matrices
  - name: scheduled_maintenances
    description: Operations about scheduled_maintenances
  - name: schedules
    description: Operations about schedules
  - name: infrastructures
    description: Operations about infrastructures
  - name: nunc
    description: Operations about nuncs
  - name: status_update_templates
    description: Operations about status_update_templates
  - name: custom_fields
    description: Operations about custom_fields
  - name: post_mortems
    description: Operations about post_mortems
  - name: alerts
    description: Operations about alerts
  - name: processing_log_entries
    description: Operations about processing_log_entries
  - name: ticketing
    description: Operations about ticketings
  - name: task_lists
    description: Operations about task_lists
  - name: noauth
    description: Operations about noauths
  - name: scim
    description: Operations about scims
  - name: catalogs
    description: Operations about catalogs
  - name: checklist_templates
    description: Operations about checklist_templates
  - name: bootstrap
    description: Operations about bootstraps
  - name: form_configurations
    description: Operations about form_configurations
  - name: conversations
    description: Operations about conversations
  - name: signals
    description: Operations about signals
  - name: signals_on_call
    description: Operations about signals_on_calls
  - name: webhooks
    description: Operations about webhooks
  - name: ai
    description: Operations about ais
paths:
  /v1/ping:
    get:
      summary: Ping
      description: Simple endpoint to verify your API connection is working
      responses:
        "200":
          description: Simple endpoint to verify your API connection is working
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PongEntity"
      tags:
        - ping
      operationId: getV1Ping
  /v1/environments:
    post:
      summary: Create an environment
      description: Creates an environment for the organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1Environments"
        required: true
      responses:
        "201":
          description: Creates an environment for the organization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnvironmentEntryEntity"
      tags:
        - environments
      operationId: postV1Environments
      x-speakeasy-entity-operation: Environment#create
    get:
      summary: List all environments
      description: List all of the environments that have been added to the organiation
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: query
          description: A query to search environments by their name or description
          required: false
          schema:
            type: string
        - in: query
          name: name
          description: A query to search environments by their name
          required: false
          schema:
            type: string
      responses:
        "200":
          description: List all of the environments that have been added to the organiation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnvironmentEntryEntityPaginated"
      tags:
        - environments
      operationId: getV1Environments
      x-speakeasy-entity-operation: Environments#read
  "/v1/environments/{environment_id}":
    delete:
      summary: Archive an environment
      description: Archive an environment
      parameters:
        - in: path
          name: environment_id
          description: Environment UUID
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      responses:
        "200":
          description: Archive an environment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnvironmentEntryEntity"
      tags:
        - environments
      operationId: deleteV1EnvironmentsEnvironmentId
      x-speakeasy-entity-operation: Environment#delete
    patch:
      summary: Update an environment
      description: Update a environments attributes
      parameters:
        - in: path
          name: environment_id
          description: Environment UUID
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1EnvironmentsEnvironmentId"
        required: true
      responses:
        "200":
          description: Update a environments attributes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnvironmentEntryEntity"
      tags:
        - environments
      operationId: patchV1EnvironmentsEnvironmentId
      x-speakeasy-entity-operation: Environment#update
    get:
      summary: Retrieve a single environment
      description: Retrieves a single environment by ID
      parameters:
        - in: path
          name: environment_id
          description: Environment UUID
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      responses:
        "200":
          description: Retrieves a single environment by ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnvironmentEntryEntity"
      tags:
        - environments
      operationId: getV1EnvironmentsEnvironmentId
      x-speakeasy-entity-operation: Environment#read
  /v1/services:
    post:
      summary: Create a service
      description: Creates a service for the organization, you may also create or
        attach functionalities to the service on create.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1Services"
        required: true
      responses:
        "201":
          description: Creates a service for the organization, you may also create or
            attach functionalities to the service on create.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceEntity"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEntity"
      tags:
        - services
      operationId: postV1Services
      x-speakeasy-entity-operation: Service#create
    get:
      summary: List all services
      description: List all of the services that have been added to the organization.
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: labels
          description: A comma separated list of label key / values in the format of
            'key=value,key2=value2'. To filter change events that have a key
            (with no specific value), omit the value
          required: false
          schema:
            type: string
        - in: query
          name: query
          description: A query to search services by their name or description
          required: false
          schema:
            type: string
        - in: query
          name: name
          description: A query to search services by their name
          required: false
          schema:
            type: string
        - in: query
          name: tiers
          description: A query to search services by their tier
          required: false
          schema:
            type: string
        - in: query
          name: impacted
          description: A query to search services by if they are impacted with active
            incidents
          required: false
          schema:
            type: string
        - in: query
          name: owner
          description: A query to search services by their owner
          required: false
          schema:
            type: string
        - in: query
          name: responding_teams
          description: A comma separated list of team ids
          required: false
          schema:
            type: string
        - in: query
          name: functionalities
          description: A comma separated list of functionality ids
          required: false
          schema:
            type: string
        - in: query
          name: available_downstream_dependencies_for_id
          description: A query to find services that are available to be downstream
            dependencies for the passed service ID
          required: false
          schema:
            type: string
        - in: query
          name: available_upstream_dependencies_for_id
          description: A query to find services that are available to be upstream
            dependencies for the passed service ID
          required: false
          schema:
            type: string
        - in: query
          name: lite
          description: Boolean to determine whether to return a slimified version of the
            services object
          required: false
          schema:
            type: boolean
        - in: query
          name: include
          description: Use in conjunction with lite param to specify additional attributes
            to include
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: List all of the services that have been added to the organization.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceEntityPaginated"
      tags:
        - services
      operationId: getV1Services
      x-speakeasy-entity-operation: Services#read
  /v1/services/service_links:
    post:
      summary: Bulk create services and service links
      description: Creates a service with the appropriate integration for each
        external service ID passed
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1ServicesServiceLinks"
        required: true
      responses:
        "201":
          description: Creates a service with the appropriate integration for each
            external service ID passed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ServiceLinkEntity"
      tags:
        - services
      operationId: postV1ServicesServiceLinks
  "/v1/services/{service_id}":
    delete:
      summary: Delete a service
      description: Deletes the service from FireHydrant.
      parameters:
        - in: path
          name: service_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      responses:
        "200":
          description: Deletes the service from FireHydrant.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceEntity"
      tags:
        - services
      operationId: deleteV1ServicesServiceId
      x-speakeasy-entity-operation: Service#delete
    patch:
      summary: Update a service
      description: >
        Update a services attributes, you may also add or remove functionalities
        from the service as well.

        Note: You may not remove or add individual label key/value pairs. You must include the entire object to override label values.
      parameters:
        - in: path
          name: service_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1ServicesServiceId"
        required: true
      responses:
        "200":
          description: >
            Update a services attributes, you may also add or remove
            functionalities from the service as well.

            Note: You may not remove or add individual label key/value pairs. You must include the entire object to override label values.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceEntity"
      tags:
        - services
      operationId: patchV1ServicesServiceId
      x-speakeasy-entity-operation: Service#update
    get:
      summary: Retrieve a single service
      description: Retrieves a single service by ID
      parameters:
        - in: path
          name: service_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      responses:
        "200":
          description: Retrieves a single service by ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceEntity"
      tags:
        - services
      operationId: getV1ServicesServiceId
      x-speakeasy-entity-operation: Service#read
  "/v1/services/{service_id}/dependencies":
    get:
      summary: Retrieve a service's dependencies
      description: Retrieves a service's dependencies
      parameters:
        - in: path
          name: service_id
          required: true
          schema:
            type: string
        - in: query
          name: flatten
          description: If true, returns all dependencies in one array. If false, splits
            dependencies into different arrays for child and parent dependencies
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Retrieves a service's dependencies
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceWithAllDependenciesEntity"
      tags:
        - services
      operationId: getV1ServicesServiceIdDependencies
  "/v1/services/{service_id}/available_upstream_dependencies":
    get:
      summary: Retrieve all available upstream dependencies
      description: Retrieves all services that are available to be upstream dependencies
      parameters:
        - in: path
          name: service_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieves all services that are available to be upstream dependencies
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceEntity"
      tags:
        - services
      operationId: getV1ServicesServiceIdAvailableUpstreamDependencies
  "/v1/services/{service_id}/available_downstream_dependencies":
    get:
      summary: Retrieve all available downstream dependencies
      description: Retrieves all services that are available to be downstream dependencies
      parameters:
        - in: path
          name: service_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieves all services that are available to be downstream
            dependencies
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceEntity"
      tags:
        - services
      operationId: getV1ServicesServiceIdAvailableDownstreamDependencies
  "/v1/services/{service_id}/service_links/{remote_id}":
    delete:
      summary: Delete a service link
      description: Deletes a service link from FireHydrant.
      parameters:
        - in: path
          name: service_id
          required: true
          schema:
            type: string
        - in: path
          name: remote_id
          description: |
            The external service ID which can be found in the JSON
            from GET services/:service_id endpoint under
            functionalities > external_resources > remote_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Deletes a service link from FireHydrant.
      tags:
        - services
      operationId: deleteV1ServicesServiceIdServiceLinksRemoteId
  "/v1/services/{service_id}/checklist_response/{checklist_id}":
    post:
      summary: Record a response for a checklist item
      description: Creates a response for a checklist item
      parameters:
        - in: path
          name: service_id
          required: true
          schema:
            type: string
        - in: path
          name: checklist_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1ServicesServiceIdChecklistResponseChecklistId"
        required: true
      responses:
        "201":
          description: Creates a response for a checklist item
      tags:
        - services
      operationId: postV1ServicesServiceIdChecklistResponseChecklistId
  /v1/service_dependencies:
    post:
      summary: Create a service dependency
      description: Creates a service dependency relationship between two services
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1ServiceDependencies"
        required: true
      responses:
        "201":
          description: Creates a service dependency relationship between two services
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceDependencyEntity"
      tags:
        - service_dependencies
      operationId: postV1ServiceDependencies
      x-speakeasy-entity-operation: ServiceDependency#create
  "/v1/service_dependencies/{service_dependency_id}":
    delete:
      summary: Delete a service dependency
      description: Deletes a single service dependency
      parameters:
        - in: path
          name: service_dependency_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      responses:
        "200":
          description: Deletes a single service dependency
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceDependencyEntity"
      tags:
        - service_dependencies
      operationId: deleteV1ServiceDependenciesServiceDependencyId
      x-speakeasy-entity-operation: ServiceDependency#delete
    patch:
      summary: Update a service dependency
      description: Update the notes of the service dependency
      parameters:
        - in: path
          name: service_dependency_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1ServiceDependenciesServiceDependencyId"
        required: true
      responses:
        "200":
          description: Update the notes of the service dependency
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceDependencyEntity"
      tags:
        - service_dependencies
      operationId: patchV1ServiceDependenciesServiceDependencyId
      x-speakeasy-entity-operation: ServiceDependency#update
    get:
      summary: Retrieve a single service dependency
      description: Retrieves a single service dependency by ID
      parameters:
        - in: path
          name: service_dependency_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      responses:
        "200":
          description: Retrieves a single service dependency by ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceDependencyEntity"
      tags:
        - service_dependencies
      operationId: getV1ServiceDependenciesServiceDependencyId
      x-speakeasy-entity-operation: ServiceDependency#read
  /v1/functionalities:
    post:
      summary: Create a functionality
      description: Creates a functionality for the organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1Functionalities"
        required: true
      responses:
        "201":
          description: Creates a functionality for the organization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FunctionalityEntity"
      tags:
        - functionalities
      operationId: postV1Functionalities
      x-speakeasy-entity-operation: Functionality#create
    get:
      summary: List all functionalities
      description: List all of the functionalities that have been added to the organiation
      parameters:
        - in: query
          name: query
          description: A query to search functionalities by their name or description
          required: false
          schema:
            type: string
        - in: query
          name: name
          description: A query to search functionalities by their name
          required: false
          schema:
            type: string
        - in: query
          name: impacted
          description: A query to search services by if they are impacted with active
            incidents
          required: false
          schema:
            type: string
        - in: query
          name: labels
          description: A comma separated list of label key / values in the format of
            'key=value,key2=value2'. To filter change events that have a key
            (with no specific value), omit the value
          required: false
          schema:
            type: string
        - in: query
          name: owner
          description: A query to search functionalities by their owning team ID
          required: false
          schema:
            type: string
        - in: query
          name: lite
          description: Boolean to determine whether to return a slimified version of the
            functionalities object
          required: false
          schema:
            type: boolean
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: List all of the functionalities that have been added to the
            organiation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FunctionalityEntityPaginated"
      tags:
        - functionalities
      operationId: getV1Functionalities
      x-speakeasy-entity-operation: Functionalities#read
  "/v1/functionalities/{functionality_id}":
    delete:
      summary: Archive a functionality
      description: Archive a functionality
      parameters:
        - in: path
          name: functionality_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      responses:
        "200":
          description: Archive a functionality
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FunctionalityEntity"
      tags:
        - functionalities
      operationId: deleteV1FunctionalitiesFunctionalityId
      x-speakeasy-entity-operation: Functionality#delete
    patch:
      summary: Update a functionality
      description: Update a functionalities attributes
      parameters:
        - in: path
          name: functionality_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1FunctionalitiesFunctionalityId"
        required: true
      responses:
        "200":
          description: Update a functionalities attributes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FunctionalityEntity"
      tags:
        - functionalities
      operationId: patchV1FunctionalitiesFunctionalityId
      x-speakeasy-entity-operation: Functionality#update
    get:
      summary: Retrieve a single functionality
      description: Retrieves a single functionality by ID
      parameters:
        - in: path
          name: functionality_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      responses:
        "200":
          description: Retrieves a single functionality by ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FunctionalityEntity"
      tags:
        - functionalities
      operationId: getV1FunctionalitiesFunctionalityId
      x-speakeasy-entity-operation: Functionality#read
  "/v1/functionalities/{functionality_id}/services":
    get:
      parameters:
        - in: path
          name: functionality_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: get Service(s)
      tags:
        - functionalities
      operationId: getV1FunctionalitiesFunctionalityIdServices
  /v1/teams:
    post:
      summary: Create a team
      description: Create a new team
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1Teams"
        required: true
      responses:
        "201":
          description: Create a new team
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamEntity"
      tags:
        - teams
      operationId: postV1Teams
      x-speakeasy-entity-operation: Team#create
    get:
      summary: List all teams
      description: List all of the teams in the organization
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: query
          description: A query to search teams by their name or description
          required: false
          schema:
            type: string
        - in: query
          name: name
          description: A query to search teams by their name
          required: false
          schema:
            type: string
        - in: query
          name: services
          description: A comma separated list of service IDs
          required: false
          schema:
            type: string
        - in: query
          name: default_incident_role
          description: Filter by teams that have or do not have members with a default
            incident role asssigned. Value may be 'present', 'blank', or the ID
            of an incident role.
          required: false
          schema:
            type: string
        - in: query
          name: lite
          description: Boolean to determine whether to return a slimified version of the
            teams object
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: List all of the teams in the organization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamEntityPaginated"
      tags:
        - teams
      operationId: getV1Teams
      x-speakeasy-entity-operation: Teams#read
  "/v1/teams/{team_id}":
    delete:
      summary: Archive a team
      description: Archives an team which will hide it from lists and metrics
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      responses:
        "200":
          description: Archives an team which will hide it from lists and metrics
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamEntity"
      tags:
        - teams
      operationId: deleteV1TeamsTeamId
      x-speakeasy-entity-operation: Team#delete
    patch:
      summary: Update a team
      description: Update a single team from its ID
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1TeamsTeamId"
        required: true
      responses:
        "200":
          description: Update a single team from its ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamEntity"
      tags:
        - teams
      operationId: patchV1TeamsTeamId
      x-speakeasy-entity-operation: Team#update
    get:
      summary: Retrieve a team
      description: Retrieve a single team from its ID
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
        - in: query
          name: lite
          description: Boolean to determine whether to return a slimified version of the
            teams object
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Retrieve a single team from its ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamEntity"
      tags:
        - teams
      operationId: getV1TeamsTeamId
      x-speakeasy-entity-operation: Team#read
  "/v1/teams/{team_id}/escalation_policies":
    post:
      summary: Create an escalation policy
      description: Create a Signals escalation policy for a team.
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1TeamsTeamIdEscalationPolicies"
        required: true
      responses:
        "201":
          description: Create a Signals escalation policy for a team.
      tags:
        - teams
      operationId: postV1TeamsTeamIdEscalationPolicies
      # x-speakeasy-entity-operation: TeamEscalationPolicy#create
    get:
      summary: List escalation policies
      description: List all Signals escalation policies for a team.
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            type: string
        - in: query
          name: query
          description: A query string for searching through the list of escalation policies.
          required: false
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: List all Signals escalation policies for a team.
      tags:
        - teams
      operationId: getV1TeamsTeamIdEscalationPolicies
      # x-speakeasy-entity-operation: TeamEscalationPolicies#read
  "/v1/teams/{team_id}/escalation_policies/{id}":
    delete:
      summary: Delete an escalation policy
      description: Delete a Signals escalation policy by ID
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete a Signals escalation policy by ID
      tags:
        - teams
      operationId: deleteV1TeamsTeamIdEscalationPoliciesId
      # x-speakeasy-entity-operation: TeamEscalationPolicy#delete
    patch:
      summary: Update an escalation policy
      description: Update a Signals escalation policy by ID
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1TeamsTeamIdEscalationPoliciesId"
        required: true
      responses:
        "200":
          description: Update a Signals escalation policy by ID
      tags:
        - teams
      operationId: patchV1TeamsTeamIdEscalationPoliciesId
      # x-speakeasy-entity-operation: TeamEscalationPolicy#update
    get:
      summary: Get an escalation policy
      description: Get a Signals escalation policy by ID
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a Signals escalation policy by ID
      tags:
        - teams
      operationId: getV1TeamsTeamIdEscalationPoliciesId
      # x-speakeasy-entity-operation: TeamEscalationPolicy#read
  "/v1/teams/{team_id}/on_call_schedules":
    post:
      summary: Create an on-call schedule
      description: Create a Signals on-call schedule for a team.
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1TeamsTeamIdOnCallSchedules"
        required: true
      responses:
        "201":
          description: Create a Signals on-call schedule for a team.
      tags:
        - teams
      operationId: postV1TeamsTeamIdOnCallSchedules
    get:
      summary: List on-call schedules
      description: List all Signals on-call schedules for a team.
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            type: string
        - in: query
          name: query
          description: A query string for searching through the list of on-call schedules.
          required: false
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: List all Signals on-call schedules for a team.
      tags:
        - teams
      operationId: getV1TeamsTeamIdOnCallSchedules
  "/v1/teams/{team_id}/on_call_schedules/{schedule_id}":
    delete:
      summary: Delete an on-call schedule
      description: Delete a Signals on-call schedule by ID
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            type: string
        - in: path
          name: schedule_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete a Signals on-call schedule by ID
      tags:
        - teams
      operationId: deleteV1TeamsTeamIdOnCallSchedulesScheduleId
    patch:
      summary: Update an on-call schedule
      description: Update a Signals on-call schedule by ID
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            type: string
        - in: path
          name: schedule_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1TeamsTeamIdOnCallSchedulesScheduleId"
        required: true
      responses:
        "200":
          description: Update a Signals on-call schedule by ID
      tags:
        - teams
      operationId: patchV1TeamsTeamIdOnCallSchedulesScheduleId
    get:
      summary: Get an on-call schedule
      description: Get a Signals on-call schedule by ID
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            type: string
        - in: path
          name: schedule_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a Signals on-call schedule by ID
      tags:
        - teams
      operationId: getV1TeamsTeamIdOnCallSchedulesScheduleId
  "/v1/teams/{team_id}/on_call_schedules/{schedule_id}/shifts":
    post:
      summary: Create an on-call shift
      description: Create a Signals on-call shift in a schedule.
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            type: string
        - in: path
          name: schedule_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1TeamsTeamIdOnCallSchedulesScheduleIdShifts"
        required: true
      responses:
        "201":
          description: Create a Signals on-call shift in a schedule.
      tags:
        - teams
      operationId: postV1TeamsTeamIdOnCallSchedulesScheduleIdShifts
  "/v1/teams/{team_id}/on_call_schedules/{schedule_id}/shifts/{id}":
    delete:
      summary: Delete an on-call shift
      description: Delete a Signals on-call shift by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: team_id
          required: true
          schema:
            type: string
        - in: path
          name: schedule_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete a Signals on-call shift by ID
      tags:
        - teams
      operationId: deleteV1TeamsTeamIdOnCallSchedulesScheduleIdShiftsId
    patch:
      summary: Update an on-call shift
      description: Update a Signals on-call shift by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: team_id
          required: true
          schema:
            type: string
        - in: path
          name: schedule_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1TeamsTeamIdOnCallSchedulesScheduleIdShiftsId"
        required: true
      responses:
        "200":
          description: Update a Signals on-call shift by ID
      tags:
        - teams
      operationId: patchV1TeamsTeamIdOnCallSchedulesScheduleIdShiftsId
    get:
      summary: Get an on-call shift
      description: Get a Signals on-call shift by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: team_id
          required: true
          schema:
            type: string
        - in: path
          name: schedule_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a Signals on-call shift by ID
      tags:
        - teams
      operationId: getV1TeamsTeamIdOnCallSchedulesScheduleIdShiftsId
  "/v1/teams/{team_id}/signal_rules":
    post:
      summary: Create a Signals rule
      description: Create a Signals rule for a team.
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1TeamsTeamIdSignalRules"
        required: true
      responses:
        "201":
          description: Create a Signals rule for a team.
      tags:
        - teams
      operationId: postV1TeamsTeamIdSignalRules
    get:
      summary: List Signals rules
      description: List all Signals rules for a team.
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            type: string
        - in: query
          name: query
          description: A query string for searching through the list of alerting rules.
          required: false
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: List all Signals rules for a team.
      tags:
        - teams
      operationId: getV1TeamsTeamIdSignalRules
  "/v1/teams/{team_id}/signal_rules/{id}":
    delete:
      summary: Delete a Signals rule
      description: Delete a Signals rule by ID
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete a Signals rule by ID
      tags:
        - teams
      operationId: deleteV1TeamsTeamIdSignalRulesId
    patch:
      summary: Update a Signals rule
      description: Update a Signals rule by ID
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1TeamsTeamIdSignalRulesId"
        required: true
      responses:
        "200":
          description: Update a Signals rule by ID
      tags:
        - teams
      operationId: patchV1TeamsTeamIdSignalRulesId
    get:
      summary: Get a Signals rule
      description: Get a Signals rule by ID.
      parameters:
        - in: path
          name: team_id
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a Signals rule by ID.
      tags:
        - teams
      operationId: getV1TeamsTeamIdSignalRulesId
  /v1/changes:
    post:
      description: Create a new change entry
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1Changes"
        required: true
      responses:
        "201":
          description: Create a new change entry
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeEntity"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEntity"
      tags:
        - changes
      operationId: postV1Changes
    get:
      description: Lists all changes
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: query
          description: Filter changes by summary
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Lists all changes
      tags:
        - changes
      operationId: getV1Changes
  "/v1/changes/{change_id}":
    delete:
      description: Archive a change entry
      parameters:
        - in: path
          name: change_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Archive a change entry
      tags:
        - changes
      operationId: deleteV1ChangesChangeId
    patch:
      description: Update a change entry
      parameters:
        - in: path
          name: change_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1ChangesChangeId"
        required: true
      responses:
        "200":
          description: Update a change entry
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeEntity"
      tags:
        - changes
      operationId: patchV1ChangesChangeId
  "/v1/changes/{change_id}/identities":
    post:
      description: Create an identity for this change
      parameters:
        - in: path
          name: change_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1ChangesChangeIdIdentities"
        required: true
      responses:
        "201":
          description: Create an identity for this change
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeIdentityEntity"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEntity"
      tags:
        - changes
      operationId: postV1ChangesChangeIdIdentities
    get:
      description: Retrieve all identities for the change
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
        - in: path
          name: change_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieve all identities for the change
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeIdentityEntityPaginated"
      tags:
        - changes
      operationId: getV1ChangesChangeIdIdentities
  "/v1/changes/{change_id}/identities/{identity_id}":
    delete:
      description: Delete an identity
      parameters:
        - in: path
          name: identity_id
          required: true
          schema:
            type: string
        - in: path
          name: change_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete an identity
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEntity"
      tags:
        - changes
      operationId: deleteV1ChangesChangeIdIdentitiesIdentityId
    patch:
      description: Update an identity
      parameters:
        - in: path
          name: identity_id
          required: true
          schema:
            type: string
        - in: path
          name: change_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1ChangesChangeIdIdentitiesIdentityId"
        required: true
      responses:
        "200":
          description: Update an identity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeIdentityEntity"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEntity"
      tags:
        - changes
      operationId: patchV1ChangesChangeIdIdentitiesIdentityId
  /v1/changes/events:
    post:
      summary: Create a change event
      description: Create a change event
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1ChangesEvents"
        required: true
      responses:
        "201":
          description: Create a change event
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeEventEntity"
      tags:
        - changes
      operationId: postV1ChangesEvents
    get:
      summary: List change events
      description: "List change events for the organization. Note: Not all information
        is included on a change event like attachments and related changes. You
        must fetch a change event separately to retrieve all of the information
        about it"
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: saved_search_id
          description: The id of a previously saved search.
          required: false
          schema:
            type: string
        - in: query
          name: query
          description: A text query for change events
          required: false
          schema:
            type: string
        - in: query
          name: labels
          description: A comma separated list of label key / values in the format of
            "key=value,key2=value2". To filter change events that have a key
            (with no specific value), omit the value
          required: false
          schema:
            type: string
        - in: query
          name: environments
          description: A comma separated list of environment IDs
          required: false
          schema:
            type: string
        - in: query
          name: services
          description: A comma separated list of service IDs
          required: false
          schema:
            type: string
        - in: query
          name: starts_at
          description: The start time to start returning change events from
          required: false
          schema:
            type: string
        - in: query
          name: ends_at
          description: The end time to return change events up to
          required: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: "List change events for the organization. Note: Not all information
            is included on a change event like attachments and related changes.
            You must fetch a change event separately to retrieve all of the
            information about it"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeEventSlimEntityPaginated"
      tags:
        - changes
      operationId: getV1ChangesEvents
  "/v1/changes/events/{change_event_id}":
    delete:
      summary: Delete a change event
      description: Delete a change event
      parameters:
        - in: path
          name: change_event_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete a change event
      tags:
        - changes
      operationId: deleteV1ChangesEventsChangeEventId
    patch:
      summary: Update a change event
      description: Update a change event
      parameters:
        - in: path
          name: change_event_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1ChangesEventsChangeEventId"
        required: true
      responses:
        "200":
          description: Update a change event
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeEventEntity"
      tags:
        - changes
      operationId: patchV1ChangesEventsChangeEventId
    get:
      summary: Retrieve a change event
      description: Retrieve a change event
      parameters:
        - in: path
          name: change_event_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieve a change event
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeEventEntity"
      tags:
        - changes
      operationId: getV1ChangesEventsChangeEventId
  /v1/change_types:
    get:
      description: Lists all change types
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Lists all change types
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangeTypeEntityPaginated"
      tags:
        - change_types
      operationId: getV1ChangeTypes
  /v1/entitlements:
    get:
      description: Retrieve all entitlements
      parameters:
        - in: query
          name: name
          description: Name of Entitlement
          required: false
          schema:
            type: string
        - in: query
          name: type
          description: Type of Entitlement
          required: false
          schema:
            type: string
            enum:
              - quota
              - access
      responses:
        "200":
          description: Retrieve all entitlements
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntitlementEntityPaginated"
      tags:
        - entitlements
      operationId: getV1Entitlements
  /v1/incidents:
    post:
      summary: Create an incident
      description: Create a new incident
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1Incidents"
        required: true
      responses:
        "201":
          description: Create a new incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentEntity"
      tags:
        - incidents
      operationId: postV1Incidents
    get:
      summary: List all incidents
      description: List all of the incidents in the organization
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: conditions
          description: A JSON string that defines 'logic' and 'user_data'
          required: false
          schema:
            type: string
        - in: query
          name: environments
          description: A comma separated list of environment IDs or 'is_empty' to filter
            for incidents with no impacted environments
          required: false
          schema:
            type: string
        - in: query
          name: services
          description: A comma separated list of service IDs or 'is_empty' to filter for
            incidents with no impacted services
          required: false
          schema:
            type: string
        - in: query
          name: functionalities
          description: A comma separated list of functionality IDs or 'is_empty' to filter
            for incidents with no impacted functionalities
          required: false
          schema:
            type: string
        - in: query
          name: excluded_infrastructure_ids
          description: A comma separated list of infrastructure IDs. Returns incidents
            that do not have the following infrastructure ids associated with
            them.
          required: false
          schema:
            type: string
        - in: query
          name: teams
          description: A comma separated list of team IDs
          required: false
          schema:
            type: string
        - in: query
          name: assigned_teams
          description: A comma separated list of IDs for assigned teams or 'is_empty' to
            filter for incidents with no active team assignments
          required: false
          schema:
            type: string
        - in: query
          name: status
          description: Incident status
          required: false
          schema:
            type: string
        - in: query
          name: start_date
          description: Filters for incidents that started on or after this date
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: end_date
          description: Filters for incidents that started on or before this date
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: resolved_at_or_after
          description: Filters for incidents that were resolved at or after this time.
            Combine this with the `current_milestones` parameter if you wish to
            omit incidents that were re-opened and are still active.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: resolved_at_or_before
          description: Filters for incidents that were resolved at or before this time.
            Combine this with the `current_milestones` parameter if you wish to
            omit incidents that were re-opened and are still active.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: created_at_or_after
          description: Filters for incidents that were created at or after this time
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: created_at_or_before
          description: Filters for incidents that were created at or before this time
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: query
          description: A text query for an incident that searches on name, summary, and
            desciption
          required: false
          schema:
            type: string
        - in: query
          name: name
          description: A query to search incidents by their name
          required: false
          schema:
            type: string
        - in: query
          name: saved_search_id
          description: The id of a previously saved search.
          required: false
          schema:
            type: string
        - in: query
          name: priorities
          description: A text value of priority
          required: false
          schema:
            type: string
        - in: query
          name: priority_not_set
          description: Flag for including incidents where priority has not been set
          required: false
          schema:
            type: boolean
        - in: query
          name: severities
          description: A text value of severity
          required: false
          schema:
            type: string
        - in: query
          name: severity_not_set
          description: Flag for including incidents where severity has not been set
          required: false
          schema:
            type: boolean
        - in: query
          name: current_milestones
          description: A comma separated list of current milestones
          required: false
          schema:
            type: string
        - in: query
          name: tags
          description: A comma separated list of tags
          required: false
          schema:
            type: string
        - in: query
          name: tag_match_strategy
          description: A matching strategy for the tags provided
          required: false
          schema:
            type: string
            enum:
              - any
              - match_all
              - exclude
        - in: query
          name: archived
          description: Return archived incidents
          required: false
          schema:
            type: boolean
        - in: query
          name: updated_after
          description: Filters for incidents that were updated after this date
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: updated_before
          description: Filters for incidents that were updated before this date
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: incident_type_id
          description: A comma separated list of incident type IDs
          required: false
          schema:
            type: string
      responses:
        "200":
          description: List all of the incidents in the organization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentEntityPaginated"
      tags:
        - incidents
      operationId: getV1Incidents
  "/v1/incidents/{incident_id}/channel":
    get:
      summary: Retrieve chat channel information for an incident
      description: Gives chat channel information for the specified incident
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Gives chat channel information for the specified incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incidents_ChannelEntity"
      tags:
        - incidents
      operationId: getV1IncidentsIncidentIdChannel
  "/v1/incidents/{incident_id}/close":
    put:
      summary: Close an incident
      description: Closes an incident and optionally close all children
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Closes an incident and optionally close all children
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentEntity"
      tags:
        - incidents
      operationId: putV1IncidentsIncidentIdClose
  "/v1/incidents/{incident_id}/resolve":
    put:
      summary: Resolve an active incident
      description: Resolves a currently active incident
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                milestone:
                  description: The slug of any milestone in the post-incident or closed phase to
                    set on the incident (and its children, if `resolve_children`
                    os set). Must be one of the configured milestones available
                    on this incident.
                  type: string
      responses:
        "200":
          description: Resolves a currently active incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentEntity"
      tags:
        - incidents
      operationId: putV1IncidentsIncidentIdResolve
  "/v1/incidents/{incident_id}":
    delete:
      summary: Archive an incident
      description: Archives an incident which will hide it from lists and metrics
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Archives an incident which will hide it from lists and metrics
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentEntity"
      tags:
        - incidents
      operationId: deleteV1IncidentsIncidentId
    patch:
      summary: Update an incident
      description: Updates an incident with provided parameters
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1IncidentsIncidentId"
        required: true
      responses:
        "200":
          description: Updates an incident with provided parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentEntity"
      tags:
        - incidents
      operationId: patchV1IncidentsIncidentId
    get:
      summary: Retrieve an incident
      description: Retrieve a single incident from its ID
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieve a single incident from its ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentEntity"
      tags:
        - incidents
      operationId: getV1IncidentsIncidentId
  "/v1/incidents/{incident_id}/unarchive":
    post:
      summary: Unarchives an incident
      description: Unarchives an incident
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Unarchives an incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentEntity"
      tags:
        - incidents
      operationId: postV1IncidentsIncidentIdUnarchive
  "/v1/incidents/{incident_id}/alerts":
    post:
      summary: Attach an alert to an incident
      description: Add an alert to an incident. FireHydrant needs to have ingested the
        alert from a third party system in order to attach it to the incident.
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        description: Array of alert IDs to be assigned to the incident
        required: true
      responses:
        "204":
          description: Add an alert to an incident. FireHydrant needs to have ingested the
            alert from a third party system in order to attach it to the
            incident.
      tags:
        - incidents
      operationId: postV1IncidentsIncidentIdAlerts
    get:
      summary: List alerts on an incident
      description: List alerts that have been attached to an incident
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List alerts that have been attached to an incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incidents_AlertEntityPaginated"
      tags:
        - incidents
      operationId: getV1IncidentsIncidentIdAlerts
  "/v1/incidents/{incident_id}/alerts/{incident_alert_id}/primary":
    patch:
      summary: Set an alert as primary
      description: Setting an alert as primary will overwrite milestone times in the
        FireHydrant incident with times included in the primary alert. Services
        attached to the primary alert will also be automatically added to the
        incident.
      parameters:
        - in: path
          name: incident_alert_id
          required: true
          schema:
            type: string
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1IncidentsIncidentIdAlertsIncidentAlertIdPrim\
                ary"
        required: true
      responses:
        "200":
          description: Setting an alert as primary will overwrite milestone times in the
            FireHydrant incident with times included in the primary alert.
            Services attached to the primary alert will also be automatically
            added to the incident.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incidents_AlertEntity"
      tags:
        - incidents
      operationId: patchV1IncidentsIncidentIdAlertsIncidentAlertIdPrimary
  "/v1/incidents/{incident_id}/alerts/{incident_alert_id}":
    delete:
      summary: Remove an alert
      description: Remove an alert from an incident
      parameters:
        - in: path
          name: incident_alert_id
          required: true
          schema:
            type: string
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Remove an alert from an incident
      tags:
        - incidents
      operationId: deleteV1IncidentsIncidentIdAlertsIncidentAlertId
  "/v1/incidents/{incident_id}/milestones/bulk_update":
    put:
      summary: Update milestone times
      description: |
        Update milestone times in bulk for a given incident. All milestone
        times for an incident must occur in chronological order
        corresponding to the configured order of milestones. If the result
        of this request would cause any milestone(s) to appear out of place,
        a 422 response will instead be returned. This includes milestones
        not explicitly submitted or updated in this request.
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/putV1IncidentsIncidentIdMilestonesBulkUpdate"
        required: true
      responses:
        "200":
          description: |
            Update milestone times in bulk for a given incident. All milestone
            times for an incident must occur in chronological order
            corresponding to the configured order of milestones. If the result
            of this request would cause any milestone(s) to appear out of place,
            a 422 response will instead be returned. This includes milestones
            not explicitly submitted or updated in this request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incidents_MilestoneEntityPaginated"
      tags:
        - incidents
      operationId: putV1IncidentsIncidentIdMilestonesBulkUpdate
  "/v1/incidents/{incident_id}/milestones":
    get:
      summary: List milestones on an incident
      description: List times and durations for each milestone on an incident
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List times and durations for each milestone on an incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incidents_MilestoneEntityPaginated"
      tags:
        - incidents
      operationId: getV1IncidentsIncidentIdMilestones
  "/v1/incidents/{incident_id}/related_change_events":
    post:
      summary: Add a related change to an incident
      description: Add a related change to an incident. Changes added to an incident
        can be causes, fixes, or suspects. To remove a change from an incident,
        the type field should be set to dismissed.
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1IncidentsIncidentIdRelatedChangeEvents"
        required: true
      responses:
        "201":
          description: Add a related change to an incident. Changes added to an incident
            can be causes, fixes, or suspects. To remove a change from an
            incident, the type field should be set to dismissed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incidents_RelatedChangeEventEntity"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEntity"
        "409":
          description: Already Added
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEntity"
      tags:
        - incidents
      operationId: postV1IncidentsIncidentIdRelatedChangeEvents
    get:
      summary: List related changes on an incident
      description: List related changes that have been attached to an incident
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: type
          description: The type of the relation to the incident
          required: false
          schema:
            type: string
            enum:
              - caused
              - fixed
              - suspect
              - dismissed
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List related changes that have been attached to an incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incidents_RelatedChangeEventEntityPaginated"
      tags:
        - incidents
      operationId: getV1IncidentsIncidentIdRelatedChangeEvents
  "/v1/incidents/{incident_id}/related_change_events/{related_change_event_id}":
    patch:
      summary: Update a change attached to an incident
      description: Update a change attached to an incident
      parameters:
        - in: path
          name: related_change_event_id
          required: true
          schema:
            type: string
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1IncidentsIncidentIdRelatedChangeEventsRelate\
                dChangeEventId"
        required: true
      responses:
        "200":
          description: Update a change attached to an incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incidents_RelatedChangeEventEntity"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEntity"
        "409":
          description: Already Added
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEntity"
      tags:
        - incidents
      operationId: patchV1IncidentsIncidentIdRelatedChangeEventsRelatedChangeEventId
  "/v1/incidents/{incident_id}/status_pages":
    post:
      summary: Add a status page to an incident
      description: Add a status page to an incident.
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1IncidentsIncidentIdStatusPages"
        required: true
      responses:
        "201":
          description: Add a status page to an incident.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incidents_StatusPageEntity"
      tags:
        - incidents
      operationId: postV1IncidentsIncidentIdStatusPages
    get:
      summary: List status pages on an incident
      description: List status pages that are attached to an incident
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List status pages that are attached to an incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incidents_StatusPageEntityPaginated"
      tags:
        - incidents
      operationId: getV1IncidentsIncidentIdStatusPages
  "/v1/incidents/{incident_id}/status_pages/{status_page_id}":
    delete:
      summary: Remove a status page incident attached to an incident
      description: Remove a status page incident attached to an incident
      parameters:
        - in: path
          name: status_page_id
          required: true
          schema:
            type: string
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Remove a status page incident attached to an incident
      tags:
        - incidents
      operationId: deleteV1IncidentsIncidentIdStatusPagesStatusPageId
  "/v1/incidents/{incident_id}/task_lists":
    post:
      summary: Adds tasks to incident from task list
      description: Add all tasks from list to incident
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1IncidentsIncidentIdTaskLists"
        required: true
      responses:
        "201":
          description: Add all tasks from list to incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskEntity"
      tags:
        - incidents
      operationId: postV1IncidentsIncidentIdTaskLists
  "/v1/incidents/{incident_id}/tasks":
    post:
      summary: Creates a new task
      description: Create a task
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1IncidentsIncidentIdTasks"
        required: true
      responses:
        "201":
          description: Create a task
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskEntity"
      tags:
        - incidents
      operationId: postV1IncidentsIncidentIdTasks
    get:
      summary: Retrieve tasks
      description: Retrieve a list of all tasks for a specific incident
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieve a list of all tasks for a specific incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskEntityPaginated"
      tags:
        - incidents
      operationId: getV1IncidentsIncidentIdTasks
  "/v1/incidents/{incident_id}/tasks/{task_id}":
    delete:
      summary: Deletes a task
      description: Delete a task
      parameters:
        - in: path
          name: task_id
          required: true
          schema:
            type: string
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete a task
      tags:
        - incidents
      operationId: deleteV1IncidentsIncidentIdTasksTaskId
    patch:
      summary: Update a task
      description: Update a task's attributes
      parameters:
        - in: path
          name: task_id
          required: true
          schema:
            type: string
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1IncidentsIncidentIdTasksTaskId"
        required: true
      responses:
        "200":
          description: Update a task's attributes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskEntity"
      tags:
        - incidents
      operationId: patchV1IncidentsIncidentIdTasksTaskId
    get:
      summary: Retrieve a single task for an incident
      description: Retrieve a single task for an incident
      parameters:
        - in: path
          name: task_id
          required: true
          schema:
            type: string
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieve a single task for an incident
      tags:
        - incidents
      operationId: getV1IncidentsIncidentIdTasksTaskId
  "/v1/incidents/{incident_id}/tasks/{task_id}/convert":
    post:
      summary: Creates a follow-up from a task, removing the task in the process
      description: Convert a task to a follow-up
      parameters:
        - in: path
          name: task_id
          required: true
          schema:
            type: string
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1IncidentsIncidentIdTasksTaskIdConvert"
        required: true
      responses:
        "201":
          description: Convert a task to a follow-up
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskEntityPaginated"
      tags:
        - incidents
      operationId: postV1IncidentsIncidentIdTasksTaskIdConvert
  "/v1/incidents/{incident_id}/links":
    get:
      summary: List all the editable links on an incident
      description: List all the editable, external incident links attached to an incident
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List all the editable, external incident links attached to an
            incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Attachments_LinkEntityPaginated"
      tags:
        - incidents
      operationId: getV1IncidentsIncidentIdLinks
    post:
      summary: Add a link to the incident
      description: Allows adding adhoc links to an incident as an attachment
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1IncidentsIncidentIdLinks"
        required: true
      responses:
        "201":
          description: Allows adding adhoc links to an incident as an attachment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Attachments_LinkEntity"
      tags:
        - incidents
      operationId: postV1IncidentsIncidentIdLinks
  "/v1/incidents/{incident_id}/links/{link_id}":
    delete:
      summary: Deletes the external incident link
      description: Deletes the external incident link
      parameters:
        - in: path
          name: link_id
          required: true
          schema:
            type: string
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Deletes the external incident link
      tags:
        - incidents
      operationId: deleteV1IncidentsIncidentIdLinksLinkId
    put:
      summary: Updates the external incident link
      description: Updates the external incident link attributes
      parameters:
        - in: path
          name: link_id
          required: true
          schema:
            type: string
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/putV1IncidentsIncidentIdLinksLinkId"
        required: true
      responses:
        "200":
          description: Updates the external incident link attributes
      tags:
        - incidents
      operationId: putV1IncidentsIncidentIdLinksLinkId
  "/v1/incidents/{incident_id}/transcript":
    get:
      summary: Lists all of the messages in the incident's transcript
      description: Retrieve the transcript for a specific incident
      parameters:
        - in: query
          name: after
          description: The ID of the transcript entry to start after.
          required: false
          schema:
            type: string
        - in: query
          name: before
          description: The ID of the transcript entry to start before.
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: The order to sort the transcript entries.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: asc
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieve the transcript for a specific incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicAPI_V1_Incidents_TranscriptEntity"
      tags:
        - incidents
      operationId: getV1IncidentsIncidentIdTranscript
  "/v1/incidents/{incident_id}/transcript/{transcript_id}":
    delete:
      parameters:
        - in: path
          name: transcript_id
          required: true
          schema:
            type: string
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: deleted Transcript
      tags:
        - incidents
      operationId: deleteV1IncidentsIncidentIdTranscriptTranscriptId
  "/v1/incidents/{incident_id}/similar":
    get:
      parameters:
        - in: query
          name: threshold
          required: false
          schema:
            type: number
            format: float
            default: 0.2
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            format: int32
            default: 5
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: get Similar(s)
      tags:
        - incidents
      operationId: getV1IncidentsIncidentIdSimilar
  "/v1/incidents/{incident_id}/attachments":
    get:
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
        - in: query
          name: attachable_type
          required: false
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: get Attachment(s)
      tags:
        - incidents
      operationId: getV1IncidentsIncidentIdAttachments
    post:
      summary: Add an attachment to the incident timeline
      description: Allows adding image attachments to an incident
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                description:
                  type: string
                occurred_at:
                  type: string
                  format: date-time
                vote_direction:
                  type: string
                  enum:
                    - up
                    - down
              required:
                - file
        required: true
      responses:
        "201":
          description: Allows adding image attachments to an incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentAttachmentEntity"
      tags:
        - incidents
      operationId: postV1IncidentsIncidentIdAttachments
  "/v1/incidents/{incident_id}/events":
    get:
      summary: List events for an incident
      description: List all events for an incident. An event is a timeline entry. This
        can be filtered with params to retrieve events of a certain type.
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
        - in: query
          name: types
          description: A comma separated list of types of events to filter by
          required: false
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: List all events for an incident. An event is a timeline entry. This
            can be filtered with params to retrieve events of a certain type.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentEventEntityPaginated"
      tags:
        - incidents
      operationId: getV1IncidentsIncidentIdEvents
  "/v1/incidents/{incident_id}/events/{event_id}":
    delete:
      summary: Delete a single event for an incident
      description: Delete a single event for an incident
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
        - in: path
          name: event_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Delete a single event for an incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentEventEntity"
      tags:
        - incidents
      operationId: deleteV1IncidentsIncidentIdEventsEventId
    patch:
      summary: Update a single event for an incident
      description: Update a single event for an incident
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
        - in: path
          name: event_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Update a single event for an incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentEventEntity"
      tags:
        - incidents
      operationId: patchV1IncidentsIncidentIdEventsEventId
    get:
      summary: Retrieve a single event for an incident
      description: Retrieve a single event for an incident
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
        - in: path
          name: event_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieve a single event for an incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentEventEntity"
      tags:
        - incidents
      operationId: getV1IncidentsIncidentIdEventsEventId
  "/v1/incidents/{incident_id}/events/{event_id}/votes/status":
    get:
      summary: Returns the current vote counts for an object
      description: Returns the current vote counts for an object
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
        - in: path
          name: event_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns the current vote counts for an object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VotesEntity"
      tags:
        - incidents
      operationId: getV1IncidentsIncidentIdEventsEventIdVotesStatus
  "/v1/incidents/{incident_id}/events/{event_id}/votes":
    patch:
      summary: Update the votes on an object
      description: Allows for upvoting or downvoting an event
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
        - in: path
          name: event_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1IncidentsIncidentIdEventsEventIdVotes"
        required: true
      responses:
        "200":
          description: Allows for upvoting or downvoting an event
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VotesEntity"
      tags:
        - incidents
      operationId: patchV1IncidentsIncidentIdEventsEventIdVotes
  "/v1/incidents/{incident_id}/impact":
    patch:
      summary: Create a status update for an incident
      description: >
        Allows updating an incident's impacted infrastructure, with the option
        to

        move the incident into a different milestone and provide a note to update

        the incident timeline and any attached status pages. If this method is

        requested with the PUT verb, impacts will be completely replaced with the

        information in the request body, even if not provided (effectively clearing

        all impacts). If this method is requested with the PATCH verb, the provided

        impacts will be added or updated, but no impacts will be removed.
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1IncidentsIncidentIdImpact"
        required: true
      responses:
        "200":
          description: >
            Allows updating an incident's impacted infrastructure, with the
            option to

            move the incident into a different milestone and provide a note to update

            the incident timeline and any attached status pages. If this method is

            requested with the PUT verb, impacts will be completely replaced with the

            information in the request body, even if not provided (effectively clearing

            all impacts). If this method is requested with the PATCH verb, the provided

            impacts will be added or updated, but no impacts will be removed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentEntity"
      tags:
        - incidents
      operationId: patchV1IncidentsIncidentIdImpact
    put:
      summary: Create a status update for an incident
      description: >
        Allows updating an incident's impacted infrastructure, with the option
        to

        move the incident into a different milestone and provide a note to update

        the incident timeline and any attached status pages. If this method is

        requested with the PUT verb, impacts will be completely replaced with the

        information in the request body, even if not provided (effectively clearing

        all impacts). If this method is requested with the PATCH verb, the provided

        impacts will be added or updated, but no impacts will be removed.
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/putV1IncidentsIncidentIdImpact"
        required: true
      responses:
        "200":
          description: >
            Allows updating an incident's impacted infrastructure, with the
            option to

            move the incident into a different milestone and provide a note to update

            the incident timeline and any attached status pages. If this method is

            requested with the PUT verb, impacts will be completely replaced with the

            information in the request body, even if not provided (effectively clearing

            all impacts). If this method is requested with the PATCH verb, the provided

            impacts will be added or updated, but no impacts will be removed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentEntity"
      tags:
        - incidents
      operationId: putV1IncidentsIncidentIdImpact
  "/v1/incidents/{incident_id}/impact/{type}":
    post:
      summary: Add impacted infrastructure
      description: Add impacted infrastructure to an incident
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
        - in: path
          name: type
          required: true
          schema:
            type: string
            enum:
              - environments
              - functionalities
              - services
              - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1IncidentsIncidentIdImpactType"
        required: true
      responses:
        "201":
          description: Add impacted infrastructure to an incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentImpactEntity"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEntity"
      tags:
        - incidents
      operationId: postV1IncidentsIncidentIdImpactType
    get:
      summary: List impacted infrastructure
      description: List impacted infrastructure on an incident by specifying type
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
        - in: path
          name: type
          required: true
          schema:
            type: string
            enum:
              - environments
              - functionalities
              - services
              - customers
      responses:
        "200":
          description: List impacted infrastructure on an incident by specifying type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentImpactEntityPaginated"
      tags:
        - incidents
      operationId: getV1IncidentsIncidentIdImpactType
  "/v1/incidents/{incident_id}/impact/{type}/{id}":
    delete:
      summary: Remove impacted infrastructure on an incident
      description: Remove impacted infrastructure on an incident
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
        - in: path
          name: type
          required: true
          schema:
            type: string
            enum:
              - environments
              - functionalities
              - services
              - customers
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Remove impacted infrastructure on an incident
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEntity"
      tags:
        - incidents
      operationId: deleteV1IncidentsIncidentIdImpactTypeId
  "/v1/incidents/{incident_id}/notes":
    post:
      summary: Add a note to an incident
      description: Create a new note on for an incident. The visibility field on a
        note determines where it gets posted.
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1IncidentsIncidentIdNotes"
        required: true
      responses:
        "201":
          description: Create a new note on for an incident. The visibility field on a
            note determines where it gets posted.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event_NoteEntity"
      tags:
        - incidents
      operationId: postV1IncidentsIncidentIdNotes
  "/v1/incidents/{incident_id}/notes/{note_id}":
    patch:
      summary: Update a note
      description: Updates the body of a note
      parameters:
        - in: path
          name: note_id
          required: true
          schema:
            type: string
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1IncidentsIncidentIdNotesNoteId"
        required: true
      responses:
        "200":
          description: Updates the body of a note
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event_NoteEntity"
      tags:
        - incidents
      operationId: patchV1IncidentsIncidentIdNotesNoteId
  "/v1/incidents/{incident_id}/generic_chat_messages":
    post:
      summary: Add a generic chat message to the incident timeline.
      description: Create a new generic chat message on an incident timeline. These
        are independent of any specific chat provider.
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1IncidentsIncidentIdGenericChatMessages"
        required: true
      responses:
        "201":
          description: Create a new generic chat message on an incident timeline. These
            are independent of any specific chat provider.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event_GenericChatMessageEntity"
      tags:
        - incidents
      operationId: postV1IncidentsIncidentIdGenericChatMessages
  "/v1/incidents/{incident_id}/generic_chat_messages/{message_id}":
    delete:
      summary: Delete an existing generic chat message on an incident.
      description: Delete an existing generic chat message on an incident.
      parameters:
        - in: path
          name: message_id
          required: true
          schema:
            type: string
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Delete an existing generic chat message on an incident.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event_GenericChatMessageEntity"
      tags:
        - incidents
      operationId: deleteV1IncidentsIncidentIdGenericChatMessagesMessageId
    patch:
      summary: Update an existing generic chat message on an incident.
      description: Update an existing generic chat message on an incident.
      parameters:
        - in: path
          name: message_id
          required: true
          schema:
            type: string
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1IncidentsIncidentIdGenericChatMessagesMessag\
                eId"
        required: true
      responses:
        "200":
          description: Update an existing generic chat message on an incident.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event_GenericChatMessageEntity"
      tags:
        - incidents
      operationId: patchV1IncidentsIncidentIdGenericChatMessagesMessageId
  "/v1/incidents/{incident_id}/role_assignments":
    get:
      summary: List all assignees
      description: Retrieve a list of all of the current role assignments for the incident
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
        - in: query
          name: status
          description: Filter on status of the role assignment
          required: false
          schema:
            type: string
            enum:
              - active
              - inactive
      responses:
        "200":
          description: Retrieve a list of all of the current role assignments for the
            incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incidents_RoleAssignmentEntityPaginated"
      tags:
        - incidents
      operationId: getV1IncidentsIncidentIdRoleAssignments
    post:
      summary: Assign a role
      description: Assign a role to a user for this incident
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1IncidentsIncidentIdRoleAssignments"
        required: true
      responses:
        "201":
          description: Assign a role to a user for this incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incidents_RoleAssignmentEntity"
      tags:
        - incidents
      operationId: postV1IncidentsIncidentIdRoleAssignments
  "/v1/incidents/{incident_id}/role_assignments/{role_assignment_id}":
    delete:
      summary: Unassign a role
      description: Unassign a role from a user
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
        - in: path
          name: role_assignment_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Unassign a role from a user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incidents_RoleAssignmentEntity"
      tags:
        - incidents
      operationId: deleteV1IncidentsIncidentIdRoleAssignmentsRoleAssignmentId
  "/v1/incidents/{incident_id}/team_assignments":
    post:
      summary: Assign a team
      description: Assign a team for this incident
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1IncidentsIncidentIdTeamAssignments"
        required: true
      responses:
        "201":
          description: Assign a team for this incident
      tags:
        - incidents
      operationId: postV1IncidentsIncidentIdTeamAssignments
  "/v1/incidents/{incident_id}/team_assignments/{team_assignment_id}":
    delete:
      summary: Unassign a team
      description: Unassign a team from an incident
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
        - in: path
          name: team_assignment_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                role_assignment_ids:
                  description: Team role assignments to unassign from the incident
                  type: array
                  items:
                    type: string
      responses:
        "204":
          description: Unassign a team from an incident
      tags:
        - incidents
      operationId: deleteV1IncidentsIncidentIdTeamAssignmentsTeamAssignmentId
  "/v1/incidents/{incident_id}/users/{user_id}":
    get:
      summary: Get current role for user
      description: Retrieve a user with current roles for an incident
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieve a user with current roles for an incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incidents_RoleAssignmentEntity"
      tags:
        - incidents
      operationId: getV1IncidentsIncidentIdUsersUserId
  "/v1/incidents/{incident_id}/relationships":
    get:
      summary: List any parent/child relationships for an incident
      description: List any parent/child relationships for an incident
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List any parent/child relationships for an incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incidents_RelationshipsEntity"
      tags:
        - incidents
      operationId: getV1IncidentsIncidentIdRelationships
  /v1/incident_roles:
    get:
      summary: List all incident roles
      description: List all of the incident roles in the organization
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: List all of the incident roles in the organization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentRoleEntityPaginated"
      tags:
        - incident_roles
      operationId: getV1IncidentRoles
    post:
      summary: Create an incident role
      description: Create a new incident role
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1IncidentRoles"
        required: true
      responses:
        "201":
          description: Create a new incident role
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentRoleEntity"
      tags:
        - incident_roles
      operationId: postV1IncidentRoles
      x-speakeasy-entity-operation: IncidentRole#create
  "/v1/incident_roles/{incident_role_id}":
    delete:
      summary: Archive an incident role
      description: Archives an incident role which will hide it from lists and metrics
      parameters:
        - in: path
          name: incident_role_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      responses:
        "200":
          description: Archives an incident role which will hide it from lists and metrics
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentRoleEntity"
      tags:
        - incident_roles
      operationId: deleteV1IncidentRolesIncidentRoleId
      x-speakeasy-entity-operation: IncidentRole#delete
    patch:
      summary: Update an incident role
      description: Update a single incident role from its ID
      parameters:
        - in: path
          name: incident_role_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1IncidentRolesIncidentRoleId"
        required: true
      responses:
        "200":
          description: Update a single incident role from its ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentRoleEntity"
      tags:
        - incident_roles
      operationId: patchV1IncidentRolesIncidentRoleId
      x-speakeasy-entity-operation: IncidentRole#update
    get:
      summary: Retrieve an incident role
      description: Retrieve a single incident role from its ID
      parameters:
        - in: path
          name: incident_role_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      responses:
        "200":
          description: Retrieve a single incident role from its ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentRoleEntity"
      tags:
        - incident_roles
      operationId: getV1IncidentRolesIncidentRoleId
      x-speakeasy-entity-operation: IncidentRole#read
  /v1/incident_tags/validate:
    post:
      summary: Validate a list of tags
      description: Validate the format of a list of tags
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        description: A list of tags to validate
        required: true
      responses:
        "201":
          description: Validate the format of a list of tags
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagEntity"
      tags:
        - incident_tags
      operationId: postV1IncidentTagsValidate
  /v1/incident_tags:
    get:
      summary: List all incident tags
      description: List all of the incident tags in the organization
      parameters:
        - in: query
          name: prefix
          required: false
          schema:
            type: string
      responses:
        "200":
          description: List all of the incident tags in the organization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagEntityPaginated"
      tags:
        - incident_tags
      operationId: getV1IncidentTags
  /v1/incident_types:
    post:
      summary: Create an incident type
      description: Create a new incident type
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1IncidentTypes"
        required: true
      responses:
        "201":
          description: Create a new incident type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentTypeEntity"
      tags:
        - incident_types
      operationId: postV1IncidentTypes
      x-speakeasy-entity-operation: IncidentType#create
    get:
      summary: List all incident types
      description: List all of the incident types in the organization
      parameters:
        - in: query
          name: query
          description: A query to search incident types by their name
          required: false
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: List all of the incident types in the organization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentTypeEntityPaginated"
      tags:
        - incident_types
      operationId: getV1IncidentTypes
      x-speakeasy-entity-operation: IncidentTypes#read
  "/v1/incident_types/{id}":
    delete:
      summary: Archive an incident type
      description: Archives an incident type which will hide it from lists and metrics
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Archives an incident type which will hide it from lists and metrics
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentTypeEntity"
      tags:
        - incident_types
      operationId: deleteV1IncidentTypesId
      x-speakeasy-entity-operation: IncidentType#delete
    patch:
      summary: Update an incident type
      description: Update a single incident type from its ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1IncidentTypesId"
        required: true
      responses:
        "200":
          description: Update a single incident type from its ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentTypeEntity"
      tags:
        - incident_types
      operationId: patchV1IncidentTypesId
      x-speakeasy-entity-operation: IncidentType#update
    get:
      summary: Retrieve an incident type
      description: Retrieve a single incident type from its ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieve a single incident type from its ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentTypeEntity"
      tags:
        - incident_types
      operationId: getV1IncidentTypesId
      x-speakeasy-entity-operation: IncidentType#read
  /v1/integrations:
    get:
      responses:
        "200":
          description: get Integration(s)
      tags:
        - integrations
      operationId: getV1Integrations
  "/v1/integrations/{integration_id}":
    get:
      description: Retrieve a single integration
      parameters:
        - in: path
          name: integration_id
          description: Integration UUID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieve a single integration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Integrations_IntegrationEntity"
      tags:
        - integrations
      operationId: getV1IntegrationsIntegrationId
  "/v1/integrations/field_maps/{field_map_id}":
    patch:
      summary: Update field map
      description: Update field map
      parameters:
        - in: path
          name: field_map_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Update field map
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FieldMapping_FieldMapEntity"
      tags:
        - integrations
      operationId: patchV1IntegrationsFieldMapsFieldMapId
  "/v1/integrations/field_maps/{field_map_id}/available_fields":
    get:
      summary: Get mappable fields
      description: Get a description of the fields to which data can be mapped
      parameters:
        - in: path
          name: field_map_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a description of the fields to which data can be mapped
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FieldMapping_MappableFieldEntity"
      tags:
        - integrations
      operationId: getV1IntegrationsFieldMapsFieldMapIdAvailableFields
  /v1/integrations/connections:
    get:
      parameters:
        - in: query
          name: integration_slug
          description: Only return installed integrations with the supplied slugs (types).
          required: false
          schema:
            type: string
      responses:
        "200":
          description: get Connection(s)
      tags:
        - integrations
      operationId: getV1IntegrationsConnections
  "/v1/integrations/connections/{slug}":
    post:
      parameters:
        - in: path
          name: slug
          required: true
          schema:
            type: string
      responses:
        "201":
          description: created Connection
      tags:
        - integrations
      operationId: postV1IntegrationsConnectionsSlug
  "/v1/integrations/connections/{slug}/{connection_id}/refresh":
    patch:
      parameters:
        - in: path
          name: slug
          required: true
          schema:
            type: string
        - in: path
          name: connection_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: patched Refresh
      tags:
        - integrations
      operationId: patchV1IntegrationsConnectionsSlugConnectionIdRefresh
  "/v1/integrations/connections/{slug}/{connection_id}":
    patch:
      parameters:
        - in: path
          name: slug
          required: true
          schema:
            type: string
        - in: path
          name: connection_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: patched Connection
      tags:
        - integrations
      operationId: patchV1IntegrationsConnectionsSlugConnectionId
  "/v1/integrations/statuses/{slug}":
    get:
      parameters:
        - in: path
          name: slug
          required: true
          schema:
            type: string
      responses:
        "200":
          description: get Status(s)
      tags:
        - integrations
      operationId: getV1IntegrationsStatusesSlug
  /v1/integrations/aws/connections:
    get:
      summary: List AWS connections
      description: Lists the available and configured AWS integration connections for
        the authenticated organization.
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: aws_account_id
          description: AWS account ID containing the role to be assumed
          required: false
          schema:
            type: string
        - in: query
          name: target_arn
          description: ARN of the role to be assumed
          required: false
          schema:
            type: string
        - in: query
          name: external_id
          description: The external ID supplied when assuming the role
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Lists the available and configured AWS integration connections for
            the authenticated organization.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Integrations_Aws_ConnectionEntityPaginated"
      tags:
        - integrations
      operationId: getV1IntegrationsAwsConnections
  "/v1/integrations/aws/connections/{id}":
    patch:
      summary: Update an AWS connection
      description: Update the AWS connection with the provided data.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1IntegrationsAwsConnectionsId"
        required: true
      responses:
        "200":
          description: Update the AWS connection with the provided data.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Integrations_Aws_ConnectionEntity"
      tags:
        - integrations
      operationId: patchV1IntegrationsAwsConnectionsId
    get:
      summary: Retrieve an AWS connection
      description: Retrieves the information about the AWS connection.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieves the information about the AWS connection.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Integrations_Aws_ConnectionEntity"
      tags:
        - integrations
      operationId: getV1IntegrationsAwsConnectionsId
  /v1/integrations/aws/cloudtrail_batches:
    get:
      summary: List CloudTrail batches
      description: Lists CloudTrail batches for the authenticated organization.
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: connection_id
          description: AWS connection ID
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Lists CloudTrail batches for the authenticated organization.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Integrations_Aws_CloudtrailBatchEntityPaginated"
      tags:
        - integrations
      operationId: getV1IntegrationsAwsCloudtrailBatches
  "/v1/integrations/aws/cloudtrail_batches/{id}":
    patch:
      summary: Update a CloudTrail batch
      description: Update a CloudTrail batch with new information.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1IntegrationsAwsCloudtrailBatchesId"
        required: true
      responses:
        "200":
          description: Update a CloudTrail batch with new information.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Integrations_Aws_CloudtrailBatchEntity"
      tags:
        - integrations
      operationId: patchV1IntegrationsAwsCloudtrailBatchesId
    get:
      summary: Retrieve a CloudTrail batch
      description: Retrieve a single CloudTrail batch.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieve a single CloudTrail batch.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Integrations_Aws_CloudtrailBatchEntity"
      tags:
        - integrations
      operationId: getV1IntegrationsAwsCloudtrailBatchesId
  "/v1/integrations/aws/cloudtrail_batches/{id}/events":
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: get Event(s)
      tags:
        - integrations
      operationId: getV1IntegrationsAwsCloudtrailBatchesIdEvents
  "/v1/integrations/confluence_cloud/connections/{id}/space/search":
    get:
      summary: Lists available space keys
      description: Lists available space keys for the Confluence integration connection.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: keyword
          description: Space Key
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Lists available space keys for the Confluence integration connection.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Integrations_ConfluenceCloud_SpaceKeyEntity"
      tags:
        - integrations
      operationId: getV1IntegrationsConfluenceCloudConnectionsIdSpaceSearch
  "/v1/integrations/slack/connections/{connection_id}/workspaces":
    get:
      parameters:
        - in: path
          name: connection_id
          description: Connection UUID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: get Workspace(s)
      tags:
        - integrations
      operationId: getV1IntegrationsSlackConnectionsConnectionIdWorkspaces
  /v1/integrations/slack/usergroups:
    get:
      responses:
        "200":
          description: get Usergroup(s)
      tags:
        - integrations
      operationId: getV1IntegrationsSlackUsergroups
  "/v1/integrations/slack/connections/{connection_id}/emoji_actions":
    post:
      summary: Creates a new slack emoji action
      description: Creates a new slack emoji action
      parameters:
        - in: path
          name: connection_id
          description: Slack Connection UUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                emoji_name:
                  description: The name of the emoji to associate with this action
                  type: string
                incident_type_id:
                  description: The ID of the incident type to associate with this emoji action
                  type: string
              required:
                - emoji_name
        required: true
      responses:
        "201":
          description: Creates a new slack emoji action
      tags:
        - integrations
      operationId: postV1IntegrationsSlackConnectionsConnectionIdEmojiActions
    get:
      summary: Lists all slack emoji actions
      description: Lists all slack emoji actions
      parameters:
        - in: path
          name: connection_id
          description: Slack Connection UUID
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Lists all slack emoji actions
      tags:
        - integrations
      operationId: getV1IntegrationsSlackConnectionsConnectionIdEmojiActions
  "/v1/integrations/slack/connections/{connection_id}/emoji_actions/{emoji_action_id}":
    delete:
      summary: Deletes a slack emoji action
      description: Deletes a slack emoji action
      parameters:
        - in: path
          name: connection_id
          description: Slack Connection UUID
          required: true
          schema:
            type: string
        - in: path
          name: emoji_action_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Deletes a slack emoji action
      tags:
        - integrations
      operationId: deleteV1IntegrationsSlackConnectionsConnectionIdEmojiActionsEmojiActionId
    patch:
      summary: Updates a slack emoji action
      description: Updates a slack emoji action
      parameters:
        - in: path
          name: connection_id
          description: Slack Connection UUID
          required: true
          schema:
            type: string
        - in: path
          name: emoji_action_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                emoji_name:
                  description: The name of the emoji to associate with this action
                  type: string
                incident_type_id:
                  description: The ID of the incident type to associate with this emoji action
                  type: string
      responses:
        "200":
          description: Updates a slack emoji action
      tags:
        - integrations
      operationId: patchV1IntegrationsSlackConnectionsConnectionIdEmojiActionsEmojiActionId
    get:
      summary: Retrieves a slack emoji action
      description: Retrieves a slack emoji action
      parameters:
        - in: path
          name: connection_id
          description: Slack Connection UUID
          required: true
          schema:
            type: string
        - in: path
          name: emoji_action_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieves a slack emoji action
      tags:
        - integrations
      operationId: getV1IntegrationsSlackConnectionsConnectionIdEmojiActionsEmojiActionId
  /v1/integrations/statuspage/connections:
    get:
      summary: List Statuspage connections
      description: Lists the available and configured Statuspage integrations
        connections for the authenticated organization.
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Lists the available and configured Statuspage integrations
            connections for the authenticated organization.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Integrations_Statuspage_ConnectionEntityPaginated"
      tags:
        - integrations
      operationId: getV1IntegrationsStatuspageConnections
  "/v1/integrations/statuspage/connections/{connection_id}":
    delete:
      summary: Delete a Statuspage connection
      description: Deletes the given Statuspage integration connection.
      parameters:
        - in: path
          name: connection_id
          description: Connection UUID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Deletes the given Statuspage integration connection.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Integrations_Statuspage_ConnectionEntity"
      tags:
        - integrations
      operationId: deleteV1IntegrationsStatuspageConnectionsConnectionId
    patch:
      summary: Update a Statuspage connection
      description: Update the given Statuspage integration connection.
      parameters:
        - in: path
          name: connection_id
          description: Connection UUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1IntegrationsStatuspageConnectionsConnectionI\
                d"
        required: true
      responses:
        "200":
          description: Update the given Statuspage integration connection.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Integrations_Statuspage_ConnectionEntity"
      tags:
        - integrations
      operationId: patchV1IntegrationsStatuspageConnectionsConnectionId
    get:
      summary: Retrieve a Statuspage connection
      description: Retrieve the information about the Statuspage connection.
      parameters:
        - in: path
          name: connection_id
          description: Connection UUID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieve the information about the Statuspage connection.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Integrations_Statuspage_ConnectionEntity"
      tags:
        - integrations
      operationId: getV1IntegrationsStatuspageConnectionsConnectionId
  "/v1/integrations/statuspage/connections/{connection_id}/pages":
    get:
      parameters:
        - in: path
          name: connection_id
          description: Connection UUID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: get Page(s)
      tags:
        - integrations
      operationId: getV1IntegrationsStatuspageConnectionsConnectionIdPages
  /v1/integrations/zendesk/search:
    get:
      parameters:
        - in: query
          name: ticket_id
          description: Zendesk ticket ID
          required: true
          schema:
            type: string
        - in: query
          name: include
          description: Use to include attached_incidents
          required: false
          schema:
            type: string
      responses:
        "200":
          description: get Search(s)
      tags:
        - integrations
      operationId: getV1IntegrationsZendeskSearch
  /v1/users:
    get:
      summary: List users
      description: Retrieve a list of all users in an organization
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: query
          description: Text string of a query to filter users by name or email
          required: false
          schema:
            type: string
        - in: query
          name: name
          description: Text string of a query to filter users by name
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Retrieve a list of all users in an organization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserEntityPaginated"
      tags:
        - users
      operationId: getV1Users
      x-speakeasy-entity-operation: Users#read
  "/v1/users/{id}/services":
    get:
      summary: Retrieves a list of services owned by the teams a user is on
      description: Retrieves a list of services owned by the teams a user is on
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Retrieves a list of services owned by the teams a user is on
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamEntityPaginated"
      tags:
        - users
      operationId: getV1UsersIdServices
  /v1/current_user:
    get:
      description: Retrieve the current user
      responses:
        "200":
          description: Retrieve the current user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CurrentUserEntity"
      tags:
        - current_user
      operationId: getV1CurrentUser
  /v1/reports/mean_time:
    get:
      summary: Get mean time report
      description: Returns a report with time bucketed analytics data
      parameters:
        - in: query
          name: environments
          description: A comma separated list of environment IDs
          required: false
          schema:
            type: string
        - in: query
          name: teams
          description: A comma separated list of team IDs
          required: false
          schema:
            type: string
        - in: query
          name: services
          description: A comma separated list of service IDs
          required: false
          schema:
            type: string
        - in: query
          name: status
          description: Incident status
          required: false
          schema:
            type: string
        - in: query
          name: start_date
          description: The start date to return incidents from
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: end_date
          description: The end date to return incidents from
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: query
          description: A text query for an incident that searches on name, summary, and
            desciption
          required: false
          schema:
            type: string
        - in: query
          name: saved_search_id
          description: The id of a previously saved search.
          required: false
          schema:
            type: string
        - in: query
          name: priorities
          description: A comma separated list of priorities
          required: false
          schema:
            type: string
        - in: query
          name: priority_not_set
          description: Flag for including incidents where priority has not been set
          required: false
          schema:
            type: boolean
        - in: query
          name: severities
          description: A comma separated list of severities
          required: false
          schema:
            type: string
        - in: query
          name: severity_not_set
          description: Flag for including incidents where severity has not been set
          required: false
          schema:
            type: boolean
        - in: query
          name: current_milestones
          description: A comma separated list of current milestones
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Returns a report with time bucketed analytics data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReportEntity"
      tags:
        - reports
      operationId: getV1ReportsMeanTime
  /v1/metrics/ticket_funnel:
    get:
      summary: List ticket task and follow up creation and completion metrics
      description: Returns a report with task and follow up creation and completion data
      parameters:
        - in: query
          name: conditions
          description: A JSON string that defines 'logic' and 'user_data'
          required: false
          schema:
            type: string
        - in: query
          name: environments
          description: A comma separated list of environment IDs or 'is_empty' to filter
            for incidents with no impacted environments
          required: false
          schema:
            type: string
        - in: query
          name: services
          description: A comma separated list of service IDs or 'is_empty' to filter for
            incidents with no impacted services
          required: false
          schema:
            type: string
        - in: query
          name: functionalities
          description: A comma separated list of functionality IDs or 'is_empty' to filter
            for incidents with no impacted functionalities
          required: false
          schema:
            type: string
        - in: query
          name: excluded_infrastructure_ids
          description: A comma separated list of infrastructure IDs. Returns incidents
            that do not have the following infrastructure ids associated with
            them.
          required: false
          schema:
            type: string
        - in: query
          name: teams
          description: A comma separated list of team IDs
          required: false
          schema:
            type: string
        - in: query
          name: assigned_teams
          description: A comma separated list of IDs for assigned teams or 'is_empty' to
            filter for incidents with no active team assignments
          required: false
          schema:
            type: string
        - in: query
          name: status
          description: Incident status
          required: false
          schema:
            type: string
        - in: query
          name: start_date
          description: Filters for incidents that started on or after this date
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: end_date
          description: Filters for incidents that started on or before this date
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: resolved_at_or_after
          description: Filters for incidents that were resolved at or after this time.
            Combine this with the `current_milestones` parameter if you wish to
            omit incidents that were re-opened and are still active.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: resolved_at_or_before
          description: Filters for incidents that were resolved at or before this time.
            Combine this with the `current_milestones` parameter if you wish to
            omit incidents that were re-opened and are still active.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: created_at_or_after
          description: Filters for incidents that were created at or after this time
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: created_at_or_before
          description: Filters for incidents that were created at or before this time
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: query
          description: A text query for an incident that searches on name, summary, and
            desciption
          required: false
          schema:
            type: string
        - in: query
          name: name
          description: A query to search incidents by their name
          required: false
          schema:
            type: string
        - in: query
          name: saved_search_id
          description: The id of a previously saved search.
          required: false
          schema:
            type: string
        - in: query
          name: priorities
          description: A text value of priority
          required: false
          schema:
            type: string
        - in: query
          name: priority_not_set
          description: Flag for including incidents where priority has not been set
          required: false
          schema:
            type: boolean
        - in: query
          name: severities
          description: A text value of severity
          required: false
          schema:
            type: string
        - in: query
          name: severity_not_set
          description: Flag for including incidents where severity has not been set
          required: false
          schema:
            type: boolean
        - in: query
          name: current_milestones
          description: A comma separated list of current milestones
          required: false
          schema:
            type: string
        - in: query
          name: tags
          description: A comma separated list of tags
          required: false
          schema:
            type: string
        - in: query
          name: tag_match_strategy
          description: A matching strategy for the tags provided
          required: false
          schema:
            type: string
            enum:
              - any
              - match_all
              - exclude
        - in: query
          name: archived
          description: Return archived incidents
          required: false
          schema:
            type: boolean
        - in: query
          name: updated_after
          description: Filters for incidents that were updated after this date
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: updated_before
          description: Filters for incidents that were updated before this date
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: incident_type_id
          description: A comma separated list of incident type IDs
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/getV1MetricsTicketFunnel"
      responses:
        "200":
          description: Returns a report with task and follow up creation and completion data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Metrics_TicketFunnelMetricsEntity"
      tags:
        - metrics
      operationId: getV1MetricsTicketFunnel
  /v1/metrics/retrospectives:
    get:
      summary: List retrospective metrics
      description: Returns a report with retrospective analytics data
      parameters:
        - in: query
          name: start_date
          description: The start date to return metrics from
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: end_date
          description: The end date to return metrics from
          required: false
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Returns a report with retrospective analytics data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Metrics_RetrospectiveEntity"
      tags:
        - metrics
      operationId: getV1MetricsRetrospectives
  /v1/metrics/milestone_funnel:
    get:
      summary: List funnel metrics
      description: Returns a report with time bucketed milestone data
      parameters:
        - in: query
          name: conditions
          description: A JSON string that defines 'logic' and 'user_data'
          required: false
          schema:
            type: string
        - in: query
          name: environments
          description: A comma separated list of environment IDs or 'is_empty' to filter
            for incidents with no impacted environments
          required: false
          schema:
            type: string
        - in: query
          name: services
          description: A comma separated list of service IDs or 'is_empty' to filter for
            incidents with no impacted services
          required: false
          schema:
            type: string
        - in: query
          name: functionalities
          description: A comma separated list of functionality IDs or 'is_empty' to filter
            for incidents with no impacted functionalities
          required: false
          schema:
            type: string
        - in: query
          name: excluded_infrastructure_ids
          description: A comma separated list of infrastructure IDs. Returns incidents
            that do not have the following infrastructure ids associated with
            them.
          required: false
          schema:
            type: string
        - in: query
          name: teams
          description: A comma separated list of team IDs
          required: false
          schema:
            type: string
        - in: query
          name: assigned_teams
          description: A comma separated list of IDs for assigned teams or 'is_empty' to
            filter for incidents with no active team assignments
          required: false
          schema:
            type: string
        - in: query
          name: status
          description: Incident status
          required: false
          schema:
            type: string
        - in: query
          name: start_date
          description: Filters for incidents that started on or after this date
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: end_date
          description: Filters for incidents that started on or before this date
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: resolved_at_or_after
          description: Filters for incidents that were resolved at or after this time.
            Combine this with the `current_milestones` parameter if you wish to
            omit incidents that were re-opened and are still active.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: resolved_at_or_before
          description: Filters for incidents that were resolved at or before this time.
            Combine this with the `current_milestones` parameter if you wish to
            omit incidents that were re-opened and are still active.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: created_at_or_after
          description: Filters for incidents that were created at or after this time
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: created_at_or_before
          description: Filters for incidents that were created at or before this time
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: query
          description: A text query for an incident that searches on name, summary, and
            desciption
          required: false
          schema:
            type: string
        - in: query
          name: name
          description: A query to search incidents by their name
          required: false
          schema:
            type: string
        - in: query
          name: saved_search_id
          description: The id of a previously saved search.
          required: false
          schema:
            type: string
        - in: query
          name: priorities
          description: A text value of priority
          required: false
          schema:
            type: string
        - in: query
          name: priority_not_set
          description: Flag for including incidents where priority has not been set
          required: false
          schema:
            type: boolean
        - in: query
          name: severities
          description: A text value of severity
          required: false
          schema:
            type: string
        - in: query
          name: severity_not_set
          description: Flag for including incidents where severity has not been set
          required: false
          schema:
            type: boolean
        - in: query
          name: current_milestones
          description: A comma separated list of current milestones
          required: false
          schema:
            type: string
        - in: query
          name: tags
          description: A comma separated list of tags
          required: false
          schema:
            type: string
        - in: query
          name: tag_match_strategy
          description: A matching strategy for the tags provided
          required: false
          schema:
            type: string
            enum:
              - any
              - match_all
              - exclude
        - in: query
          name: archived
          description: Return archived incidents
          required: false
          schema:
            type: boolean
        - in: query
          name: updated_after
          description: Filters for incidents that were updated after this date
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: updated_before
          description: Filters for incidents that were updated before this date
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: incident_type_id
          description: A comma separated list of incident type IDs
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/getV1MetricsTicketFunnel"
      responses:
        "200":
          description: Returns a report with time bucketed milestone data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Metrics_MilestonesFunnelEntity"
      tags:
        - metrics
      operationId: getV1MetricsMilestoneFunnel
  /v1/metrics/user_involvements:
    get:
      summary: List user metrics
      description: Returns a report with time bucketed analytics data
      parameters:
        - in: query
          name: start_date
          description: The start date to return metrics from
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: end_date
          description: The end date to return metrics from
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: bucket_size
          required: false
          schema:
            type: string
        - in: query
          name: by
          required: false
          schema:
            type: string
        - in: query
          name: sort_field
          required: false
          schema:
            type: string
            enum:
              - user_count
              - incident_count
              - time_spent
        - in: query
          name: sort_direction
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - in: query
          name: sort_limit
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Returns a report with time bucketed analytics data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Metrics_MetricsEntity"
      tags:
        - metrics
      operationId: getV1MetricsUserInvolvements
  /v1/metrics/incidents:
    get:
      summary: List incident metrics
      description: Returns a report with time bucketed analytics data
      parameters:
        - in: query
          name: start_date
          description: The start date to return metrics from
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: end_date
          description: The end date to return metrics from
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: bucket_size
          required: false
          schema:
            type: string
            enum:
              - week
              - day
              - month
              - all_time
        - in: query
          name: by
          required: false
          schema:
            type: string
            enum:
              - total
              - severity
              - priority
              - functionality
              - service
              - environment
              - user
              - user_involvement
        - in: query
          name: sort_field
          required: false
          schema:
            type: string
            enum:
              - mttd
              - mtta
              - mttm
              - mttr
              - count
              - total_time
        - in: query
          name: sort_direction
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - in: query
          name: sort_limit
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: conditions
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Returns a report with time bucketed analytics data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Metrics_MetricsEntity"
      tags:
        - metrics
      operationId: getV1MetricsIncidents
  /v1/metrics/mttx:
    get:
      description: Fetch infrastructure metrics based on custom query
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: conditions
          description: A JSON string that defines 'logic' and 'user_data'
          required: false
          schema:
            type: string
        - in: query
          name: environments
          description: A comma separated list of environment IDs or 'is_empty' to filter
            for incidents with no impacted environments
          required: false
          schema:
            type: string
        - in: query
          name: services
          description: A comma separated list of service IDs or 'is_empty' to filter for
            incidents with no impacted services
          required: false
          schema:
            type: string
        - in: query
          name: functionalities
          description: A comma separated list of functionality IDs or 'is_empty' to filter
            for incidents with no impacted functionalities
          required: false
          schema:
            type: string
        - in: query
          name: excluded_infrastructure_ids
          description: A comma separated list of infrastructure IDs. Returns incidents
            that do not have the following infrastructure ids associated with
            them.
          required: false
          schema:
            type: string
        - in: query
          name: teams
          description: A comma separated list of team IDs
          required: false
          schema:
            type: string
        - in: query
          name: assigned_teams
          description: A comma separated list of IDs for assigned teams or 'is_empty' to
            filter for incidents with no active team assignments
          required: false
          schema:
            type: string
        - in: query
          name: status
          description: Incident status
          required: false
          schema:
            type: string
        - in: query
          name: start_date
          description: Filters for incidents that started on or after this date
          required: true
          schema:
            type: string
            format: date
        - in: query
          name: end_date
          description: Filters for incidents that started on or before this date
          required: true
          schema:
            type: string
            format: date
        - in: query
          name: resolved_at_or_after
          description: Filters for incidents that were resolved at or after this time.
            Combine this with the `current_milestones` parameter if you wish to
            omit incidents that were re-opened and are still active.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: resolved_at_or_before
          description: Filters for incidents that were resolved at or before this time.
            Combine this with the `current_milestones` parameter if you wish to
            omit incidents that were re-opened and are still active.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: created_at_or_after
          description: Filters for incidents that were created at or after this time
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: created_at_or_before
          description: Filters for incidents that were created at or before this time
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: query
          description: A text query for an incident that searches on name, summary, and
            desciption
          required: false
          schema:
            type: string
        - in: query
          name: name
          description: A query to search incidents by their name
          required: false
          schema:
            type: string
        - in: query
          name: saved_search_id
          description: The id of a previously saved search.
          required: false
          schema:
            type: string
        - in: query
          name: priorities
          description: A text value of priority
          required: false
          schema:
            type: string
        - in: query
          name: priority_not_set
          description: Flag for including incidents where priority has not been set
          required: false
          schema:
            type: boolean
        - in: query
          name: severities
          description: A text value of severity
          required: false
          schema:
            type: string
        - in: query
          name: severity_not_set
          description: Flag for including incidents where severity has not been set
          required: false
          schema:
            type: boolean
        - in: query
          name: current_milestones
          description: A comma separated list of current milestones
          required: false
          schema:
            type: string
        - in: query
          name: tags
          description: A comma separated list of tags
          required: false
          schema:
            type: string
        - in: query
          name: tag_match_strategy
          description: A matching strategy for the tags provided
          required: false
          schema:
            type: string
            enum:
              - any
              - match_all
              - exclude
        - in: query
          name: archived
          description: Return archived incidents
          required: false
          schema:
            type: boolean
        - in: query
          name: updated_after
          description: Filters for incidents that were updated after this date
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: updated_before
          description: Filters for incidents that were updated before this date
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: incident_type_id
          description: A comma separated list of incident type IDs
          required: false
          schema:
            type: string
        - in: query
          name: custom_field_id
          required: false
          schema:
            type: string
        - in: query
          name: sort_by
          required: false
          schema:
            type: string
            enum:
              - count_asc
              - mttr_asc
              - mtta_asc
              - mttd_asc
              - mttm_asc
              - healthiness_asc
              - count_desc
              - mttr_desc
              - mtta_desc
              - mttd_desc
              - mttm_desc
              - healthiness_desc
        - in: query
          name: measurements
          description: Comma-separated list of measurements to include in the response
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                group_by:
                  type: array
                  items:
                    type: string
                    enum:
                      - services
                      - environments
                      - functionalities
                      - teams
                      - severities
                      - users
                      - started_day
                      - started_week
                      - started_month
                      - custom_fields
      responses:
        "200":
          description: Fetch infrastructure metrics based on custom query
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Metrics_MttxDataEntity"
      tags:
        - metrics
      operationId: getV1MetricsMttx
  "/v1/metrics/{infra_type}":
    get:
      summary: List metrics for a component type
      description: Returns metrics for all components of a given type
      parameters:
        - in: path
          name: infra_type
          required: true
          schema:
            type: string
            enum:
              - environments
              - functionalities
              - services
              - customers
        - in: query
          name: start_date
          description: The start date to return metrics from; defaults to 30 days ago
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: end_date
          description: The end date to return metrics from, defaults to today
          required: false
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Returns metrics for all components of a given type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Metrics_InfrastructureListEntity"
      tags:
        - metrics
      operationId: getV1MetricsInfraType
  "/v1/metrics/{infra_type}/{infra_id}":
    get:
      summary: Show metrics for a component
      description: Return metrics for a specific component
      parameters:
        - in: path
          name: infra_type
          required: true
          schema:
            type: string
            enum:
              - environments
              - functionalities
              - services
              - customers
        - in: path
          name: infra_id
          description: Component UUID
          required: true
          schema:
            type: string
        - in: query
          name: start_date
          description: The start date to return metrics from; defaults to 30 days ago
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: end_date
          description: The end date to return metrics from, defaults to today
          required: false
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Return metrics for a specific component
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Metrics_InfrastructureMetricsEntity"
      tags:
        - metrics
      operationId: getV1MetricsInfraTypeInfraId
  /v1/runbooks/actions:
    get:
      summary: List all Runbook actions
      description: List all Runbook actions available through your connected integrations
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: type
          description: List actions supporting this specific Runbook type
          required: false
          schema:
            type: string
        - in: query
          name: lite
          description: Boolean to determine whether to return a slimified version of the
            action object's integration
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: List all Runbook actions available through your connected
            integrations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Runbooks_ActionsEntityPaginated"
      tags:
        - runbooks
      operationId: getV1RunbooksActions
  /v1/runbooks/executions:
    post:
      summary: Create a runbook execution
      description: Attaches a runbook to an incident and executes it
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1RunbooksExecutions"
        required: true
      responses:
        "201":
          description: Attaches a runbook to an incident and executes it
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Runbooks_ExecutionEntity"
      tags:
        - runbooks
      operationId: postV1RunbooksExecutions
    get:
      summary: List all executions of Runbooks
      description: List all Runbook executions across all Runbooks
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: List all Runbook executions across all Runbooks
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Runbooks_ExecutionEntityPaginated"
      tags:
        - runbooks
      operationId: getV1RunbooksExecutions
  "/v1/runbooks/executions/{execution_id}":
    delete:
      summary: Terminate a runbook execution
      description: Terminates a runbook execution, preventing any further steps from
        being executed
      parameters:
        - in: path
          name: execution_id
          required: true
          schema:
            type: string
        - in: query
          name: reason
          description: The reason for terminating the runbook execution
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Terminates a runbook execution, preventing any further steps from
            being executed
      tags:
        - runbooks
      operationId: deleteV1RunbooksExecutionsExecutionId
    get:
      summary: Retrieve a runbook execution
      description: Retrieve a runbook execution by ID
      parameters:
        - in: path
          name: execution_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieve a runbook execution by ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Runbooks_ExecutionEntity"
      tags:
        - runbooks
      operationId: getV1RunbooksExecutionsExecutionId
  "/v1/runbooks/executions/{execution_id}/votes/status":
    get:
      summary: Returns the current vote counts for an object
      description: Returns the current vote counts for an object
      parameters:
        - in: path
          name: execution_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns the current vote counts for an object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VotesEntity"
      tags:
        - runbooks
      operationId: getV1RunbooksExecutionsExecutionIdVotesStatus
  "/v1/runbooks/executions/{execution_id}/votes":
    patch:
      summary: Update the votes on an object
      description: Allows for upvoting or downvoting an event
      parameters:
        - in: path
          name: execution_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1RunbooksExecutionsExecutionIdVotes"
        required: true
      responses:
        "200":
          description: Allows for upvoting or downvoting an event
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VotesEntity"
      tags:
        - runbooks
      operationId: patchV1RunbooksExecutionsExecutionIdVotes
  "/v1/runbooks/executions/{execution_id}/steps/{step_id}":
    put:
      summary: Updates a runbook step execution
      description: Updates a runbook step execution, especially for changing the state
        of a step execution.
      parameters:
        - in: path
          name: execution_id
          required: true
          schema:
            type: string
        - in: path
          name: step_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/putV1RunbooksExecutionsExecutionIdStepsStepId"
        required: true
      responses:
        "200":
          description: Updates a runbook step execution, especially for changing the state
            of a step execution.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Runbooks_ExecutionEntity"
      tags:
        - runbooks
      operationId: putV1RunbooksExecutionsExecutionIdStepsStepId
  "/v1/runbooks/executions/{execution_id}/steps/{step_id}/votes/status":
    get:
      summary: Returns the current vote counts for an object
      description: Returns the current vote counts for an object
      parameters:
        - in: path
          name: execution_id
          required: true
          schema:
            type: string
        - in: path
          name: step_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns the current vote counts for an object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VotesEntity"
      tags:
        - runbooks
      operationId: getV1RunbooksExecutionsExecutionIdStepsStepIdVotesStatus
  "/v1/runbooks/executions/{execution_id}/steps/{step_id}/votes":
    patch:
      summary: Update the votes on an object
      description: Allows for upvoting or downvoting an event
      parameters:
        - in: path
          name: execution_id
          required: true
          schema:
            type: string
        - in: path
          name: step_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1RunbooksExecutionsExecutionIdStepsStepIdVote\
                s"
        required: true
      responses:
        "200":
          description: Allows for upvoting or downvoting an event
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VotesEntity"
      tags:
        - runbooks
      operationId: patchV1RunbooksExecutionsExecutionIdStepsStepIdVotes
  "/v1/runbooks/executions/{execution_id}/steps/{step_id}/script":
    get:
      summary: Retrieves the bash script from a "script" step.
      description: Retrieves the bash script from a "script" step.
      parameters:
        - in: path
          name: execution_id
          required: true
          schema:
            type: string
        - in: path
          name: step_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieves the bash script from a "script" step.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Runbooks_ExecutionEntity"
      tags:
        - runbooks
      operationId: getV1RunbooksExecutionsExecutionIdStepsStepIdScript
  "/v1/runbooks/executions/{execution_id}/steps/{step_id}/script/{state}":
    put:
      summary: Updates the execution's step.
      description: Updates the execution's step.
      parameters:
        - in: path
          name: execution_id
          required: true
          schema:
            type: string
        - in: path
          name: step_id
          required: true
          schema:
            type: string
        - in: path
          name: state
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Updates the execution's step.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Runbooks_ExecutionEntity"
      tags:
        - runbooks
      operationId: putV1RunbooksExecutionsExecutionIdStepsStepIdScriptState
  "/v1/runbooks/select_options/{integration_slug}/{action_slug}/{field}":
    get:
      parameters:
        - in: path
          name: integration_slug
          required: true
          schema:
            type: string
        - in: path
          name: action_slug
          required: true
          schema:
            type: string
        - in: path
          name: field
          required: true
          schema:
            type: string
        - in: query
          name: query
          description: Text string of a query for filtering values.
          required: false
          schema:
            type: string
        - in: query
          name: scope
          description: Generic params used to add specificity (eg an id of some kind) to
            the select options request
          required: false
          schema:
            type: string
        - in: query
          name: per_page
          description: Maximum number of items to return.
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: get SelectOption(s)
      tags:
        - runbooks
      operationId: getV1RunbooksSelectOptionsIntegrationSlugActionSlugField
  /v1/runbooks:
    post:
      summary: Create a runbook
      description: Create a new runbook for use with incidents.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1Runbooks"
        required: true
      responses:
        "201":
          description: Create a new runbook for use with incidents.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunbookEntity"
      tags:
        - runbooks
      operationId: postV1Runbooks
      x-speakeasy-entity-operation: Runbook#create
    get:
      summary: List runbooks
      description: Lists all available runbooks.
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: name
          description: A query to search runbooks by their name
          required: false
          schema:
            type: string
        - in: query
          name: owners
          description: A query to search runbooks by their owners
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: Sort runbooks by their updated date. Accepts 'asc', 'desc'
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
      responses:
        "200":
          description: Lists all available runbooks.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunbookEntity"
      tags:
        - runbooks
      operationId: getV1Runbooks
      x-speakeasy-entity-operation: Runbooks#read
  "/v1/runbooks/{runbook_id}":
    delete:
      summary: Delete a runbook
      description: Delete a runbook and make it unavailable for any future incidents.
      parameters:
        - in: path
          name: runbook_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      responses:
        "200":
          description: Delete a runbook and make it unavailable for any future incidents.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunbookEntity"
      tags:
        - runbooks
      operationId: deleteV1RunbooksRunbookId
      x-speakeasy-entity-operation: Runbook#delete
    put:
      summary: Update a runbook
      description: >
        Update a runbook and any attachment rules associated with it. This
        endpoint is used to configure nearly everything

        about a runbook, including but not limited to the steps, environments, attachment rules, and severities.
      parameters:
        - in: path
          name: runbook_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/putV1RunbooksRunbookId"
        required: true
      responses:
        "200":
          description: >
            Update a runbook and any attachment rules associated with it. This
            endpoint is used to configure nearly everything

            about a runbook, including but not limited to the steps, environments, attachment rules, and severities.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunbookEntity"
      tags:
        - runbooks
      operationId: putV1RunbooksRunbookId
      x-speakeasy-entity-operation: Runbook#update
    get:
      summary: Retrieve a runbook
      description: Get a runbook and all its configuration
      parameters:
        - in: path
          name: runbook_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      responses:
        "200":
          description: Get a runbook and all its configuration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunbookEntity"
      tags:
        - runbooks
      operationId: getV1RunbooksRunbookId
      x-speakeasy-entity-operation: Runbook#read
  /v1/runbook_audits:
    get:
      summary: List runbook audits
      description: Please contact support to enable audit logging for your account.
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: auditable_type
          description: A query to filter audits by type
          required: false
          schema:
            type: string
            enum:
              - Runbooks::Step
              - Runbooks::Runbook
            default: Runbooks::Step
        - in: query
          name: sort
          description: A query to sort audits by their created_at timestamp. Options are
            'asc' or 'desc'
          required: false
          schema:
            type: string
      responses:
        "200":
          description: List runbook audits
      tags:
        - runbook_audits
      operationId: getV1RunbookAudits
  /v1/nunc_connections:
    get:
      summary: Lists the FireHydrant hosted status pages
      description: Lists the information displayed as part of your FireHydrant hosted
        status pages.
      responses:
        "200":
          description: Lists the information displayed as part of your FireHydrant hosted
            status pages.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NuncConnectionEntityPaginated"
      tags:
        - nunc_connections
      operationId: getV1NuncConnections
    post:
      summary: Create a FireHydrant hosted status page
      description: Create a new FireHydrant hosted status page for customer facing statuses.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                domain:
                  type: string
                company_name:
                  type: string
                company_website:
                  type: string
                company_tos_url:
                  type: string
                greeting_title:
                  type: string
                greeting_body:
                  type: string
                operational_message:
                  type: string
                title:
                  type: string
                "conditions[nunc_condition]":
                  description: Status page condition to map your severity matrix condition to
                  type: array
                  items:
                    type: string
                "conditions[condition_id]":
                  description: Severity matrix condition id
                  type: array
                  items:
                    type: string
                "components[infrastructure_type]":
                  type: array
                  items:
                    type: string
                "components[infrastructure_id]":
                  type: array
                  items:
                    type: string
                primary_color:
                  type: string
                secondary_color:
                  type: string
                exposed_fields:
                  type: array
                  items:
                    type: string
                enable_histogram:
                  type: boolean
                ui_version:
                  type: integer
                  format: int32
              required:
                - domain
                - conditions[nunc_condition]
                - conditions[condition_id]
                - components[infrastructure_type]
                - components[infrastructure_id]
        required: true
      responses:
        "201":
          description: Create a new FireHydrant hosted status page for customer facing
            statuses.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NuncConnectionEntity"
      tags:
        - nunc_connections
      operationId: postV1NuncConnections
  "/v1/nunc_connections/{nunc_connection_id}/subscribers":
    delete:
      summary: Unsubscribes one or more status page subscribers.
      description: Unsubscribes one or more status page subscribers.
      parameters:
        - in: path
          name: nunc_connection_id
          required: true
          schema:
            type: string
        - in: query
          name: subscriber_ids
          description: A list of subscriber IDs to unsubscribe.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Unsubscribes one or more status page subscribers.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NuncEmailSubscribersEntity"
      tags:
        - nunc_connections
      operationId: deleteV1NuncConnectionsNuncConnectionIdSubscribers
    post:
      summary: Subscribes a comma-separated string of emails to status page updates
      description: Subscribes a comma-separated string of emails to status page updates
      parameters:
        - in: path
          name: nunc_connection_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                emails:
                  description: A comma-separated list of emails to subscribe.
                  type: string
              required:
                - emails
        required: true
      responses:
        "201":
          description: Subscribes a comma-separated string of emails to status page updates
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NuncEmailSubscribersEntity"
      tags:
        - nunc_connections
      operationId: postV1NuncConnectionsNuncConnectionIdSubscribers
    get:
      summary: Retrieves the list of subscribers for a status page
      description: Retrieves the list of subscribers for a status page.
      parameters:
        - in: path
          name: nunc_connection_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieves the list of subscribers for a status page.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NuncEmailSubscribersEntity"
      tags:
        - nunc_connections
      operationId: getV1NuncConnectionsNuncConnectionIdSubscribers
  "/v1/nunc_connections/{nunc_connection_id}":
    delete:
      summary: Delete a FireHydrant hosted status page
      description: Delete a FireHydrant hosted status page, stopping updates of your
        incidents to it.
      parameters:
        - in: path
          name: nunc_connection_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Delete a FireHydrant hosted status page, stopping updates of your
            incidents to it.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NuncConnectionEntity"
      tags:
        - nunc_connections
      operationId: deleteV1NuncConnectionsNuncConnectionId
    put:
      summary: Update a FireHydrant hosted status page
      description: Update your company's information and other components in the
        specified FireHydrant hosted status page.
      parameters:
        - in: path
          name: nunc_connection_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                company_name:
                  type: string
                company_website:
                  type: string
                company_tos_url:
                  type: string
                greeting_title:
                  type: string
                greeting_body:
                  type: string
                operational_message:
                  type: string
                title:
                  type: string
                "conditions[nunc_condition]":
                  description: Status page condition to map your severity matrix condition to
                  type: array
                  items:
                    type: string
                "conditions[condition_id]":
                  description: Severity matrix condition id
                  type: array
                  items:
                    type: string
                "components[infrastructure_type]":
                  type: array
                  items:
                    type: string
                "components[infrastructure_id]":
                  type: array
                  items:
                    type: string
                primary_color:
                  type: string
                secondary_color:
                  type: string
                exposed_fields:
                  type: array
                  items:
                    type: string
                enable_histogram:
                  type: boolean
                ui_version:
                  type: integer
                  format: int32
              required:
                - conditions[nunc_condition]
                - conditions[condition_id]
                - components[infrastructure_type]
                - components[infrastructure_id]
      responses:
        "200":
          description: Update your company's information and other components in the
            specified FireHydrant hosted status page.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NuncConnectionEntity"
      tags:
        - nunc_connections
      operationId: putV1NuncConnectionsNuncConnectionId
    get:
      summary: Retrieve information about a FireHydrant hosted status page
      description: Retrieve the information displayed as part of your FireHydrant
        hosted status page.
      parameters:
        - in: path
          name: nunc_connection_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieve the information displayed as part of your FireHydrant
            hosted status page.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NuncConnectionEntity"
      tags:
        - nunc_connections
      operationId: getV1NuncConnectionsNuncConnectionId
  "/v1/nunc_connections/{nunc_connection_id}/component_groups/{group_id}":
    delete:
      summary: Delete a component group displayed on a FireHydrant status page
      description: Delete a component group displayed on a FireHydrant status page
      parameters:
        - in: path
          name: nunc_connection_id
          required: true
          schema:
            type: string
        - in: path
          name: group_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete a component group displayed on a FireHydrant status page
      tags:
        - nunc_connections
      operationId: deleteV1NuncConnectionsNuncConnectionIdComponentGroupsGroupId
    patch:
      summary: Update a component group to be displayed on a FireHydrant status page
      description: Update a component group to be displayed on a FireHydrant status page
      parameters:
        - in: path
          name: nunc_connection_id
          required: true
          schema:
            type: string
        - in: path
          name: group_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                component_group_id:
                  type: string
                position:
                  type: integer
                  format: int32
      responses:
        "200":
          description: Update a component group to be displayed on a FireHydrant status page
      tags:
        - nunc_connections
      operationId: patchV1NuncConnectionsNuncConnectionIdComponentGroupsGroupId
  "/v1/nunc_connections/{nunc_connection_id}/component_groups":
    post:
      summary: Add a component group to be displayed on a FireHydrant status page
      description: Add a component group to be displayed on a FireHydrant status page
      parameters:
        - in: path
          name: nunc_connection_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                component_group_id:
                  type: string
                position:
                  type: integer
                  format: int32
              required:
                - name
        required: true
      responses:
        "201":
          description: Add a component group to be displayed on a FireHydrant status page
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NuncConnectionEntity"
      tags:
        - nunc_connections
      operationId: postV1NuncConnectionsNuncConnectionIdComponentGroups
  "/v1/nunc_connections/{nunc_connection_id}/links/{link_id}":
    delete:
      summary: Delete a link displayed on a FireHydrant status page
      description: Delete a link displayed on a FireHydrant status page
      parameters:
        - in: path
          name: nunc_connection_id
          required: true
          schema:
            type: string
        - in: path
          name: link_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete a link displayed on a FireHydrant status page
      tags:
        - nunc_connections
      operationId: deleteV1NuncConnectionsNuncConnectionIdLinksLinkId
    patch:
      summary: Update a link to be displayed on a FireHydrant status page
      description: Update a link to be displayed on a FireHydrant status page
      parameters:
        - in: path
          name: nunc_connection_id
          required: true
          schema:
            type: string
        - in: path
          name: link_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1NuncConnectionsNuncConnectionIdLinksLinkId"
        required: true
      responses:
        "200":
          description: Update a link to be displayed on a FireHydrant status page
      tags:
        - nunc_connections
      operationId: patchV1NuncConnectionsNuncConnectionIdLinksLinkId
  "/v1/nunc_connections/{nunc_connection_id}/links":
    post:
      summary: Update a link to be displayed on a FireHydrant status page
      description: Add a link to be displayed on a FireHydrant status page
      parameters:
        - in: path
          name: nunc_connection_id
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Add a link to be displayed on a FireHydrant status page
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NuncConnectionEntity"
      tags:
        - nunc_connections
      operationId: postV1NuncConnectionsNuncConnectionIdLinks
  "/v1/nunc_connections/{nunc_connection_id}/images/{type}":
    delete:
      summary: Delete an image attached to a FireHydrant status page
      description: Delete an image attached to a FireHydrant status page
      parameters:
        - in: path
          name: nunc_connection_id
          required: true
          schema:
            type: string
        - in: path
          name: type
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Delete an image attached to a FireHydrant status page
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NuncConnectionEntity"
      tags:
        - nunc_connections
      operationId: deleteV1NuncConnectionsNuncConnectionIdImagesType
    put:
      summary: Add or replace an image attached to a FireHydrant status page
      description: Add or replace an image attached to a FireHydrant status page
      parameters:
        - in: path
          name: nunc_connection_id
          required: true
          schema:
            type: string
        - in: path
          name: type
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: Add or replace an image attached to a FireHydrant status page
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NuncConnectionEntity"
      tags:
        - nunc_connections
      operationId: putV1NuncConnectionsNuncConnectionIdImagesType
  "/v1/saved_searches/{resource_type}/{saved_search_id}":
    delete:
      summary: Delete a specific saved search
      description: Delete a specific saved search
      parameters:
        - in: path
          name: resource_type
          required: true
          schema:
            type: string
            enum:
              - change_events
              - incidents
              - services
              - scheduled_maintenances
              - ticket_tasks
              - ticket_follow_ups
              - analytics
              - impact_analytics
              - alerts
              - incident_events
        - in: path
          name: saved_search_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete a specific saved search
      tags:
        - saved_searches
      operationId: deleteV1SavedSearchesResourceTypeSavedSearchId
    patch:
      summary: Update a specific saved search
      description: Update a specific saved search
      parameters:
        - in: path
          name: resource_type
          required: true
          schema:
            type: string
            enum:
              - change_events
              - incidents
              - services
              - scheduled_maintenances
              - ticket_tasks
              - ticket_follow_ups
              - analytics
              - impact_analytics
              - alerts
              - incident_events
        - in: path
          name: saved_search_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1SavedSearchesResourceTypeSavedSearchId"
        required: true
      responses:
        "200":
          description: Update a specific saved search
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavedSearchEntity"
      tags:
        - saved_searches
      operationId: patchV1SavedSearchesResourceTypeSavedSearchId
    get:
      summary: Retrieve a specific save search
      description: Retrieve a specific save search
      parameters:
        - in: path
          name: resource_type
          required: true
          schema:
            type: string
            enum:
              - change_events
              - incidents
              - services
              - scheduled_maintenances
              - ticket_tasks
              - ticket_follow_ups
              - analytics
              - impact_analytics
              - alerts
              - incident_events
        - in: path
          name: saved_search_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieve a specific save search
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavedSearchEntity"
      tags:
        - saved_searches
      operationId: getV1SavedSearchesResourceTypeSavedSearchId
  "/v1/saved_searches/{resource_type}":
    get:
      summary: Lists save searches
      description: Lists save searches
      parameters:
        - in: path
          name: resource_type
          required: true
          schema:
            type: string
            enum:
              - change_events
              - incidents
              - services
              - scheduled_maintenances
              - ticket_tasks
              - ticket_follow_ups
              - analytics
              - impact_analytics
              - alerts
              - incident_events
        - in: query
          name: user_id
          description: The user ID used to filter saved searches.
          required: false
          schema:
            type: string
        - in: query
          name: query
          description: Filter saved searches with a query on their name
          required: false
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Lists save searches
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavedSearchEntity"
      tags:
        - saved_searches
      operationId: getV1SavedSearchesResourceType
    post:
      summary: Create saved search
      description: Create a new saved search for a particular resource type
      parameters:
        - in: path
          name: resource_type
          required: true
          schema:
            type: string
            enum:
              - change_events
              - incidents
              - services
              - scheduled_maintenances
              - ticket_tasks
              - ticket_follow_ups
              - analytics
              - impact_analytics
              - alerts
              - incident_events
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1SavedSearchesResourceType"
        required: true
      responses:
        "201":
          description: Create a new saved search for a particular resource type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavedSearchEntity"
      tags:
        - saved_searches
      operationId: postV1SavedSearchesResourceType
  /v1/lifecycles/measurement_definitions:
    post:
      summary: Create a measurement definition
      description: Create a new measurement definition
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                slug:
                  type: string
                description:
                  type: string
                starts_at_milestone_id:
                  type: string
                ends_at_milestone_id:
                  type: string
              required:
                - name
                - starts_at_milestone_id
                - ends_at_milestone_id
        required: true
      responses:
        "201":
          description: Create a new measurement definition
      tags:
        - lifecycles
      operationId: postV1LifecyclesMeasurementDefinitions
    get:
      summary: List all measurement definitions
      description: List all of the measurement definitions in the organization
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: List all of the measurement definitions in the organization
      tags:
        - lifecycles
      operationId: getV1LifecyclesMeasurementDefinitions
  "/v1/lifecycles/measurement_definitions/{measurement_definition_id}":
    delete:
      summary: Archive a measurement definition
      description: Archives a measurement definition which will hide it from lists and
        metrics
      parameters:
        - in: path
          name: measurement_definition_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Archives a measurement definition which will hide it from lists and
            metrics
      tags:
        - lifecycles
      operationId: deleteV1LifecyclesMeasurementDefinitionsMeasurementDefinitionId
    patch:
      summary: Update a measurement definition
      description: Update a single measurement definition from its ID
      parameters:
        - in: path
          name: measurement_definition_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                slug:
                  type: string
                description:
                  type: string
                starts_at_milestone_id:
                  type: string
                ends_at_milestone_id:
                  type: string
      responses:
        "200":
          description: Update a single measurement definition from its ID
      tags:
        - lifecycles
      operationId: patchV1LifecyclesMeasurementDefinitionsMeasurementDefinitionId
    get:
      summary: Retrieve a measurement definition
      description: Retrieve a single measurement definition from its ID
      parameters:
        - in: path
          name: measurement_definition_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieve a single measurement definition from its ID
      tags:
        - lifecycles
      operationId: getV1LifecyclesMeasurementDefinitionsMeasurementDefinitionId
  /v1/lifecycles/phases:
    get:
      summary: List all phases and milestones
      description: List all of the lifecycle phases and milestones in the organization
      responses:
        "200":
          description: List all of the lifecycle phases and milestones in the organization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lifecycles_PhaseEntityList"
      tags:
        - lifecycles
      operationId: getV1LifecyclesPhases
  /v1/lifecycles/milestones:
    post:
      summary: Create a milestone
      description: Create a new milestone
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  description: The name of the milestone
                  type: string
                description:
                  description: A long-form description of the milestone's purpose
                  type: string
                slug:
                  description: A unique identifier for the milestone. If not provided, one will be
                    generated from the name.
                  type: string
                phase_id:
                  description: The ID of the phase to which the milestone should belong
                  type: string
                position:
                  description: The position of the milestone within the phase. If not provided,
                    the milestone will be added as the last milestone in the
                    phase.
                  type: integer
                  format: int32
                required_at_milestone_id:
                  description: The ID of a later milestone that cannot be started until this
                    milestone has a timestamp populated
                  type: string
              required:
                - name
                - description
                - phase_id
        required: true
      responses:
        "201":
          description: Create a new milestone
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lifecycles_PhaseEntityList"
      tags:
        - lifecycles
      operationId: postV1LifecyclesMilestones
  "/v1/lifecycles/milestones/{milestone_id}":
    delete:
      summary: Delete a milestone
      description: Delete a milestone
      parameters:
        - in: path
          name: milestone_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Delete a milestone
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lifecycles_PhaseEntity"
      tags:
        - lifecycles
      operationId: deleteV1LifecyclesMilestonesMilestoneId
    patch:
      summary: Update a milestone
      description: Update a milestone
      parameters:
        - in: path
          name: milestone_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  description: The name of the milestone
                  type: string
                description:
                  description: A long-form description of the milestone's purpose
                  type: string
                slug:
                  description: A unique identifier for the milestone. If not provided, one will be
                    generated from the name.
                  type: string
                position:
                  description: The position of the milestone within the phase. If not provided,
                    the milestone will be added as the last milestone in the
                    phase.
                  type: integer
                  format: int32
                required_at_milestone_id:
                  description: The ID of a later milestone that cannot be started until this
                    milestone has a timestamp populated
                  type: string
      responses:
        "200":
          description: Update a milestone
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lifecycles_PhaseEntity"
      tags:
        - lifecycles
      operationId: patchV1LifecyclesMilestonesMilestoneId
  /v1/priorities:
    post:
      summary: Create priority
      description: Create a new priority
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1Priorities"
        required: true
      responses:
        "201":
          description: Create a new priority
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriorityEntity"
      tags:
        - priorities
      operationId: postV1Priorities
      x-speakeasy-entity-operation: Priority#create
    get:
      summary: Lists priorities
      description: Lists priorities
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Lists priorities
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriorityEntity"
      tags:
        - priorities
      operationId: getV1Priorities
      x-speakeasy-entity-operation: Priorities#get
  "/v1/priorities/{priority_slug}":
    delete:
      summary: Delete a specific priority
      description: Delete a specific priority
      parameters:
        - in: path
          name: priority_slug
          required: true
          schema:
            type: string
          x-speakeasy-match: slug
      responses:
        "200":
          description: Delete a specific priority
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriorityEntity"
      tags:
        - priorities
      operationId: deleteV1PrioritiesPrioritySlug
      x-speakeasy-entity-operation: Priority#delete
    patch:
      summary: Update a specific priority
      description: Update a specific priority
      parameters:
        - in: path
          name: priority_slug
          required: true
          schema:
            type: string
          x-speakeasy-match: slug
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1PrioritiesPrioritySlug"
        required: true
      responses:
        "200":
          description: Update a specific priority
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriorityEntity"
      tags:
        - priorities
      operationId: patchV1PrioritiesPrioritySlug
      x-speakeasy-entity-operation: Priority#update
    get:
      summary: Retrieve a specific priority
      description: Retrieve a specific priority
      parameters:
        - in: path
          name: priority_slug
          required: true
          schema:
            type: string
          x-speakeasy-match: slug
      responses:
        "200":
          description: Retrieve a specific priority
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriorityEntity"
      tags:
        - priorities
      operationId: getV1PrioritiesPrioritySlug
      x-speakeasy-entity-operation: Priority#read
  /v1/severities:
    post:
      summary: Create severity
      description: Create a new severity
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1Severities"
        required: true
      responses:
        "201":
          description: Create a new severity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SeverityEntity"
      tags:
        - severities
      operationId: postV1Severities
      x-speakeasy-entity-operation: Severity#create
    get:
      summary: Lists severities
      description: Lists severities
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Lists severities
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SeverityEntityPaginated"
      tags:
        - severities
      operationId: getV1Severities
      x-speakeasy-entity-operation: Severities#read
  "/v1/severities/{severity_slug}":
    delete:
      summary: Delete a specific severity
      description: Delete a specific severity
      parameters:
        - in: path
          name: severity_slug
          required: true
          schema:
            type: string
          x-speakeasy-match: slug
      responses:
        "200":
          description: Delete a specific severity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SeverityEntity"
      tags:
        - severities
      operationId: deleteV1SeveritiesSeveritySlug
      x-speakeasy-entity-operation: Severity#delete
    patch:
      summary: Update a specific severity
      description: Update a specific severity
      parameters:
        - in: path
          name: severity_slug
          required: true
          schema:
            type: string
          x-speakeasy-match: slug
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1SeveritiesSeveritySlug"
        required: true
      responses:
        "200":
          description: Update a specific severity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SeverityEntity"
      tags:
        - severities
      operationId: patchV1SeveritiesSeveritySlug
      x-speakeasy-entity-operation: Severity#update
    get:
      summary: Retrieve a specific severity
      description: Retrieve a specific severity
      parameters:
        - in: path
          name: severity_slug
          required: true
          schema:
            type: string
          x-speakeasy-match: slug
      responses:
        "200":
          description: Retrieve a specific severity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SeverityEntity"
      tags:
        - severities
      operationId: getV1SeveritiesSeveritySlug
      x-speakeasy-entity-operation: Severity#read
  /v1/severity_matrix:
    patch:
      summary: Update your severity matrix
      description: Update available severities and impacts in your organization's
        severity matrix.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1SeverityMatrix"
        required: true
      responses:
        "200":
          description: Update available severities and impacts in your organization's
            severity matrix.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SeverityMatrix_SeverityMatrixEntity"
      tags:
        - severity_matrix
      operationId: patchV1SeverityMatrix
    get:
      summary: Retrieve your severity matrix
      description: Retrieve the Severity matrix for your organization and its
        components and configured severities.
      responses:
        "200":
          description: Retrieve the Severity matrix for your organization and its
            components and configured severities.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SeverityMatrix_SeverityMatrixEntity"
      tags:
        - severity_matrix
      operationId: getV1SeverityMatrix
  /v1/severity_matrix/conditions:
    get:
      summary: Lists conditions
      description: Lists conditions
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Lists conditions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SeverityMatrix_ConditionEntity"
      tags:
        - severity_matrix
      operationId: getV1SeverityMatrixConditions
    post:
      summary: Create condition
      description: Create a new condition
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1SeverityMatrixConditions"
        required: true
      responses:
        "201":
          description: Create a new condition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SeverityMatrix_ConditionEntity"
      tags:
        - severity_matrix
      operationId: postV1SeverityMatrixConditions
  "/v1/severity_matrix/conditions/{condition_id}":
    delete:
      summary: Delete a specific condition
      description: Delete a specific condition
      parameters:
        - in: path
          name: condition_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Delete a specific condition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SeverityMatrix_ConditionEntity"
      tags:
        - severity_matrix
      operationId: deleteV1SeverityMatrixConditionsConditionId
    patch:
      summary: Update a specific condition
      description: Update a specific condition
      parameters:
        - in: path
          name: condition_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1SeverityMatrixConditionsConditionId"
        required: true
      responses:
        "200":
          description: Update a specific condition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SeverityMatrix_ConditionEntity"
      tags:
        - severity_matrix
      operationId: patchV1SeverityMatrixConditionsConditionId
    get:
      parameters:
        - in: path
          name: condition_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: get Condition(s)
      tags:
        - severity_matrix
      operationId: getV1SeverityMatrixConditionsConditionId
  /v1/severity_matrix/impacts:
    get:
      summary: Lists impacts
      description: Lists impacts
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Lists impacts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SeverityMatrix_ImpactEntity"
      tags:
        - severity_matrix
      operationId: getV1SeverityMatrixImpacts
    post:
      summary: Create impact
      description: Create a new impact
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1SeverityMatrixImpacts"
        required: true
      responses:
        "201":
          description: Create a new impact
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SeverityMatrix_ImpactEntity"
      tags:
        - severity_matrix
      operationId: postV1SeverityMatrixImpacts
  "/v1/severity_matrix/impacts/{impact_id}":
    delete:
      summary: Delete a specific impact
      description: Delete a specific impact
      parameters:
        - in: path
          name: impact_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Delete a specific impact
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SeverityMatrix_ImpactEntity"
      tags:
        - severity_matrix
      operationId: deleteV1SeverityMatrixImpactsImpactId
    patch:
      summary: Update a specific impact
      description: Update a specific impact
      parameters:
        - in: path
          name: impact_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1SeverityMatrixImpactsImpactId"
        required: true
      responses:
        "200":
          description: Update a specific impact
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SeverityMatrix_ImpactEntity"
      tags:
        - severity_matrix
      operationId: patchV1SeverityMatrixImpactsImpactId
  /v1/scheduled_maintenances:
    post:
      summary: Create a scheduled maintenance event
      description: Create a new scheduled maintenance event
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1ScheduledMaintenances"
        required: true
      responses:
        "201":
          description: Create a new scheduled maintenance event
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduledMaintenanceEntity"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEntity"
      tags:
        - scheduled_maintenances
      operationId: postV1ScheduledMaintenances
    get:
      summary: List scheduled maintenance events
      description: Lists all scheduled maintenance events
      parameters:
        - in: query
          name: query
          description: Filter scheduled_maintenances with a query on their name
          required: false
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Lists all scheduled maintenance events
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduledMaintenanceEntity"
      tags:
        - scheduled_maintenances
      operationId: getV1ScheduledMaintenances
  "/v1/scheduled_maintenances/{scheduled_maintenance_id}":
    delete:
      summary: Delete a scheduled maintenance event
      description: Delete a scheduled maintenance event, preventing it from taking place.
      parameters:
        - in: path
          name: scheduled_maintenance_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete a scheduled maintenance event, preventing it from taking
            place.
      tags:
        - scheduled_maintenances
      operationId: deleteV1ScheduledMaintenancesScheduledMaintenanceId
    patch:
      summary: Update a scheduled maintenance event
      description: Change the conditions of a scheduled maintenance event, including
        updating any status page announcements of changes.
      parameters:
        - in: path
          name: scheduled_maintenance_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1ScheduledMaintenancesScheduledMaintenanceId"
        required: true
      responses:
        "200":
          description: Change the conditions of a scheduled maintenance event, including
            updating any status page announcements of changes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduledMaintenanceEntity"
      tags:
        - scheduled_maintenances
      operationId: patchV1ScheduledMaintenancesScheduledMaintenanceId
    get:
      summary: Retrieve a scheduled maintenance event
      description: Fetch the details of a scheduled maintenance event.
      parameters:
        - in: path
          name: scheduled_maintenance_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Fetch the details of a scheduled maintenance event.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduledMaintenanceEntity"
      tags:
        - scheduled_maintenances
      operationId: getV1ScheduledMaintenancesScheduledMaintenanceId
  /v1/schedules:
    get:
      summary: List all schedules
      description: List all known schedules in FireHydrant as pulled from external sources
      parameters:
        - in: query
          name: query
          description: Filter schedules with a query on their name
          required: false
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: List all known schedules in FireHydrant as pulled from external
            sources
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleEntityPaginated"
      tags:
        - schedules
      operationId: getV1Schedules
  /v1/infrastructures:
    get:
      summary: Lists functionality, service and environment objects
      description: Lists functionality, service and environment objects
      parameters:
        - in: query
          name: query
          description: A query to search infrastructures by their name
          required: false
          schema:
            type: string
        - in: query
          name: omit_for
          description: Omit for any infrastructure that is added to an incident using the
            format "incident/{incident_id}"
          required: false
          schema:
            type: string
        - in: query
          name: type
          description: Restrict infrastructure search to given type.
          required: false
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Lists functionality, service and environment objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfrastructureSearchEntity"
      tags:
        - infrastructures
      operationId: getV1Infrastructures
  "/v1/nunc/subscriptions/{unsubscribe_token}":
    delete:
      summary: Unsubscribe from status page updates
      description: Unsubscribe from status page updates
      parameters:
        - in: path
          name: unsubscribe_token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Unsubscribe from status page updates
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Nunc_NuncSubscription"
      tags:
        - nunc
      operationId: deleteV1NuncSubscriptionsUnsubscribeToken
  /v1/nunc/subscriptions:
    post:
      summary: Subscribe to status page updates
      description: Subscribe to status page updates
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1NuncSubscriptions"
        required: true
      responses:
        "201":
          description: Subscribe to status page updates
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Nunc_NuncSubscription"
      tags:
        - nunc
      operationId: postV1NuncSubscriptions
  /v1/status_update_templates:
    post:
      summary: Create a status update template
      description: Create a status update template for your organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1StatusUpdateTemplates"
        required: true
      responses:
        "201":
          description: Create a status update template for your organization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusUpdateTemplateEntity"
      tags:
        - status_update_templates
      operationId: postV1StatusUpdateTemplates
      x-speakeasy-entity-operation: StatusUpdateTemplate#create
    get:
      summary: List all status update templates
      description: List all status update templates for your organization
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: List all status update templates for your organization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusUpdateTemplateEntity"
      tags:
        - status_update_templates
      operationId: getV1StatusUpdateTemplates
      x-speakeasy-entity-operation: StatusUpdateTemplates#read
  "/v1/status_update_templates/{status_update_template_id}":
    delete:
      summary: Delete a status update template
      description: Delete a single status update template
      parameters:
        - in: path
          name: status_update_template_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      responses:
        "200":
          description: Delete a single status update template
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusUpdateTemplateEntity"
      tags:
        - status_update_templates
      operationId: deleteV1StatusUpdateTemplatesStatusUpdateTemplateId
      x-speakeasy-entity-operation: StatusUpdateTemplate#delete
    patch:
      summary: Update a status update template
      description: Update a single status update template
      parameters:
        - in: path
          name: status_update_template_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1StatusUpdateTemplatesStatusUpdateTemplateId"
        required: true
      responses:
        "200":
          description: Update a single status update template
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusUpdateTemplateEntity"
      tags:
        - status_update_templates
      operationId: patchV1StatusUpdateTemplatesStatusUpdateTemplateId
      x-speakeasy-entity-operation: StatusUpdateTemplate#update
    get:
      summary: Get a status update template
      description: Get a single status update template by ID
      parameters:
        - in: path
          name: status_update_template_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      responses:
        "200":
          description: Get a single status update template by ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusUpdateTemplateEntity"
      tags:
        - status_update_templates
      operationId: getV1StatusUpdateTemplatesStatusUpdateTemplateId
      x-speakeasy-entity-operation: StatusUpdateTemplate#read
  "/v1/custom_fields/definitions/{field_id}":
    delete:
      summary: Delete a custom field definition
      description: Delete a custom field definition
      parameters:
        - in: path
          name: field_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Delete a custom field definition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organizations_CustomFieldDefinitionEntity"
      tags:
        - custom_fields
      operationId: deleteV1CustomFieldsDefinitionsFieldId
    patch:
      summary: Update custom field definition
      description: Update a single custom field definition
      parameters:
        - in: path
          name: field_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1CustomFieldsDefinitionsFieldId"
        required: true
      responses:
        "200":
          description: Update a single custom field definition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organizations_CustomFieldDefinitionEntity"
      tags:
        - custom_fields
      operationId: patchV1CustomFieldsDefinitionsFieldId
  /v1/custom_fields/definitions:
    post:
      summary: Create custom field definition
      description: Create a new custom field definition
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1CustomFieldsDefinitions"
        required: true
      responses:
        "201":
          description: Create a new custom field definition
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organizations_CustomFieldDefinitionEntity"
      tags:
        - custom_fields
      operationId: postV1CustomFieldsDefinitions
    get:
      summary: List custom field definitions
      description: List all custom field definitions
      responses:
        "200":
          description: List all custom field definitions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organizations_CustomFieldDefinitionEntity"
      tags:
        - custom_fields
      operationId: getV1CustomFieldsDefinitions
  "/v1/custom_fields/definitions/{field_id}/select_options":
    get:
      summary: Get custom field permissible values
      description: Get the permissible values for the a currently active custom select
        or multi-select field.
      parameters:
        - in: path
          name: field_id
          required: true
          schema:
            type: string
        - in: query
          name: query
          description: Text string of a query for filtering values.
          required: false
          schema:
            type: string
        - in: query
          name: all_versions
          description: If true, return all versions of the custom field definition.
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Get the permissible values for the a currently active custom select
            or multi-select field.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organizations_CustomFieldDefinitionEntity"
      tags:
        - custom_fields
      operationId: getV1CustomFieldsDefinitionsFieldIdSelectOptions
  /v1/post_mortems/reports:
    post:
      summary: Create a report
      description: Create a report
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1PostMortemsReports"
        required: true
      responses:
        "201":
          description: Create a report
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostMortems_PostMortemReportEntity"
      tags:
        - post_mortems
      operationId: postV1PostMortemsReports
    get:
      summary: List all reports
      description: List all reports
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: incident_id
          description: Filter the reports by an incident ID
          required: false
          schema:
            type: string
        - in: query
          name: updated_since
          description: Filter for reports updated after the given ISO8601 timestamp
          required: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: List all reports
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostMortems_PostMortemReportEntityPaginated"
      tags:
        - post_mortems
      operationId: getV1PostMortemsReports
  "/v1/post_mortems/reports/{report_id}":
    patch:
      summary: Update a report
      description: Update a report
      parameters:
        - in: path
          name: report_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1PostMortemsReportsReportId"
        required: true
      responses:
        "200":
          description: Update a report
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostMortems_PostMortemReportEntity"
      tags:
        - post_mortems
      operationId: patchV1PostMortemsReportsReportId
    get:
      summary: Get a report
      description: Get a report
      parameters:
        - in: path
          name: report_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a report
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostMortems_PostMortemReportEntity"
      tags:
        - post_mortems
      operationId: getV1PostMortemsReportsReportId
  "/v1/post_mortems/reports/{report_id}/reasons":
    post:
      summary: Create contributing factor
      description: Add a new contributing factor to an incident
      parameters:
        - in: path
          name: report_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1PostMortemsReportsReportIdReasons"
        required: true
      responses:
        "201":
          description: Add a new contributing factor to an incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostMortems_ReasonEntity"
      tags:
        - post_mortems
      operationId: postV1PostMortemsReportsReportIdReasons
    get:
      summary: List contributing factors
      description: List all contributing factors to an incident
      parameters:
        - in: path
          name: report_id
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: List all contributing factors to an incident
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostMortems_ReasonEntityPaginated"
      tags:
        - post_mortems
      operationId: getV1PostMortemsReportsReportIdReasons
  "/v1/post_mortems/reports/{report_id}/reasons/{reason_id}":
    patch:
      summary: Update a contributing factor
      description: Update a contributing factor
      parameters:
        - in: path
          name: report_id
          required: true
          schema:
            type: string
        - in: path
          name: reason_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1PostMortemsReportsReportIdReasonsReasonId"
        required: true
      responses:
        "200":
          description: Update a contributing factor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostMortems_ReasonEntity"
      tags:
        - post_mortems
      operationId: patchV1PostMortemsReportsReportIdReasonsReasonId
    delete:
      summary: Delete a contributing factor
      description: Delete a contributing factor
      parameters:
        - in: path
          name: report_id
          required: true
          schema:
            type: string
        - in: path
          name: reason_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Delete a contributing factor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostMortems_ReasonEntity"
      tags:
        - post_mortems
      operationId: deleteV1PostMortemsReportsReportIdReasonsReasonId
  "/v1/post_mortems/reports/{report_id}/reasons/order":
    put:
      summary: Reorder a contributing factor
      description: Reorder a contributing factor
      parameters:
        - in: path
          name: report_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/putV1PostMortemsReportsReportIdReasonsOrder"
        required: true
      responses:
        "200":
          description: Reorder a contributing factor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostMortems_ReasonEntity"
      tags:
        - post_mortems
      operationId: putV1PostMortemsReportsReportIdReasonsOrder
  "/v1/post_mortems/reports/{report_id}/fields/{field_id}":
    patch:
      summary: Update a field
      description: Update a field value on a post mortem report
      parameters:
        - in: path
          name: field_id
          required: true
          schema:
            type: string
        - in: path
          name: report_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1PostMortemsReportsReportIdFieldsFieldId"
        required: true
      responses:
        "200":
          description: Update a field value on a post mortem report
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostMortems_SectionFieldEntity"
      tags:
        - post_mortems
      operationId: patchV1PostMortemsReportsReportIdFieldsFieldId
  "/v1/post_mortems/reports/{report_id}/publish":
    post:
      summary: Publish a retrospective report
      description: Marks an incident retrospective as published and emails all of the
        participants in the report the summary
      parameters:
        - in: path
          name: report_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1PostMortemsReportsReportIdPublish"
        required: true
      responses:
        "201":
          description: Marks an incident retrospective as published and emails all of the
            participants in the report the summary
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostMortems_PostMortemReportEntity"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEntity"
      tags:
        - post_mortems
      operationId: postV1PostMortemsReportsReportIdPublish
  /v1/post_mortems/questions:
    put:
      summary: Update incident retrospective questions
      description: Update the questions configured to be provided and filled out on
        future retrospective reports.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/putV1PostMortemsQuestions"
        required: true
      responses:
        "200":
          description: Update the questions configured to be provided and filled out on
            future retrospective reports.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostMortems_QuestionTypeEntity"
      tags:
        - post_mortems
      operationId: putV1PostMortemsQuestions
    get:
      summary: List incident retrospective questions
      description: List the questions configured to be provided and filled out on each
        retrospective report.
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: List the questions configured to be provided and filled out on each
            retrospective report.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostMortems_QuestionTypeEntityPaginated"
      tags:
        - post_mortems
      operationId: getV1PostMortemsQuestions
  "/v1/post_mortems/questions/{question_id}":
    get:
      summary: Get an incident retrospective question configured to be provided and
        filled out on each retrospective report.
      description: Get an incident retrospective question
      parameters:
        - in: path
          name: question_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get an incident retrospective question
      tags:
        - post_mortems
      operationId: getV1PostMortemsQuestionsQuestionId
  /v1/alerts:
    get:
      summary: Retrieve all alerts
      description: Retrieve all alerts from third parties
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: query
          description: A text query for alerts
          required: false
          schema:
            type: string
        - in: query
          name: users
          description: A comma separated list of user IDs. This currently only works for
            Signals alerts.
          required: false
          schema:
            type: string
        - in: query
          name: teams
          description: A comma separated list of team IDs. This currently only works for
            Signals alerts.
          required: false
          schema:
            type: string
        - in: query
          name: signal_rules
          description: A comma separated list of signals rule IDs. This currently only
            works for Signals alerts.
          required: false
          schema:
            type: string
        - in: query
          name: environments
          description: A comma separated list of environment IDs. This currently only
            works for Signals alerts.
          required: false
          schema:
            type: string
        - in: query
          name: functionalities
          description: A comma separated list of functionality IDs. This currently only
            works for Signals alerts.
          required: false
          schema:
            type: string
        - in: query
          name: services
          description: A comma separated list of service IDs. This currently only works
            for Signals alerts.
          required: false
          schema:
            type: string
        - in: query
          name: tags
          description: A comma separated list of tags. This currently only works for
            Signals alerts.
          required: false
          schema:
            type: string
        - in: query
          name: tag_match_strategy
          description: The strategy to match tags. `any` will return alerts that have at
            least one of the supplied tags, `match_all` will return only alerts
            that have all of the supplied tags, and `exclude` will only return
            alerts that have none of the supplied tags. This currently only
            works for Signals alerts.
          required: false
          schema:
            type: string
            enum:
              - any
              - match_all
              - exclude
        - in: query
          name: statuses
          description: "A comma separated list of statuses to filter by. Valid statuses
            are: opened, acknowledged, resolved, ignored, or expired"
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Retrieve all alerts from third parties
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Alerts_AlertEntityPaginated"
      tags:
        - alerts
      operationId: getV1Alerts
  "/v1/alerts/{alert_id}":
    get:
      summary: Retrieve a single alert
      description: Retrieve a single alert
      parameters:
        - in: path
          name: alert_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieve a single alert
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Alerts_AlertEntity"
      tags:
        - alerts
      operationId: getV1AlertsAlertId
  /v1/processing_log_entries:
    get:
      summary: Processing Log Entries for a specific alert
      description: Processing Log Entries for a specific alert
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: integration_slug
          description: Scopes returned log entries to a specific integration ID
          required: false
          schema:
            type: string
        - in: query
          name: connection_id
          description: Scopes returned log entries to a specific connection ID
          required: false
          schema:
            type: string
        - in: query
          name: of_level
          description: Returns logs of all levels equal to or above the provided level
          required: false
          schema:
            type: string
            enum:
              - unknown
              - debug
              - info
              - warn
              - error
              - fatal
        - in: query
          name: exact_level
          description: Returns log entries of all levels equal to the provided level
          required: false
          schema:
            type: string
            enum:
              - unknown
              - debug
              - info
              - warn
              - error
              - fatal
      responses:
        "200":
          description: Processing Log Entries for a specific alert
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Alerts_ProcessingLogEntryEntityPaginated"
      tags:
        - processing_log_entries
      operationId: getV1ProcessingLogEntries
  /v1/ticketing/tickets:
    post:
      summary: Create a ticket
      description: Creates a ticket for a project
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1TicketingTickets"
        required: true
      responses:
        "201":
          description: Creates a ticket for a project
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticketing_TicketEntity"
      tags:
        - ticketing
      operationId: postV1TicketingTickets
    get:
      summary: List all tickets
      description: List all of the tickets that have been added to the organiation
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: tags
          description: A comma separated list of tags
          required: false
          schema:
            type: string
        - in: query
          name: tag_match_strategy
          description: A matching strategy for the tags provided
          required: false
          schema:
            type: string
            enum:
              - any
              - match_all
              - exclude
        - in: query
          name: assigned_user
          description: Filter tickets assigned to this user id
          required: false
          schema:
            type: string
        - in: query
          name: state
          description: Filter tickets by state
          required: false
          schema:
            type: string
            enum:
              - open
              - in_progress
              - cancelled
              - done
      responses:
        "200":
          description: List all of the tickets that have been added to the organiation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticketing_TicketEntity"
      tags:
        - ticketing
      operationId: getV1TicketingTickets
  "/v1/ticketing/tickets/{ticket_id}":
    delete:
      parameters:
        - in: path
          name: ticket_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: deleted Ticket
      tags:
        - ticketing
      operationId: deleteV1TicketingTicketsTicketId
    patch:
      summary: Update a ticket
      description: Update a ticket's attributes
      parameters:
        - in: path
          name: ticket_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1TicketingTicketsTicketId"
        required: true
      responses:
        "200":
          description: Update a ticket's attributes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticketing_TicketEntity"
      tags:
        - ticketing
      operationId: patchV1TicketingTicketsTicketId
    get:
      summary: Retrieve a single ticket
      description: Retrieves a single ticket by ID
      parameters:
        - in: path
          name: ticket_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieves a single ticket by ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticketing_TicketEntity"
      tags:
        - ticketing
      operationId: getV1TicketingTicketsTicketId
  /v1/ticketing/projects:
    get:
      summary: List all ticketing projects
      description: List all ticketing projects available to the organization
      parameters:
        - in: query
          name: supports_ticket_types
          required: false
          schema:
            type: string
        - in: query
          name: providers
          required: false
          schema:
            type: string
        - in: query
          name: connection_ids
          required: false
          schema:
            type: string
        - in: query
          name: configured_projects
          required: false
          schema:
            type: boolean
        - in: query
          name: query
          required: false
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: List all ticketing projects available to the organization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticketing_Projects_ProjectListItemEntity"
      tags:
        - ticketing
      operationId: getV1TicketingProjects
  "/v1/ticketing/projects/{ticketing_project_id}":
    get:
      summary: Retrieve a ticketing projects
      description: Retrieve a single ticketing project by ID
      parameters:
        - in: path
          name: ticketing_project_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieve a single ticketing project by ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticketing_Projects_ProjectListItemEntity"
      tags:
        - ticketing
      operationId: getV1TicketingProjectsTicketingProjectId
  "/v1/ticketing/projects/{ticketing_project_id}/configuration_options":
    get:
      parameters:
        - in: path
          name: ticketing_project_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: get ConfigurationOption(s)
      tags:
        - ticketing
      operationId: getV1TicketingProjectsTicketingProjectIdConfigurationOptions
  "/v1/ticketing/projects/{ticketing_project_id}/configuration_options/options_for/{field_id}":
    get:
      parameters:
        - in: path
          name: field_id
          required: true
          schema:
            type: string
        - in: path
          name: ticketing_project_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: get OptionsFor(s)
      tags:
        - ticketing
      operationId: getV1TicketingProjectsTicketingProjectIdConfigurationOptionsOptionsForFieldId
  "/v1/ticketing/projects/{ticketing_project_id}/field_maps/available_fields":
    get:
      summary: Get the fields that can be mapped for this project.
      description: Returns metadata for the fields that are available for field mapping.
      parameters:
        - in: path
          name: ticketing_project_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns metadata for the fields that are available for field mapping.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticketing_FieldMaps_MappableFieldEntity"
      tags:
        - ticketing
      operationId: getV1TicketingProjectsTicketingProjectIdFieldMapsAvailableFields
  "/v1/ticketing/projects/{ticketing_project_id}/field_maps":
    post:
      summary: Create field map for a ticketing project
      description: Creates field map for a ticketing project
      parameters:
        - in: path
          name: ticketing_project_id
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Creates field map for a ticketing project
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticketing_ProjectFieldMapEntity"
      tags:
        - ticketing
      operationId: postV1TicketingProjectsTicketingProjectIdFieldMaps
  "/v1/ticketing/projects/{ticketing_project_id}/field_maps/{map_id}":
    delete:
      summary: Archive field map for a ticketing project
      description: Archive field map for a ticketing project
      parameters:
        - in: path
          name: map_id
          required: true
          schema:
            type: string
        - in: path
          name: ticketing_project_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Archive field map for a ticketing project
      tags:
        - ticketing
      operationId: deleteV1TicketingProjectsTicketingProjectIdFieldMapsMapId
    get:
      summary: Retrieve field map for a ticketing project
      description: Retrieve field map for a ticketing project
      parameters:
        - in: path
          name: map_id
          required: true
          schema:
            type: string
        - in: path
          name: ticketing_project_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieve field map for a ticketing project
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticketing_ProjectFieldMapEntity"
      tags:
        - ticketing
      operationId: getV1TicketingProjectsTicketingProjectIdFieldMapsMapId
    patch:
      summary: Update field map for a ticketing project
      description: Update field map for a ticketing project
      parameters:
        - in: path
          name: map_id
          required: true
          schema:
            type: string
        - in: path
          name: ticketing_project_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Update field map for a ticketing project
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticketing_ProjectFieldMapEntity"
      tags:
        - ticketing
      operationId: patchV1TicketingProjectsTicketingProjectIdFieldMapsMapId
  "/v1/ticketing/projects/{ticketing_project_id}/provider_project_configurations":
    post:
      summary: Create configuration for a ticketing project
      description: Creates configuration for a ticketing project
      parameters:
        - in: path
          name: ticketing_project_id
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Creates configuration for a ticketing project
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticketing_ProjectConfigEntity"
      tags:
        - ticketing
      operationId: postV1TicketingProjectsTicketingProjectIdProviderProjectConfigurations
  "/v1/ticketing/projects/{ticketing_project_id}/provider_project_configurations/{config_id}":
    delete:
      summary: Archive configuration for a ticketing project
      description: Archive configuration for a ticketing project
      parameters:
        - in: path
          name: ticketing_project_id
          required: true
          schema:
            type: string
        - in: path
          name: config_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Archive configuration for a ticketing project
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticketing_ProjectConfigEntity"
      tags:
        - ticketing
      operationId: deleteV1TicketingProjectsTicketingProjectIdProviderProjectConfigurationsConfigId
    patch:
      summary: Update configuration for a ticketing project
      description: Update configuration for a ticketing project
      parameters:
        - in: path
          name: ticketing_project_id
          required: true
          schema:
            type: string
        - in: path
          name: config_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Update configuration for a ticketing project
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticketing_ProjectConfigEntity"
      tags:
        - ticketing
      operationId: patchV1TicketingProjectsTicketingProjectIdProviderProjectConfigurationsConfigId
    get:
      summary: Retrieve configuration for a ticketing project
      description: Retrieve configuration for a ticketing project
      parameters:
        - in: path
          name: ticketing_project_id
          required: true
          schema:
            type: string
        - in: path
          name: config_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieve configuration for a ticketing project
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticketing_ProjectConfigEntity"
      tags:
        - ticketing
      operationId: getV1TicketingProjectsTicketingProjectIdProviderProjectConfigurationsConfigId
  /v1/ticketing/priorities:
    post:
      summary: Create a ticketing priority
      description: Create a single ticketing priority
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1TicketingPriorities"
        required: true
      responses:
        "201":
          description: Create a single ticketing priority
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticketing_PriorityEntity"
      tags:
        - ticketing
      operationId: postV1TicketingPriorities
    get:
      summary: List all ticketing priorities
      description: List all ticketing priorities available to the organization
      responses:
        "200":
          description: List all ticketing priorities available to the organization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticketing_PriorityEntity"
      tags:
        - ticketing
      operationId: getV1TicketingPriorities
  "/v1/ticketing/priorities/{id}":
    delete:
      summary: Delete a ticketing priority
      description: Delete a single ticketing priority by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Delete a single ticketing priority by ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticketing_PriorityEntity"
      tags:
        - ticketing
      operationId: deleteV1TicketingPrioritiesId
    patch:
      summary: Update a ticketing priority
      description: Update a single ticketing priority's attributes
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1TicketingPrioritiesId"
        required: true
      responses:
        "200":
          description: Update a single ticketing priority's attributes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticketing_PriorityEntity"
      tags:
        - ticketing
      operationId: patchV1TicketingPrioritiesId
    get:
      summary: Retrieve a ticketing priority
      description: Retrieve a single ticketing priority by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieve a single ticketing priority by ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ticketing_PriorityEntity"
      tags:
        - ticketing
      operationId: getV1TicketingPrioritiesId
  /v1/ticketing/ticket_tags:
    get:
      summary: List all ticket tags
      description: List all of the ticket tags in the organization
      parameters:
        - in: query
          name: prefix
          required: false
          schema:
            type: string
      responses:
        "200":
          description: List all of the ticket tags in the organization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagEntityPaginated"
      tags:
        - ticketing
      operationId: getV1TicketingTicketTags
  /v1/task_lists:
    post:
      summary: Create a task list
      description: Creates a new task list
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1TaskLists"
        required: true
      responses:
        "201":
          description: Creates a new task list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskListEntity"
      tags:
        - task_lists
      operationId: postV1TaskLists
      x-speakeasy-entity-operation: TaskList#create
    get:
      summary: List all task lists
      description: Lists all task lists for your organization
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Lists all task lists for your organization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskListEntity"
      tags:
        - task_lists
      operationId: getV1TaskLists
      x-speakeasy-entity-operation: TaskLists#read
  "/v1/task_lists/{task_list_id}":
    delete:
      summary: Delete a task list
      description: Delete a task list
      parameters:
        - in: path
          name: task_list_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      responses:
        "200":
          description: Delete a task list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskListEntity"
      tags:
        - task_lists
      operationId: deleteV1TaskListsTaskListId
      x-speakeasy-entity-operation: TaskList#delete
    patch:
      summary: Update a task list
      description: Updates a task list's attributes and task list items
      parameters:
        - in: path
          name: task_list_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1TaskListsTaskListId"
        required: true
      responses:
        "200":
          description: Updates a task list's attributes and task list items
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskListEntity"
      tags:
        - task_lists
      operationId: patchV1TaskListsTaskListId
      x-speakeasy-entity-operation: TaskList#update
    get:
      summary: Retrieve a task list
      description: Retrieves a single task list by ID
      parameters:
        - in: path
          name: task_list_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      responses:
        "200":
          description: Retrieves a single task list by ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskListEntity"
      tags:
        - task_lists
      operationId: getV1TaskListsTaskListId
      x-speakeasy-entity-operation: TaskList#read
  /v1/noauth/ping:
    get:
      summary: Ping
      description: Simple endpoint to verify your API connection is working
      responses:
        "200":
          description: Simple endpoint to verify your API connection is working
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PongEntity"
      tags:
        - noauth
      operationId: getV1NoauthPing
  "/v1/scim/v2/Groups/{id}":
    put:
      summary: Updates a Team (via the Group protocol) and assigns members to that team.
      description: SCIM endpoint to update a Team (Colloquial for Group in the SCIM
        protocol). Any members defined in the payload will be assigned to the
        team with no defined role, any missing members will be removed from the
        team.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: "#/components/schemas/putV1ScimV2GroupsId"
        required: true
      responses:
        "200":
          description: SCIM endpoint to update a Team (Colloquial for Group in the SCIM
            protocol). Any members defined in the payload will be assigned to
            the team with no defined role, any missing members will be removed
            from the team.
      tags:
        - scim
      operationId: putV1ScimV2GroupsId
    delete:
      summary: Deletes a Team (via the Group protocol)
      description: SCIM endpoint to delete a Team (Colloquial for Group in the SCIM
        protocol).
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: SCIM endpoint to delete a Team (Colloquial for Group in the SCIM
            protocol).
      tags:
        - scim
      operationId: deleteV1ScimV2GroupsId
    get:
      summary: Lists a Team (via the Group protocol)
      description: SCIM endpoint that lists a Team (Colloquial for Group in the SCIM
        protocol)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: SCIM endpoint that lists a Team (Colloquial for Group in the SCIM
            protocol)
      tags:
        - scim
      operationId: getV1ScimV2GroupsId
  /v1/scim/v2/Groups:
    post:
      summary: Creates a new Team (via the Group protocol) and assigns members to that
        team.
      description: SCIM endpoint to create a new Team (Colloquial for Group in the
        SCIM protocol). Any members defined in the payload will be assigned to
        the team with no defined role.
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: "#/components/schemas/postV1ScimV2Groups"
        required: true
      responses:
        "201":
          description: SCIM endpoint to create a new Team (Colloquial for Group in the
            SCIM protocol). Any members defined in the payload will be assigned
            to the team with no defined role.
      tags:
        - scim
      operationId: postV1ScimV2Groups
    get:
      summary: List all Teams (via the Group protocol)
      description: SCIM endpoint that lists all Teams (Colloquial for Group in the
        SCIM protocol)
      parameters:
        - in: query
          name: startIndex
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: count
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: filter
          description: >-
            This is a string used to query groups by displayName.
                    Proper example syntax for this would be `?filter=displayName eq "My Team Name"`.
                    Currently we only support the `eq` operator
          required: false
          schema:
            type: string
      responses:
        "200":
          description: SCIM endpoint that lists all Teams (Colloquial for Group in the
            SCIM protocol)
      tags:
        - scim
      operationId: getV1ScimV2Groups
  "/v1/scim/v2/Users/{id}":
    delete:
      summary: Deletes a User using SCIM protocol
      description: SCIM endpoint to delete a User. This endpoint will deactivate a
        confirmed User record in our system.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: SCIM endpoint to delete a User. This endpoint will deactivate a
            confirmed User record in our system.
      tags:
        - scim
      operationId: deleteV1ScimV2UsersId
    put:
      summary: Updates a User using SCIM protocol
      description: PUT SCIM endpoint to update a User. This endpoint is used to
        replace a resource's attributes.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: "#/components/schemas/putV1ScimV2UsersId"
        required: true
      responses:
        "200":
          description: PUT SCIM endpoint to update a User. This endpoint is used to
            replace a resource's attributes.
      tags:
        - scim
      operationId: putV1ScimV2UsersId
    get:
      summary: Lists a User (via the User protocol)
      description: SCIM endpoint that lists a User
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: SCIM endpoint that lists a User
      tags:
        - scim
      operationId: getV1ScimV2UsersId
  /v1/scim/v2/Users:
    post:
      summary: Creates a new User using SCIM protocol
      description: SCIM endpoint to create and provision a new User. This endpoint
        will provision the User, which allows them to accept their account
        throught their IDP or via the Forgot Password flow.
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: "#/components/schemas/postV1ScimV2Users"
        required: true
      responses:
        "201":
          description: SCIM endpoint to create and provision a new User. This endpoint
            will provision the User, which allows them to accept their account
            throught their IDP or via the Forgot Password flow.
      tags:
        - scim
      operationId: postV1ScimV2Users
    get:
      summary: Gets a list of Users using SCIM protocol
      description: SCIM endpoint that lists users. This endpoint will display a list
        of Users currently in the system.
      parameters:
        - in: query
          name: filter
          description: >-
            This is a string used to query users by either userName or email.
                    Proper example syntax for this would be `?filter=userName eq john` or `?filter=userName eq "john@firehydrant.com"`.
                    Currently we only support the `eq` operator
          required: false
          schema:
            type: string
        - in: query
          name: startIndex
          description: This is an integer which represents a pagination offset
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: count
          description: This is an integer which represents the number of items per page in
            the response
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: SCIM endpoint that lists users. This endpoint will display a list
            of Users currently in the system.
      tags:
        - scim
      operationId: getV1ScimV2Users
  "/v1/catalogs/{catalog_id}/refresh":
    get:
      summary: Refresh a catalog.
      description: Schedules an async task to re-import catalog info and update
        catalog data accordingly.
      parameters:
        - in: path
          name: catalog_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Schedules an async task to re-import catalog info and update
            catalog data accordingly.
      tags:
        - catalogs
      operationId: getV1CatalogsCatalogIdRefresh
  "/v1/catalogs/{catalog_id}/ingest":
    post:
      summary: Accept catalog data in the configured format.
      description: Accepts catalog data in the configured format and asyncronously
        processes the data to incorporate changes into service catalog.
      parameters:
        - in: path
          name: catalog_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1CatalogsCatalogIdIngest"
        required: true
      responses:
        "201":
          description: Accepts catalog data in the configured format and asyncronously
            processes the data to incorporate changes into service catalog.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Imports_ImportEntity"
      tags:
        - catalogs
      operationId: postV1CatalogsCatalogIdIngest
  /v1/checklist_templates:
    post:
      summary: Create a checklist template
      description: Creates a checklist template for the organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1ChecklistTemplates"
        required: true
      responses:
        "201":
          description: Creates a checklist template for the organization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChecklistTemplateEntity"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEntity"
      tags:
        - checklist_templates
      operationId: postV1ChecklistTemplates
      x-speakeasy-entity-operation: ChecklistTemplate#create
    get:
      summary: List all checklist templates
      description: List all of the checklist templates that have been added to the
        organization
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: query
          description: A query to search checklist templates by their name
          required: false
          schema:
            type: string
      responses:
        "200":
          description: List all of the checklist templates that have been added to the
            organization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChecklistTemplateEntityPaginated"
      tags:
        - checklist_templates
      operationId: getV1ChecklistTemplates
      x-speakeasy-entity-operation: ChecklistTemplates#read
  "/v1/checklist_templates/{id}":
    delete:
      summary: Archive a checklist template
      description: Archive a checklist template
      parameters:
        - in: path
          name: id
          description: Checklist Template UUID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Archive a checklist template
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChecklistTemplateEntity"
      tags:
        - checklist_templates
      operationId: deleteV1ChecklistTemplatesId
      x-speakeasy-entity-operation: ChecklistTemplate#delete
    patch:
      summary: Update a checklist template
      description: Update a checklist templates attributes
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1ChecklistTemplatesId"
        required: true
      responses:
        "200":
          description: Update a checklist templates attributes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChecklistTemplateEntity"
      tags:
        - checklist_templates
      operationId: patchV1ChecklistTemplatesId
      x-speakeasy-entity-operation: ChecklistTemplate#update
    get:
      summary: Retrieve a single checklist template
      description: Retrieves a single checklist template by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieves a single checklist template by ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChecklistTemplateEntity"
      tags:
        - checklist_templates
      operationId: getV1ChecklistTemplatesId
      x-speakeasy-entity-operation: ChecklistTemplate#read
  /v1/bootstrap:
    get:
      responses:
        "200":
          description: get Bootstrap(s)
      tags:
        - bootstrap
      operationId: getV1Bootstrap
  "/v1/form_configurations/{slug}":
    get:
      parameters:
        - in: path
          name: slug
          required: true
          schema:
            type: string
      responses:
        "200":
          description: get FormConfiguration(s)
      tags:
        - form_configurations
      operationId: getV1FormConfigurationsSlug
  "/v1/conversations/{conversation_id}/comments/{comment_id}/reactions/{reaction_id}":
    delete:
      summary: Archive a reaction
      description: ALPHA - Archive a reaction
      parameters:
        - in: path
          name: reaction_id
          required: true
          schema:
            type: string
        - in: path
          name: conversation_id
          required: true
          schema:
            type: string
        - in: path
          name: comment_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: ALPHA - Archive a reaction
      tags:
        - conversations
      operationId: deleteV1ConversationsConversationIdCommentsCommentIdReactionsReactionId
  "/v1/conversations/{conversation_id}/comments/{comment_id}/reactions":
    post:
      summary: Create a reaction
      description: ALPHA - Create a reaction on a comment
      parameters:
        - in: path
          name: conversation_id
          required: true
          schema:
            type: string
        - in: path
          name: comment_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1ConversationsConversationIdCommentsCommentIdR\
                eactions"
        required: true
      responses:
        "201":
          description: ALPHA - Create a reaction on a comment
      tags:
        - conversations
      operationId: postV1ConversationsConversationIdCommentsCommentIdReactions
    get:
      summary: List all reactions for a comment
      description: ALPHA - List all of the reactions that have been added to a comment
      parameters:
        - in: path
          name: conversation_id
          required: true
          schema:
            type: string
        - in: path
          name: comment_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ALPHA - List all of the reactions that have been added to a comment
      tags:
        - conversations
      operationId: getV1ConversationsConversationIdCommentsCommentIdReactions
  "/v1/conversations/{conversation_id}/comments/{comment_id}":
    delete:
      summary: Archive a comment
      description: ALPHA - Archive a comment
      parameters:
        - in: path
          name: comment_id
          required: true
          schema:
            type: string
        - in: path
          name: conversation_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: ALPHA - Archive a comment
      tags:
        - conversations
      operationId: deleteV1ConversationsConversationIdCommentsCommentId
    patch:
      summary: Update a comment
      description: ALPHA - Update a comment's attributes
      parameters:
        - in: path
          name: comment_id
          required: true
          schema:
            type: string
        - in: path
          name: conversation_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1ConversationsConversationIdCommentsCommentId"
        required: true
      responses:
        "200":
          description: ALPHA - Update a comment's attributes
      tags:
        - conversations
      operationId: patchV1ConversationsConversationIdCommentsCommentId
    get:
      summary: Retrieve a single comment
      description: ALPHA - Retrieves a single comment by ID
      parameters:
        - in: path
          name: comment_id
          required: true
          schema:
            type: string
        - in: path
          name: conversation_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ALPHA - Retrieves a single comment by ID
      tags:
        - conversations
      operationId: getV1ConversationsConversationIdCommentsCommentId
  "/v1/conversations/{conversation_id}/comments":
    post:
      summary: Create a comment
      description: ALPHA - Creates a comment for a project
      parameters:
        - in: path
          name: conversation_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1ConversationsConversationIdComments"
        required: true
      responses:
        "201":
          description: ALPHA - Creates a comment for a project
      tags:
        - conversations
      operationId: postV1ConversationsConversationIdComments
    get:
      summary: List all comments
      description: ALPHA - List all of the comments that have been added to the organization
      parameters:
        - in: query
          name: before
          description: An ISO8601 timestamp that allows filtering for comments posted
            before the provided time.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: after
          description: An ISO8601 timestamp that allows filtering for comments posted
            after the provided time.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: sort
          description: Allows sorting comments by the time they were posted, ascending or
            descending.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: asc
        - in: path
          name: conversation_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ALPHA - List all of the comments that have been added to the
            organization
      tags:
        - conversations
      operationId: getV1ConversationsConversationIdComments
  /v1/signals/analytics/timeseries:
    get:
      summary: Generate timeseries alert metrics
      description: Generate a timeseries-based report of metrics for Signals alerts
      parameters:
        - in: query
          name: bucket
          description: String that determines how records are grouped
          required: false
          schema:
            type: string
            enum:
              - month
              - week
              - day
        - in: query
          name: signal_rules
          description: A comma separated list of signal rule IDs
          required: false
          schema:
            type: string
        - in: query
          name: teams
          description: A comma separated list of team IDs
          required: false
          schema:
            type: string
        - in: query
          name: environments
          description: A comma separated list of environment IDs
          required: false
          schema:
            type: string
        - in: query
          name: services
          description: A comma separated list of service IDs
          required: false
          schema:
            type: string
        - in: query
          name: tags
          description: A comma separated list of tags
          required: false
          schema:
            type: string
        - in: query
          name: users
          description: A comma separated list of user IDs
          required: false
          schema:
            type: string
        - in: query
          name: group_by
          description: String that determines how records are grouped
          required: false
          schema:
            type: string
            enum:
              - signal_rules
              - teams
              - services
              - environments
              - tags
        - in: query
          name: sort_by
          description: String that determines how records are sorted
          required: false
          schema:
            type: string
            enum:
              - total_opened_alerts
              - total_acked_alerts
              - total_incidents
              - acked_percentage
              - incidents_percentage
        - in: query
          name: sort_direction
          description: String that determines how records are sorted
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - in: query
          name: start_date
          description: The start date to return metrics from
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: end_date
          description: The end date to return metrics from
          required: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Generate a timeseries-based report of metrics for Signals alerts
      tags:
        - signals
      operationId: getV1SignalsAnalyticsTimeseries
  /v1/signals/analytics/grouped_metrics:
    get:
      summary: Generate grouped alert metrics
      description: Generate a report of grouped metrics for Signals alerts
      parameters:
        - in: query
          name: signal_rules
          description: A comma separated list of signal rule IDs
          required: false
          schema:
            type: string
        - in: query
          name: teams
          description: A comma separated list of team IDs
          required: false
          schema:
            type: string
        - in: query
          name: environments
          description: A comma separated list of environment IDs
          required: false
          schema:
            type: string
        - in: query
          name: services
          description: A comma separated list of service IDs
          required: false
          schema:
            type: string
        - in: query
          name: tags
          description: A comma separated list of tags
          required: false
          schema:
            type: string
        - in: query
          name: users
          description: A comma separated list of user IDs
          required: false
          schema:
            type: string
        - in: query
          name: group_by
          description: String that determines how records are grouped
          required: false
          schema:
            type: string
            enum:
              - signal_rules
              - teams
              - services
              - environments
              - tags
        - in: query
          name: sort_by
          description: String that determines how records are sorted
          required: false
          schema:
            type: string
            enum:
              - total_opened_alerts
              - total_acked_alerts
              - total_incidents
              - acked_percentage
              - incidents_percentage
        - in: query
          name: sort_direction
          description: String that determines how records are sorted
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - in: query
          name: start_date
          description: The start date to return metrics from
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: end_date
          description: The end date to return metrics from
          required: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Generate a report of grouped metrics for Signals alerts
      tags:
        - signals
      operationId: getV1SignalsAnalyticsGroupedMetrics
  /v1/signals/analytics/mttx:
    get:
      summary: Get MTTX metrics for Signals Alerts
      description: Get mean-time-to-acknowledged (MTTA) and mean-time-to-resolved
        (MTTR) metrics for Signals alerts
      parameters:
        - in: query
          name: signal_rules
          description: A comma separated list of signal rule IDs
          required: false
          schema:
            type: string
        - in: query
          name: teams
          description: A comma separated list of team IDs
          required: false
          schema:
            type: string
        - in: query
          name: environments
          description: A comma separated list of environment IDs
          required: false
          schema:
            type: string
        - in: query
          name: services
          description: A comma separated list of service IDs
          required: false
          schema:
            type: string
        - in: query
          name: tags
          description: A comma separated list of tags
          required: false
          schema:
            type: string
        - in: query
          name: users
          description: A comma separated list of user IDs
          required: false
          schema:
            type: string
        - in: query
          name: group_by
          description: String that determines how records are grouped
          required: false
          schema:
            type: string
            enum:
              - signal_rules
              - teams
              - services
              - environments
              - tags
        - in: query
          name: sort_by
          description: String that determines how records are sorted
          required: false
          schema:
            type: string
            enum:
              - total_opened_alerts
              - total_acked_alerts
              - total_incidents
              - acked_percentage
              - incidents_percentage
        - in: query
          name: sort_direction
          description: String that determines how records are sorted
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - in: query
          name: start_date
          description: The start date to return metrics from
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: end_date
          description: The end date to return metrics from
          required: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Get mean-time-to-acknowledged (MTTA) and mean-time-to-resolved
            (MTTR) metrics for Signals alerts
      tags:
        - signals
      operationId: getV1SignalsAnalyticsMttx
  /v1/signals/event_sources:
    get:
      parameters:
        - in: query
          name: team_id
          description: Team ID to send signals to directly
          required: false
          schema:
            type: string
        - in: query
          name: escalation_policy_id
          description: Escalation policy ID to send signals to directly. `team_id` is
            required if this is provided.
          required: false
          schema:
            type: string
        - in: query
          name: on_call_schedule_id
          description: On-call schedule ID to send signals to directly. `team_id` is
            required if this is provided.
          required: false
          schema:
            type: string
        - in: query
          name: user_id
          description: User ID to send signals to directly
          required: false
          schema:
            type: string
      responses:
        "200":
          description: get EventSource(s)
      tags:
        - signals
      operationId: getV1SignalsEventSources
  /v1/signals/email_targets:
    post:
      summary: Create an email target
      description: Create a Signals email target for a team.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1SignalsEmailTargets"
        required: true
      responses:
        "201":
          description: Create a Signals email target for a team.
      tags:
        - signals
      operationId: postV1SignalsEmailTargets
    get:
      summary: List email targets
      description: List all Signals email targets for a team.
      parameters:
        - in: query
          name: query
          description: A query string to search the list of targets by.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: List all Signals email targets for a team.
      tags:
        - signals
      operationId: getV1SignalsEmailTargets
  "/v1/signals/email_targets/{id}":
    delete:
      summary: Delete an email target
      description: Delete a Signals email target by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete a Signals email target by ID
      tags:
        - signals
      operationId: deleteV1SignalsEmailTargetsId
    patch:
      summary: Update an email target
      description: Update a Signals email target by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1SignalsEmailTargetsId"
        required: true
      responses:
        "200":
          description: Update a Signals email target by ID
      tags:
        - signals
      operationId: patchV1SignalsEmailTargetsId
    get:
      summary: Get an email target
      description: Get a Signals email target by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a Signals email target by ID
      tags:
        - signals
      operationId: getV1SignalsEmailTargetsId
  /v1/signals/webhook_targets:
    post:
      x-speakeasy-entity-operation: WebhookTarget#create
      summary: Create an webhook target
      description: Create a Signals webhook target.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1SignalsWebhookTargets"
        required: true
      responses:
        "201":
          description: Create a Signals webhook target.
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                  url:
                    type: string
                  state:
                    type: string
                  created_by:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      source:
                        type: string
                      email:
                        type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  subscriptions:
                    type: string
      tags:
        - signals
      operationId: postV1SignalsWebhookTargets
    get:
      summary: List webhook targets
      description: List all Signals webhook targets.
      parameters:
        - in: query
          name: query
          description: A query string for searching through the list of webhook targets.
          required: false
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: List all Signals webhook targets.
      tags:
        - signals
      operationId: getV1SignalsWebhookTargets
  "/v1/signals/webhook_targets/{id}":
    delete:
      x-speakeasy-entity-operation: WebhookTarget#delete
      summary: Delete an webhook target
      description: Delete a Signals webhook target by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete a Signals webhook target by ID
      tags:
        - signals
      operationId: deleteV1SignalsWebhookTargetsId
    patch:
      x-speakeasy-entity-operation: WebhookTarget#update
      summary: Update an webhook target
      description: Update a Signals webhook target by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1SignalsWebhookTargetsId"
        required: true
      responses:
        "200":
          description: Update a Signals webhook target by ID
      tags:
        - signals
      operationId: patchV1SignalsWebhookTargetsId
    get:
      x-speakeasy-entity-operation: WebhookTarget#read
      summary: Get an webhook target
      description: Get a Signals webhook target by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Get a Signals webhook target by ID
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                  url:
                    type: string
                  state:
                    type: string
                  created_by:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      source:
                        type: string
                      email:
                        type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  subscriptions:
                    type: string
      tags:
        - signals
      operationId: getV1SignalsWebhookTargetsId
  /v1/signals/transposers:
    get:
      responses:
        "200":
          description: get Transposer(s)
      tags:
        - signals
      operationId: getV1SignalsTransposers
  /v1/signals/ingest_url:
    get:
      summary: Retrieve the url for ingesting signals
      description: Retrieve the url for ingesting signals for your organization
      parameters:
        - in: query
          name: team_id
          description: Team ID to send signals to directly
          required: false
          schema:
            type: string
        - in: query
          name: escalation_policy_id
          description: Escalation policy ID to send signals to directly. `team_id` is
            required if this is provided.
          required: false
          schema:
            type: string
        - in: query
          name: on_call_schedule_id
          description: On-call schedule ID to send signals to directly. `team_id` is
            required if this is provided.
          required: false
          schema:
            type: string
        - in: query
          name: user_id
          description: User ID to send signals to directly
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Retrieve the url for ingesting signals for your organization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Signals_API_IngestKeyEntity"
      tags:
        - signals
      operationId: getV1SignalsIngestUrl
  /v1/signals/debugger:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1SignalsDebugger"
        required: true
      responses:
        "201":
          description: created Debugger
      tags:
        - signals
      operationId: postV1SignalsDebugger
  /v1/signals_on_call:
    get:
      summary: List all on-call schedules
      description: List all Signals on-call schedules for the entire organization.
      parameters:
        - in: query
          name: team_id
          description: An optional comma separated list of team IDs to filter currently
            on-call users by
          required: false
          schema:
            type: string
      responses:
        "200":
          description: List all Signals on-call schedules for the entire organization.
      tags:
        - signals_on_call
      operationId: getV1SignalsOnCall
  /v1/webhooks:
    post:
      summary: Create webhook
      description: Create a new webhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1Webhooks"
        required: true
      responses:
        "201":
          description: Create a new webhook
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhooks_Entities_WebhookEntity"
      tags:
        - webhooks
      operationId: postV1Webhooks
      x-speakeasy-entity-operation: Webhook#create
    get:
      summary: Lists webhooks
      description: Lists webhooks
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: per_page
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Lists webhooks
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhooks_Entities_WebhookEntity"
      tags:
        - webhooks
      operationId: getV1Webhooks
      x-speakeasy-entity-operation: Webhooks#read
  "/v1/webhooks/{webhook_id}/deliveries":
    get:
      parameters:
        - in: path
          name: webhook_id
          description: ID of a webhook
          required: true
          schema:
            type: string
      responses:
        "200":
          description: get Delivery(s)
      tags:
        - webhooks
      operationId: getV1WebhooksWebhookIdDeliveries
  "/v1/webhooks/{webhook_id}":
    delete:
      summary: Delete a specific webhook
      description: Delete a specific webhook
      parameters:
        - in: path
          name: webhook_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      responses:
        "204":
          description: Delete a specific webhook
      tags:
        - webhooks
      operationId: deleteV1WebhooksWebhookId
      x-speakeasy-entity-operation: Webhook#delete
    patch:
      summary: Update a specific webhook
      description: Update a specific webhook
      parameters:
        - in: path
          name: webhook_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchV1WebhooksWebhookId"
        required: true
      responses:
        "200":
          description: Update a specific webhook
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhooks_Entities_WebhookEntity"
      tags:
        - webhooks
      operationId: patchV1WebhooksWebhookId
      x-speakeasy-entity-operation: Webhook#update
    get:
      summary: Retrieve a specific webhook
      description: Retrieve a specific webhook
      parameters:
        - in: path
          name: webhook_id
          required: true
          schema:
            type: string
          x-speakeasy-match: id
      responses:
        "200":
          description: Retrieve a specific webhook
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhooks_Entities_WebhookEntity"
      tags:
        - webhooks
      operationId: getV1WebhooksWebhookId
      x-speakeasy-entity-operation: Webhook#read
  "/v1/ai/summarize_incident/{incident_id}/{generated_summary_id}/voted":
    get:
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
        - in: path
          name: generated_summary_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: get Voted(s)
      tags:
        - ai
      operationId: getV1AiSummarizeIncidentIncidentIdGeneratedSummaryIdVoted
  "/v1/ai/summarize_incident/{incident_id}/{generated_summary_id}/vote":
    put:
      parameters:
        - in: path
          name: incident_id
          required: true
          schema:
            type: string
        - in: path
          name: generated_summary_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                direction:
                  type: string
                  enum:
                    - up
                    - down
              required:
                - direction
        required: true
      responses:
        "200":
          description: updated Vote
      tags:
        - ai
      operationId: putV1AiSummarizeIncidentIncidentIdGeneratedSummaryIdVote
  /v1/ai/preferences:
    patch:
      summary: Update preferences
      description: Updates the AI preferences
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ai:
                  description: Whether to enable AI features
                  type: boolean
                summaries:
                  description: Whether to enable incident summaries
                  type: boolean
                description:
                  description: Whether to enable incident descriptions
                  type: boolean
                impact:
                  description: Whether to enable incident impact
                  type: boolean
                updates:
                  description: Whether to enable incident updates
                  type: boolean
                retros:
                  description: Whether to enable incident retrospectives
                  type: boolean
                followups:
                  description: Whether to enable incident followups
                  type: boolean
                similar_incidents:
                  description: Whether to enable similar incidents
                  type: boolean
      responses:
        "200":
          description: Updates the AI preferences
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AI_Entities_PreferencesEntity"
      tags:
        - ai
      operationId: patchV1AiPreferences
    get:
      summary: Preferences
      description: Retrieves the current AI preferences
      responses:
        "200":
          description: Retrieves the current AI preferences
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AI_Entities_PreferencesEntity"
      tags:
        - ai
      operationId: getV1AiPreferences
servers:
  - url: https://api.firehydrant.io
components:
  requestBodies:
    getV1MetricsTicketFunnel:
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              group_by:
                type: array
                items:
                  type: string
                  enum:
                    - started_day
                    - started_week
                    - started_month
                    - all_time
  securitySchemes:
    api_key:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    ErrorEntity:
      type: object
      properties:
        detail:
          type: string
        messages:
          type: array
          items:
            type: string
        meta:
          type: object
          description: An object with additional error metadata
        code:
          type: string
          description: A stable code on which to match errors
      description: ErrorEntity model
    PongEntity:
      type: object
      properties:
        response:
          type: string
        actor:
          $ref: "#/components/schemas/ActorEntity"
        organization:
          $ref: "#/components/schemas/OrganizationEntity"
      description: PongEntity model
    ActorEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        type:
          type: string
          enum:
            - firehydrant_user
            - firehydrant_bot
            - alertmanager
            - asana
            - aws
            - bugsnag
            - checkly
            - custom_alerts
            - datadog
            - shortcut
            - new_relic
            - nunc
            - github
            - giphy
            - google_meet
            - google_calendar
            - microsoft_teams
            - microsoft_teams_v2
            - webex
            - jira_cloud
            - jira_onprem
            - opsgenie
            - pager_duty
            - honeycomb
            - patchy
            - service_now
            - signals
            - slack
            - statuspage
            - victorops
            - zendesk
            - zoom
            - confluence_cloud
            - google_docs
            - zoom_v2
            - linear
            - cortex
    OrganizationEntity:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
    postV1Environments:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
        - name
      description: Creates an environment for the organization
    EnvironmentEntryEntity:
      type: object
      properties:
        id:
          type: string
          description: UUID of the Environment
        name:
          type: string
          description: Name of the Environment
        slug:
          type: string
          description: Slug of the Environment
        description:
          type: string
          description: Description of the Environment
        updated_at:
          type: string
          format: date-time
          description: The time the environment was updated
        created_at:
          type: string
          format: date-time
          description: The time the environment was created
        active_incidents:
          type: string
          description: List of active incident guids
        external_resources:
          type: array
          items:
            $ref: "#/components/schemas/ExternalResourceEntity"
          description: Information about known linkages to representations of services
            outside of FireHydrant.
      description: EnvironmentEntryEntity model
      x-speakeasy-entity: Environment
    ExternalResourceEntity:
      type: object
      properties:
        connection_type:
          type: string
        connection_name:
          type: string
        connection_id:
          type: string
        remote_id:
          type: string
        remote_url:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
    EnvironmentEntryEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/EnvironmentEntryEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: EnvironmentEntryEntityPaginated model
    PaginationEntity:
      type: object
      properties:
        count:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
        items:
          type: integer
          format: int32
        pages:
          type: integer
          format: int32
        last:
          type: integer
          format: int32
        prev:
          type: integer
          format: int32
          nullable: true
        next:
          type: integer
          format: int32
          nullable: true
    patchV1EnvironmentsEnvironmentId:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
        - name
      description: Update a environments attributes
    postV1Services:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        labels:
          type: object
          description: A hash of label keys and values
          additionalProperties:
            type: string
        service_tier:
          type: integer
          format: int32
          description: Integer representing service tier. Lower values represent higher
            criticality. If not specified the default value will be 5.
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
        functionalities:
          type: array
          description: An array of functionalities
          items:
            type: object
            properties:
              summary:
                type: string
                description: If you are trying to create a new functionality and attach it to
                  this service, set the summary key
              id:
                type: string
                description: If you are trying to reuse a functionality, you may set the ID to
                  attach it to the service
        links:
          type: array
          description: An array of links to associate with this service
          items:
            type: object
            properties:
              name:
                type: string
                description: Short name used to display and identify this link
              href_url:
                type: string
                description: URL
              icon_url:
                type: string
                description: An optional URL to an icon representing this link
            required:
              - name
              - href_url
        owner:
          type: object
          description: An object representing a Team that owns the service
          properties:
            id:
              type: string
          required:
            - id
        teams:
          type: array
          description: An array of teams to attach to this service.
          items:
            type: object
            properties:
              id:
                type: string
            required:
              - id
        alert_on_add:
          type: boolean
        auto_add_responding_team:
          type: boolean
        external_resources:
          type: array
          description: An array of external resources to attach to this service.
          items:
            type: object
            properties:
              remote_id:
                type: string
              connection_type:
                type: string
                description: "The integration slug for the external resource. Can be one of:
                  github, opsgenie, pager_duty, victorops. Not required if the
                  resource has already been imported."
            required:
              - remote_id
      required:
        - name
      description: Creates a service for the organization, you may also create or
        attach functionalities to the service on create.
    ServiceEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        slug:
          type: string
        service_tier:
          type: integer
          format: int32
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        allowed_params:
          type: array
          items:
            type: string
        labels:
          type: object
          description: An object of label key and values
          additionalProperties:
            type: string
        active_incidents:
          type: array
          items:
            type: string
          description: List of active incident guids
        alert_on_add:
          type: boolean
        auto_add_responding_team:
          type: boolean
        checklists:
          type: array
          items:
            $ref: "#/components/schemas/ChecklistTemplateEntity"
          description: List of checklists associated with a service
        completed_checks:
          type: integer
          format: int32
        external_resources:
          type: array
          items:
            $ref: "#/components/schemas/ExternalResourceEntity"
          description: Information about known linkages to representations of services
            outside of FireHydrant.
        functionalities:
          type: array
          items:
            $ref: "#/components/schemas/FunctionalityEntity"
          description: List of functionalities attached to the service
        last_import:
          $ref: "#/components/schemas/Imports_ImportableResourceEntity"
        links:
          type: array
          items:
            $ref: "#/components/schemas/LinksEntity"
          description: List of links attached to this service.
        managed_by:
          type: string
          description: If set, this field indicates that the service is managed by an
            integration and thus cannot be set manually
        managed_by_settings:
          type: object
          description: Indicates the settings of the catalog that manages this service
        owner:
          $ref: "#/components/schemas/TeamEntity"
        service_checklist_updated_at:
          type: string
          format: date-time
        teams:
          type: array
          items:
            $ref: "#/components/schemas/TeamEntity"
          description: List of teams attached to the service
        updated_by:
          $ref: "#/components/schemas/AuthorEntity"
      description: ServiceEntity model
      x-speakeasy-entity: Service
    ChecklistTemplateEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
          format: date-time
        checks:
          type: array
          items:
            $ref: "#/components/schemas/ChecklistCheckEntity"
        owner:
          $ref: "#/components/schemas/TeamEntity"
        connected_services:
          type: array
          items:
            $ref: "#/components/schemas/ServiceEntity"
          description: List of services that use this checklist
          x-speakeasy-terraform-ignore: true
      description: ChecklistTemplateEntity model
      x-speakeasy-entity: ChecklistTemplate
    ChecklistCheckEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        status:
          type: boolean
    TeamEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        slug:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        signals_ical_url:
          type: string
        created_by:
          $ref: "#/components/schemas/AuthorEntity"
        slack_channel:
          $ref: "#/components/schemas/Integrations_Slack_SlackChannelEntity"
        ms_teams_channel:
          $ref: "#/components/schemas/Integrations_MicrosoftTeamsV2_ChannelEntity"
        memberships:
          type: array
          items:
            $ref: "#/components/schemas/MembershipEntity"
        owned_checklist_templates:
          type: array
          items:
            $ref: "#/components/schemas/ChecklistTemplateEntity"
          x-speakeasy-ignore: true
        owned_functionalities:
          type: array
          items:
            $ref: "#/components/schemas/FunctionalityEntity"
        owned_services:
          type: array
          items:
            $ref: "#/components/schemas/ServiceEntity"
          x-speakeasy-terraform-ignore: true
        owned_runbooks:
          type: array
          items:
            $ref: "#/components/schemas/SlimRunbookEntity"
        responding_services:
          type: array
          items:
            $ref: "#/components/schemas/ServiceEntity"
          x-speakeasy-terraform-ignore: true
        services:
          type: array
          items:
            $ref: "#/components/schemas/ServiceEntity"
          x-speakeasy-terraform-ignore: true
        functionalities:
          type: array
          items:
            $ref: "#/components/schemas/FunctionalityEntity"
      description: TeamEntity model
      x-speakeasy-entity: Team
    AuthorEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        source:
          type: string
        email:
          type: string
    Integrations_Slack_SlackChannelEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        slack_channel_id:
          type: string
    Integrations_MicrosoftTeamsV2_ChannelEntity:
      type: object
      properties:
        id:
          type: string
        channel_id:
          type: string
        channel_name:
          type: string
        ms_team_id:
          type: string
        team_name:
          type: string
        channel_url:
          type: string
        status:
          type: string
        incident:
          $ref: "#/components/schemas/IncidentEntity"
    IncidentEntity:
      type: object
      properties:
        id:
          type: string
          description: UUID of the Incident
        name:
          type: string
          description: Name of the incident
        created_at:
          type: string
          format: date-time
          description: The time the incident was opened
        started_at:
          type: string
          format: date-time
          description: The time the incident started
        discarded_at:
          type: string
          format: date-time
          description: The time the incident was archived
        summary:
          type: string
        customer_impact_summary:
          type: string
        description:
          type: string
        current_milestone:
          type: string
          description: The type/slug of the current milestone. Will be one of the
            currently configured milestones for the given incident.
        number:
          type: integer
          format: int32
          description: Incident number
        priority:
          type: string
        severity:
          type: string
        severity_color:
          type: string
        severity_impact:
          type: string
        severity_condition:
          type: string
        tag_list:
          type: array
          items:
            type: string
        severity_impact_object:
          $ref: "#/components/schemas/SeverityMatrix_ImpactEntity"
        severity_condition_object:
          $ref: "#/components/schemas/SeverityMatrix_ConditionEntity"
        private_id:
          type: string
        organization_id:
          type: string
        milestones:
          type: array
          items:
            $ref: "#/components/schemas/Incidents_MilestoneEntity"
          description: "DEPRECATED: Please use lifecycle phases instead"
        lifecycle_phases:
          type: array
          items:
            $ref: "#/components/schemas/Incidents_LifecyclePhaseEntity"
        lifecycle_measurements:
          type: array
          items:
            $ref: "#/components/schemas/Incidents_LifecycleMeasurementEntity"
        active:
          type: boolean
        labels:
          type: object
          description: A key/value of labels
          additionalProperties:
            type: string
        role_assignments:
          type: array
          items:
            $ref: "#/components/schemas/Incidents_RoleAssignmentEntity"
        status_pages:
          type: array
          items:
            $ref: "#/components/schemas/Incidents_StatusPageEntity"
        incident_url:
          type: string
        private_status_page_url:
          type: string
        organization:
          $ref: "#/components/schemas/OrganizationEntity"
        customers_impacted:
          type: integer
          format: int32
        monetary_impact:
          type: integer
          format: int32
        monetary_impact_cents:
          type: integer
          format: int32
        last_update:
          type: string
        last_note:
          $ref: "#/components/schemas/Event_NoteEntity"
        report_id:
          type: string
        ai_incident_summary:
          type: string
        services:
          type: array
          items:
            $ref: "#/components/schemas/SuccinctEntity"
        environments:
          type: array
          items:
            $ref: "#/components/schemas/SuccinctEntity"
        functionalities:
          type: array
          items:
            $ref: "#/components/schemas/SuccinctEntity"
        channel_name:
          type: string
        channel_reference:
          type: string
        channel_id:
          type: string
        channel_status:
          type: string
          description: "inoperative: 0, operational: 1, archived: 2"
        incident_tickets:
          type: array
          items:
            $ref: "#/components/schemas/Ticketing_TicketEntity"
        ticket:
          $ref: "#/components/schemas/Ticketing_TicketEntity"
        impacts:
          type: array
          items:
            $ref: "#/components/schemas/Incidents_ImpactEntity"
        conference_bridges:
          type: array
          items:
            $ref: "#/components/schemas/Incidents_ConferenceBridgeEntity"
        incident_channels:
          type: array
          items:
            $ref: "#/components/schemas/Incidents_ChannelEntity"
        retro_exports:
          type: array
          items:
            type: object
          description: "A list of objects attached to this item. Can be one of:
            LinkEntity, CustomerSupportIssueEntity, or GenericAttachmentEntity"
          x-speakeasy-terraform-ignore: true
        created_by:
          $ref: "#/components/schemas/AuthorEntity"
        context_object:
          $ref: "#/components/schemas/Incidents_ContextObjectEntity"
        team_assignments:
          type: array
          items:
            $ref: "#/components/schemas/Incidents_TeamAssignmentEntity"
        conversations:
          type: array
          items:
            $ref: "#/components/schemas/Conversations_API_Entities_Reference"
        custom_fields:
          type: array
          items:
            $ref: "#/components/schemas/CustomFields_FieldValue"
        field_requirements:
          type: array
          items:
            $ref: "#/components/schemas/IncidentEntity_FieldRequirementEntity"
      description: IncidentEntity model
    SeverityMatrix_ImpactEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        affects_id:
          type: string
        position:
          type: integer
          format: int32
      description: SeverityMatrix_ImpactEntity model
    SeverityMatrix_ConditionEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        position:
          type: integer
          format: int32
          description: Position is used to determine ordering of conditions in API
            responses and dropdowns. The condition with the lowest position
            (typically 0) will be considered the Default Condition
      description: SeverityMatrix_ConditionEntity model
    Incidents_MilestoneEntity:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          description: The milestone's type. This will be one of the currently configured
            milestones for the given incident.
        duration:
          type: string
          description: How long the incident spent in this milestones, in ISO 8601
            Duration Format. This will be null if the milestone is the
            incident's current milestone.
        occurred_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Incidents_LifecyclePhaseEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        position:
          type: integer
          format: int32
        milestones:
          type: array
          items:
            $ref: "#/components/schemas/Incidents_LifecycleMilestoneEntity"
    Incidents_LifecycleMilestoneEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        slug:
          type: string
        position:
          type: integer
          format: int32
        occurred_at:
          type: string
          format: date-time
        duration:
          type: string
        updated_by:
          $ref: "#/components/schemas/AuthorEntity"
        updated_at:
          type: string
          format: date-time
    Incidents_LifecycleMeasurementEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        slug:
          type: string
        starts_at_milestone:
          type: string
        ends_at_milestone:
          type: string
        value:
          type: string
        calculated_at:
          type: string
          format: date-time
    Incidents_RoleAssignmentEntity:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
          enum:
            - active
            - inactive
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        incident_role:
          $ref: "#/components/schemas/IncidentRoleEntity"
        user:
          $ref: "#/components/schemas/UserEntity"
      description: Incidents_RoleAssignmentEntity model
    IncidentRoleEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        summary:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        discarded_at:
          type: string
          format: date-time
      description: IncidentRoleEntity model
      x-speakeasy-entity: Incident
    UserEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        slack_user_id:
          type: string
        slack_linked?:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        signals_enabled_notification_types:
          type: array
          items:
            type: string
      x-speakeasy-entity: User
    Incidents_StatusPageEntity:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
        external_id:
          type: string
        name:
          type: string
        display_name:
          type: string
        integration:
          $ref: "#/components/schemas/IntegrationEntity"
      description: Incidents_StatusPageEntity model
    IntegrationEntity:
      type: object
      properties:
        id:
          type: string
        integration_name:
          type: string
        integration_slug:
          type: string
        display_name:
          type: string
        created_at:
          type: string
          format: date-time
    Event_NoteEntity:
      type: object
      properties:
        id:
          type: string
        body:
          type: string
        created_at:
          type: string
          format: date-time
        status_pages:
          type: array
          items:
            $ref: "#/components/schemas/Incidents_StatusPageEntity"
        conversations:
          type: array
          items:
            $ref: "#/components/schemas/Conversations_API_Entities_Reference"
      description: Event_NoteEntity model
    Conversations_API_Entities_Reference:
      type: object
      properties:
        id:
          type: string
        resource_class:
          type: string
        resource_id:
          type: string
        field:
          type: string
        comments_url:
          type: string
        channel:
          $ref: "#/components/schemas/Conversations_API_Entities_Channel"
    Conversations_API_Entities_Channel:
      type: object
      properties:
        name:
          type: string
    SuccinctEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Ticketing_TicketEntity:
      type: object
      properties:
        id:
          type: string
        summary:
          type: string
        description:
          type: string
        state:
          type: string
          enum:
            - open
            - in_progress
            - cancelled
            - done
        type:
          type: string
          enum:
            - incident
            - task
            - follow_up
        assignees:
          type: array
          items:
            $ref: "#/components/schemas/AuthorEntity"
        priority:
          $ref: "#/components/schemas/Ticketing_PriorityEntity"
        created_by:
          $ref: "#/components/schemas/AuthorEntity"
        attachments:
          type: array
          items:
            type: object
          description: "A list of objects attached to this item. Can be one of:
            LinkEntity, CustomerSupportIssueEntity, or GenericAttachmentEntity"
          x-speakeasy-terraform-ignore: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        tag_list:
          type: array
          items:
            type: string
        incident_id:
          type: string
          description: ID of incident that this ticket is related to
        incident_name:
          type: string
          description: Name of incident that this ticket is related to
        incident_current_milestone:
          type: string
          description: Milestone of incident that this ticket is related to
        task_id:
          type: string
          description: ID of task that this ticket is related to
        due_at:
          type: string
          format: date-time
        link:
          $ref: "#/components/schemas/Attachments_LinkEntity"
      description: Ticketing_TicketEntity model
    Ticketing_PriorityEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        position:
          type: integer
          format: int32
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      description: Ticketing_PriorityEntity model
    Attachments_LinkEntity:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        display_text:
          type: string
        href_url:
          type: string
        icon_url:
          type: string
        editable:
          type: boolean
          description: Link can be edited
        deletable:
          type: boolean
          description: Link can be deleted
      description: Attachments_LinkEntity model
    Incidents_ImpactEntity:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - environment
            - functionality
            - service
        impact:
          $ref: "#/components/schemas/SuccinctEntity"
        condition:
          $ref: "#/components/schemas/SeverityMatrix_ConditionEntity"
        conversations:
          type: array
          items:
            $ref: "#/components/schemas/Conversations_API_Entities_Reference"
    Incidents_ConferenceBridgeEntity:
      type: object
      properties:
        id:
          type: string
        attachments:
          type: array
          items:
            type: object
          description: "A list of objects attached to this item. Can be one of:
            LinkEntity, CustomerSupportIssueEntity, or GenericAttachmentEntity"
          x-speakeasy-terraform-ignore: true
    Incidents_ChannelEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        source:
          type: string
        source_name:
          type: string
        source_id:
          type: string
        url:
          type: string
        icon_url:
          type: string
        status:
          type: string
      description: Incidents_ChannelEntity model
    Incidents_ContextObjectEntity:
      type: object
      properties:
        object_type:
          type: string
        object_id:
          type: string
        context_tag:
          type: string
        context_description:
          type: string
    Incidents_TeamAssignmentEntity:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        team:
          $ref: "#/components/schemas/TeamEntity"
    CustomFields_FieldValue:
      type: object
      properties:
        name:
          type: string
        value_type:
          type: string
        display_name:
          type: string
        description:
          type: string
        slug:
          type: string
        field_id:
          type: string
        value_array:
          type: string
        value_string:
          type: string
        value:
          type: string
    IncidentEntity_FieldRequirementEntity:
      type: object
      properties:
        field_id:
          type: string
          description: A unique identifier for the field.
        required_at_milestone_id:
          type: string
          description: The milestone at which this field is required. If null, this field
            is always required.
    MembershipEntity:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/UserEntity"
        schedule:
          $ref: "#/components/schemas/ScheduleEntity"
        default_incident_role:
          $ref: "#/components/schemas/IncidentRoleEntity"
    ScheduleEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        integration:
          type: string
        discarded:
          type: boolean
    FunctionalityEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        labels:
          type: object
          description: An object of label key and values
          additionalProperties:
            type: string
        active_incidents:
          type: array
          items:
            type: string
          description: List of active incident guids
        links:
          type: array
          items:
            $ref: "#/components/schemas/LinksEntity"
          description: List of links attached to this functionality.
        owner:
          $ref: "#/components/schemas/TeamEntity"
        alert_on_add:
          type: boolean
        auto_add_responding_team:
          type: boolean
        updated_by:
          $ref: "#/components/schemas/AuthorEntity"
        services:
          type: array
          items:
            $ref: "#/components/schemas/ServiceEntity"
          description: Services this functionality provides
          x-speakeasy-terraform-ignore: true
        external_resources:
          type: array
          items:
            $ref: "#/components/schemas/ExternalResourceEntity"
          description: Information about known linkages to representations of services
            outside of FireHydrant.
        teams:
          type: array
          items:
            $ref: "#/components/schemas/TeamEntity"
          description: List of teams attached to the functionality
          x-speakeasy-terraform-ignore: true
      description: FunctionalityEntity model
      x-speakeasy-entity: Functionality
    LinksEntity:
      type: object
      properties:
        id:
          type: string
        href_url:
          type: string
        icon_url:
          type: string
        name:
          type: string
    SlimRunbookEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        summary:
          type: string
        description:
          type: string
        type:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        attachment_rule:
          $ref: "#/components/schemas/Rules_RuleEntity"
        owner:
          $ref: "#/components/schemas/TeamEntity"
        categories:
          type: string
          description: categories the runbook applies to
    Rules_RuleEntity:
      type: object
      properties:
        logic:
          type: object
          description: An unstructured object of key/value pairs describing the logic for
            applying the rule.
        user_data:
          $ref: "#/components/schemas/FHTypes_GenericEntity"
    FHTypes_GenericEntity:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
        label:
          type: string
    Imports_ImportableResourceEntity:
      type: object
      properties:
        import_errors:
          type: array
          items:
            $ref: "#/components/schemas/Imports_ImportErrorEntity"
        imported_at:
          type: string
          format: date-time
        remote_id:
          type: string
        state:
          type: string
          enum:
            - selected
            - skipped
            - imported
            - errored
    Imports_ImportErrorEntity:
      type: object
      properties:
        id:
          type: string
        message:
          type: string
        created_at:
          type: string
          format: date-time
        data:
          type: object
          description: Additional error data
        resource:
          $ref: "#/components/schemas/Imports_ImportErrorEntity_ResourceEntity"
    Imports_ImportErrorEntity_ResourceEntity:
      type: object
      properties:
        resource_id:
          type: string
        resource_type:
          type: string
        name:
          type: string
    ServiceEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/ServiceEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: ServiceEntityPaginated model
    postV1ServicesServiceLinks:
      type: object
      properties:
        external_service_ids:
          type: string
          description: ID of the service
        connection_id:
          type: string
          description: ID for the integration. This can be found by going to the edit page
            for the integration
        integration:
          type: string
          description: The name of the service
          enum:
            - pager_duty
            - opsgenie
            - victorops
      required:
        - external_service_ids
        - connection_id
        - integration
      description: Creates a service with the appropriate integration for each
        external service ID passed
    ServiceLinkEntity:
      type: object
      properties:
        status_code:
          type: integer
          format: int32
        service:
          $ref: "#/components/schemas/ServiceEntity"
      description: ServiceLinkEntity model
    patchV1ServicesServiceId:
      type: object
      properties:
        alert_on_add:
          type: boolean
        auto_add_responding_team:
          type: boolean
        checklists:
          type: array
          description: Array of checklist IDs to attach to the service
          items:
            type: object
            properties:
              id:
                type: string
              remove:
                type: boolean
                description: Set to `true` to remove checklist from service
            required:
              - id
        description:
          type: string
        external_resources:
          type: array
          description: An array of external resources to attach to this service.
          items:
            type: object
            properties:
              remote_id:
                type: string
              connection_type:
                type: string
                description: "The integration slug for the external resource. Can be one of:
                  github, opsgenie, pager_duty, victorops. Not required if the
                  resource has already been imported."
              remove:
                type: boolean
                description: If you are trying to remove an external resource from a service,
                  set this to 'true'.
            required:
              - remote_id
        functionalities:
          type: array
          description: An array of functionalities
          items:
            type: object
            properties:
              id:
                type: string
                description: If you are trying to reuse a functionality, you may set the ID to
                  attach it to the service
              remove:
                type: boolean
                description: If you are trying to remove a functionality from a service, set
                  this to 'true'
              summary:
                type: string
                description: If you are trying to create a new functionality and attach it to
                  this service, set the summary key
        labels:
          type: object
          description: A hash of label keys and values
          additionalProperties:
            type: string
        links:
          type: array
          description: An array of links to associate with this service. This will remove
            all links not present in the patch. Only acts if 'links' key is
            included in the payload.
          items:
            type: object
            properties:
              href_url:
                type: string
                description: URL
              name:
                type: string
                description: Short name used to display and identify this link
              icon_url:
                type: string
                description: An optional URL to an icon representing this link
              remove:
                type: boolean
                description: If you are trying to remove a link, set this to 'true'
              id:
                type: string
                description: If updating an existing link, specify it's id.
            required:
              - href_url
              - name
        name:
          type: string
        owner:
          type: object
          description: An object representing a Team that owns the service
          properties:
            id:
              type: string
          required:
            - id
        remove_owner:
          type: boolean
          description: If you are trying to remove a team as an owner from a service, set
            this to 'true'
        remove_remaining_checklists:
          type: boolean
          description: If set to true, any checklists tagged on the service that are not
            included in the given array will be removed. Set this to true if you
            want to do a replacement operation for the checklists
        remove_remaining_external_resources:
          type: boolean
          description: If set to true, any external_resources tagged on the service that
            are not included in the given array will be removed. Set this to
            true if you want to do a replacement operation for the
            external_resources
        remove_remaining_functionalities:
          type: boolean
          description: If set to true, any functionalities tagged on the service that are
            not included in the given array will be removed. Set this to true if
            you want to do a replacement operation for the functionalities
        remove_remaining_teams:
          type: boolean
          description: If set to true, any teams tagged on the service that are not
            included in the given array will be removed. Set this to true if you
            want to do a replacement operation for the teams
        service_tier:
          type: integer
          format: int32
          description: Integer representing service tier
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
        teams:
          type: array
          description: An array of teams to attach to this service.
          items:
            type: object
            properties:
              id:
                type: string
              remove:
                type: boolean
                description: If you are trying to remove a team from a service, set this to
                  'true'
            required:
              - id
      description: >
        Update a services attributes, you may also add or remove functionalities
        from the service as well.

        Note: You may not remove or add individual label key/value pairs. You must include the entire object to override label values.
    ServiceWithAllDependenciesEntity:
      type: object
      properties:
        child_service_dependencies:
          type: array
          items:
            $ref: "#/components/schemas/ServiceChildDependencyEntity"
          description: Services that depend on this service
        parent_service_dependencies:
          type: array
          items:
            $ref: "#/components/schemas/ServiceParentDependencyEntity"
          description: Services that this service is dependent on
        service_dependencies:
          type: array
          items:
            type: object
          description: "All dependencies. Can be one of: ServiceChildDependencyEntity,
            ServiceParentDependencyEntity"
      description: ServiceWithAllDependenciesEntity model
    ServiceChildDependencyEntity:
      type: object
      properties:
        id:
          type: string
        notes:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        service:
          $ref: "#/components/schemas/ServiceEntity"
        type:
          type: string
    ServiceParentDependencyEntity:
      type: object
      properties:
        id:
          type: string
        notes:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        service:
          $ref: "#/components/schemas/ServiceEntity"
        type:
          type: string
    postV1ServicesServiceIdChecklistResponseChecklistId:
      type: object
      properties:
        check_id:
          type: string
        status:
          type: boolean
          description: Status of the check. 'true' if it's complete, 'false' if
            incomplete, or blank if not yet interacted with
      required:
        - check_id
        - status
      description: Creates a response for a checklist item
    postV1ServiceDependencies:
      type: object
      properties:
        service_id:
          type: string
        connected_service_id:
          type: string
        notes:
          type: string
          description: A note to describe the service dependency relationship
      required:
        - service_id
        - connected_service_id
      description: Creates a service dependency relationship between two services
    ServiceDependencyEntity:
      type: object
      properties:
        id:
          type: string
        notes:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        service:
          $ref: "#/components/schemas/ServiceEntity"
        connected_service:
          $ref: "#/components/schemas/ServiceEntity"
      description: ServiceDependencyEntity model
      x-speakeasy-entity: ServiceDependency
    patchV1ServiceDependenciesServiceDependencyId:
      type: object
      properties:
        notes:
          type: string
          description: A note to describe the service dependency relationship
      description: Update the notes of the service dependency
    postV1Functionalities:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        services:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: ID of a service
            required:
              - id
        labels:
          type: object
          description: A hash of label keys and values
          additionalProperties:
            type: string
        alert_on_add:
          type: boolean
        auto_add_responding_team:
          type: boolean
        external_resources:
          type: array
          description: An array of external resources to attach to this service.
          items:
            type: object
            properties:
              remote_id:
                type: string
              connection_type:
                type: string
                description: "The integration slug for the external resource. Can be one of:
                  github, opsgenie, pager_duty, statuspage, victorops. Not
                  required if the resource has already been imported."
            required:
              - remote_id
        links:
          type: array
          description: An array of links to associate with this service
          items:
            type: object
            properties:
              name:
                type: string
                description: Short name used to display and identify this link
              href_url:
                type: string
                description: URL
              icon_url:
                type: string
                description: An optional URL to an icon representing this link
            required:
              - name
              - href_url
        owner:
          type: object
          description: An object representing a Team that owns the service
          properties:
            id:
              type: string
          required:
            - id
        teams:
          type: array
          description: An array of teams to attach to this service.
          items:
            type: object
            properties:
              id:
                type: string
            required:
              - id
      required:
        - name
      description: Creates a functionality for the organization
    FunctionalityEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/FunctionalityEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: FunctionalityEntityPaginated model
    patchV1FunctionalitiesFunctionalityId:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        services:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: ID of a service
              remove:
                type: boolean
                description: Set to true if you want to remove the given service from the
                  functionality
            required:
              - id
        links:
          type: array
          description: An array of links to associate with this functionality. This will
            remove all links not present in the patch. Only acts if 'links' key
            is included in the payload.
          items:
            type: object
            properties:
              href_url:
                type: string
                description: URL
              name:
                type: string
                description: Short name used to display and identify this link
              icon_url:
                type: string
                description: An optional URL to an icon representing this link
              remove:
                type: boolean
                description: If you are trying to remove a link, set this to 'true'
              id:
                type: string
                description: If updating an existing link, specify it's id.
            required:
              - href_url
              - name
        owner:
          type: object
          description: An object representing a Team that owns the functionality
          properties:
            id:
              type: string
          required:
            - id
        remove_owner:
          type: boolean
          description: If you are trying to remove a team as an owner from a
            functionality, set this to 'true'
        teams:
          type: array
          description: An array of teams to attach to this functionality.
          items:
            type: object
            properties:
              id:
                type: string
              remove:
                type: boolean
                description: If you are trying to remove a team from a functionality, set this
                  to 'true'
            required:
              - id
        remove_remaining_teams:
          type: boolean
          description: If set to true, any teams tagged on the service that are not
            included in the given array will be removed. Set this to true if you
            want to do a replacement operation for the teams
        external_resources:
          type: array
          description: An array of external resources to attach to this service.
          items:
            type: object
            properties:
              remote_id:
                type: string
              connection_type:
                type: string
                description: "The integration slug for the external resource. Can be one of:
                  github, opsgenie, pager_duty, statuspage, victorops. Not
                  required if the resource has already been imported."
              remove:
                type: boolean
                description: If you are trying to remove an external resource from a service,
                  set this to 'true'.
            required:
              - remote_id
        remove_remaining_external_resources:
          type: boolean
          description: If set to true, any external_resources tagged on the service that
            are not included in the given array will be removed. Set this to
            true if you want to do a replacement operation for the
            external_resources
        labels:
          type: object
          description: A hash of label keys and values
          additionalProperties:
            type: string
        alert_on_add:
          type: boolean
        auto_add_responding_team:
          type: boolean
        remove_remaining_services:
          type: boolean
          description: Set this to true if you want to remove all of the services that are
            not included in the services array from the functionality
          default: false
      description: Update a functionalities attributes
    postV1Teams:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        slug:
          type: string
        slack_channel_id:
          type: string
          description: The Slack channel ID that this team is associated with
        ms_teams_channel:
          type: object
          description: MS Teams channel identity for channel associated with this team
          properties:
            channel_id:
              type: string
            ms_team_id:
              type: string
          required:
            - channel_id
            - ms_team_id
        memberships:
          type: array
          items:
            type: object
            properties:
              user_id:
                type: string
              schedule_id:
                type: string
              incident_role_id:
                type: string
                description: An incident role ID that this user will automatically assigned if
                  this team is assigned to an incident
      required:
        - name
      description: Create a new team
    TeamEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/TeamEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: TeamEntityPaginated model
    patchV1TeamsTeamId:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        slug:
          type: string
        slack_channel_id:
          type: string
          description: The Slack channel ID that this team is associated with
        ms_teams_channel:
          type: object
          description: MS Teams channel identity for channel associated with this team
          properties:
            channel_id:
              type: string
            ms_team_id:
              type: string
          required:
            - channel_id
            - ms_team_id
        memberships:
          type: array
          items:
            type: object
            properties:
              user_id:
                type: string
              schedule_id:
                type: string
              incident_role_id:
                type: string
                description: An incident role ID that this user will automatically assigned if
                  this team is assigned to an incident
      description: Update a single team from its ID
    postV1TeamsTeamIdEscalationPolicies:
      type: object
      properties:
        name:
          type: string
          description: The escalation policy's name.
        description:
          type: string
          description: A detailed description of the escalation policy.
        repetitions:
          type: integer
          format: int32
          description: The number of times that the escalation policy should repeat before
            an alert is dropped.
          default: 0
        default:
          type: boolean
          description: Whether this escalation policy should be the default for the team.
          default: false
        steps:
          type: array
          description: A list of steps that define how an alert should escalate through
            the policy.
          items:
            type: object
            properties:
              targets:
                type: array
                description: A list of targets that the step will notify. You can specify up to
                  15 targets per step.
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      description: The type of target that the step will notify.
                      enum:
                        - OnCallSchedule
                        - User
                        - SlackChannel
                        - EntireTeam
                        - Webhook
                    id:
                      type: string
                      description: The ID of the target that the step will notify.
                  required:
                    - type
                    - id
              timeout:
                type: string
                description: An ISO8601 duration string specifying how long to wait before
                  moving on to the next step. For the last step, this value
                  specifies how long to wait before the escalation policy should
                  repeat, if it repeats.
            required:
              - targets
              - timeout
        handoff_step:
          type: object
          description: A step that defines where an alert should be sent when the policy
            is exhausted and the alert is still unacknowledged.
          properties:
            target_type:
              type: string
              description: The type of target to which the policy will hand off.
              enum:
                - EscalationPolicy
                - Team
            target_id:
              type: string
              description: The ID of the target to which the policy will hand off.
          required:
            - target_type
            - target_id
      required:
        - name
        - steps
      description: Create a Signals escalation policy for a team.
    patchV1TeamsTeamIdEscalationPoliciesId:
      type: object
      properties:
        name:
          type: string
          description: The escalation policy's name.
        description:
          type: string
          description: A detailed description of the escalation policy.
        repetitions:
          type: integer
          format: int32
          description: The number of times that the escalation policy should repeat before
            an alert is dropped.
          default: 0
        default:
          type: boolean
          description: Whether this escalation policy should be the default for the team.
          default: false
        steps:
          type: array
          description: A list of steps that define how an alert should escalate through
            the policy.
          items:
            type: object
            properties:
              targets:
                type: array
                description: A list of targets that the step will notify. You can specify up to
                  15 targets per step.
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      description: The type of target that the step will notify.
                      enum:
                        - OnCallSchedule
                        - User
                        - SlackChannel
                        - EntireTeam
                        - Webhook
                    id:
                      type: string
                      description: The ID of the target that the step will notify.
                  required:
                    - type
                    - id
              timeout:
                type: string
                description: An ISO8601 duration string specifying how long to wait before
                  moving on to the next step. For the last step, this value
                  specifies how long to wait before the escalation policy should
                  repeat, if it repeats.
            required:
              - timeout
        handoff_step:
          type: object
          description: A step that defines where an alert should be sent when the policy
            is exhausted and the alert is still unacknowledged.
          properties:
            target_type:
              type: string
              description: The type of target to which the policy will hand off.
              enum:
                - EscalationPolicy
                - Team
            target_id:
              type: string
              description: The ID of the target to which the policy will hand off.
          required:
            - target_type
            - target_id
      description: Update a Signals escalation policy by ID
    postV1TeamsTeamIdOnCallSchedules:
      type: object
      properties:
        name:
          type: string
          description: The on-call schedule's name.
        description:
          type: string
          description: A detailed description of the on-call schedule.
        time_zone:
          type: string
          description: The time zone in which the on-call schedule operates. This value
            must be a valid IANA time zone name.
        slack_user_group_id:
          type: string
          description: The ID of a Slack user group for syncing purposes. If provided, we
            will automatically sync whoever is on call to the user group in
            Slack.
        members:
          type: array
          description: An ordered list of objects that specify members of the on-call
            schedule's rotation.
          items:
            type: object
            properties:
              user_id:
                type: string
                description: >
                  The ID of a user who should be added to the schedule's
                  rotation. You can add a user to the schedule

                  multiple times to construct more complex rotations, and you can specify a `null` user ID to create

                  unassigned slots in the rotation.
        strategy:
          type: object
          description: An object that specifies how the schedule's on-call shifts should
            be generated.
          properties:
            type:
              type: string
              description: The type of strategy. Must be one of "daily", "weekly", or
                "custom".
              enum:
                - daily
                - weekly
                - custom
            handoff_time:
              type: string
              description: An ISO8601 time string specifying when on-call shifts should hand
                off. This value is only used if the strategy type is "daily" or
                "weekly".
            handoff_day:
              type: string
              description: The day of the week on which on-call shifts should hand off, as its
                long-form name (e.g. "monday", "tuesday", etc). This value is
                only used if the strategy type is "weekly".
              enum:
                - monday
                - tuesday
                - wednesday
                - thursday
                - friday
                - saturday
                - sunday
            shift_duration:
              type: string
              description: An ISO8601 duration string specifying how long each shift should
                last. This value is only used if the strategy type is "custom".
          required:
            - type
        restrictions:
          type: array
          description: A list of objects that restrict the schedule to speccific on-call
            periods.
          items:
            type: object
            properties:
              start_day:
                type: string
                description: The day of the week on which the restriction should start, as its
                  long-form name (e.g. "monday", "tuesday", etc).
                enum:
                  - monday
                  - tuesday
                  - wednesday
                  - thursday
                  - friday
                  - saturday
                  - sunday
              start_time:
                type: string
                description: An ISO8601 time string specifying when the restriction should
                  start.
              end_day:
                type: string
                description: The day of the week on which the restriction should end, as its
                  long-form name (e.g. "monday", "tuesday", etc).
                enum:
                  - monday
                  - tuesday
                  - wednesday
                  - thursday
                  - friday
                  - saturday
                  - sunday
              end_time:
                type: string
                description: An ISO8601 time string specifying when the restriction should end.
            required:
              - start_day
              - start_time
              - end_day
              - end_time
        start_time:
          type: string
          description: An ISO8601 time string specifying when the schedule's first shift
            should start. This value is only used if the schedule's strategy is
            "custom".
        color:
          type: string
          description: A hex color code that will be used to represent the schedule in the
            UI and iCal subscriptions.
        member_ids:
          type: array
          description: This parameter is deprecated; use `members` instead.
          items:
            type: string
      required:
        - name
        - time_zone
        - strategy
      description: Create a Signals on-call schedule for a team.
    patchV1TeamsTeamIdOnCallSchedulesScheduleId:
      type: object
      properties:
        name:
          type: string
          description: The on-call schedule's name.
        description:
          type: string
          description: A detailed description of the on-call schedule.
        time_zone:
          type: string
          description: The time zone in which the on-call schedule operates. This value
            must be a valid IANA time zone name.
        slack_user_group_id:
          type: string
          description: The ID of a Slack user group for syncing purposes. If provided, we
            will automatically sync whoever is on call to the user group in
            Slack.
        members:
          type: array
          description: An ordered list of objects that specify members of the on-call
            schedule's rotation.
          items:
            type: object
            properties:
              user_id:
                type: string
                description: >
                  The ID of a user who should be added to the schedule's
                  rotation. You can add a user to the schedule

                  multiple times to construct more complex rotations, and you can specify a `null` user ID to create

                  unassigned slots in the rotation.
        strategy:
          type: object
          description: An object that specifies how the schedule's on-call shifts should
            be generated.
          properties:
            type:
              type: string
              description: The type of strategy. Must be one of "daily", "weekly", or
                "custom".
              enum:
                - daily
                - weekly
                - custom
            handoff_time:
              type: string
              description: An ISO8601 time string specifying when on-call shifts should hand
                off. This value is only used if the strategy type is "daily" or
                "weekly".
            handoff_day:
              type: string
              description: The day of the week on which on-call shifts should hand off, as its
                long-form name (e.g. "monday", "tuesday", etc). This value is
                only used if the strategy type is "weekly".
              enum:
                - monday
                - tuesday
                - wednesday
                - thursday
                - friday
                - saturday
                - sunday
            shift_duration:
              type: string
              description: An ISO8601 duration string specifying how long each shift should
                last. This value is only used if the strategy type is "custom".
          required:
            - type
        restrictions:
          type: array
          description: A list of objects that restrict the schedule to speccific on-call
            periods.
          items:
            type: object
            properties:
              start_day:
                type: string
                description: The day of the week on which the restriction should start, as its
                  long-form name (e.g. "monday", "tuesday", etc).
                enum:
                  - monday
                  - tuesday
                  - wednesday
                  - thursday
                  - friday
                  - saturday
                  - sunday
              start_time:
                type: string
                description: An ISO8601 time string specifying when the restriction should
                  start.
              end_day:
                type: string
                description: The day of the week on which the restriction should end, as its
                  long-form name (e.g. "monday", "tuesday", etc).
                enum:
                  - monday
                  - tuesday
                  - wednesday
                  - thursday
                  - friday
                  - saturday
                  - sunday
              end_time:
                type: string
                description: An ISO8601 time string specifying when the restriction should end.
            required:
              - start_day
              - start_time
              - end_day
              - end_time
        effective_at:
          type: string
          description: >
            An ISO8601 time string specifying when the updated schedule should
            take effect. This

            value must be provided if editing an attribute that would affect how the schedule's

            shifts are generated, such as the time zone, members, strategy, or restrictions.
        color:
          type: string
          description: A hex color code that will be used to represent the schedule in the
            UI and iCal subscriptions.
        member_ids:
          type: array
          description: This parameter is deprecated; use `members` instead.
          items:
            type: string
      description: Update a Signals on-call schedule by ID
    postV1TeamsTeamIdOnCallSchedulesScheduleIdShifts:
      type: object
      properties:
        start_time:
          type: string
          description: The start time of the shift in ISO8601 format.
        end_time:
          type: string
          description: The end time of the shift in ISO8601 format.
        user_id:
          type: string
          description: The ID of the user who is on-call for the shift. If not provided,
            the shift will be unassigned.
      required:
        - start_time
        - end_time
      description: Create a Signals on-call shift in a schedule.
    patchV1TeamsTeamIdOnCallSchedulesScheduleIdShiftsId:
      type: object
      properties:
        start_time:
          type: string
          description: The start time of the shift in ISO8601 format.
        end_time:
          type: string
          description: The end time of the shift in ISO8601 format.
        user_id:
          type: string
          description: The ID of the user who is on-call for the shift. If not provided,
            the shift will be unassigned.
        coverage_request:
          type: string
          description: A description of why coverage is needed for this shift. If the
            shift is re-assigned, this will automatically be cleared unless
            provided again.
      description: Update a Signals on-call shift by ID
    postV1TeamsTeamIdSignalRules:
      type: object
      properties:
        name:
          type: string
          description: The rule's name.
        expression:
          type: string
          description: The CEL expression that defines the rule.
        target_type:
          type: string
          description: The type of target that the rule will notify when matched.
          enum:
            - EscalationPolicy
            - OnCallSchedule
            - User
            - Webhook
        target_id:
          type: string
          description: The ID of the target that the rule will notify when matched.
        incident_type_id:
          type: string
          description: The ID of an incident type that should be used when an alert is
            promoted to an incident
        notification_priority_override:
          type: string
          description: "A notification priority that will be set on the resulting alert
            (default: HIGH)"
          enum:
            - HIGH
            - MEDIUM
            - LOW
            - ""
      required:
        - name
        - expression
        - target_type
        - target_id
      description: Create a Signals rule for a team.
    patchV1TeamsTeamIdSignalRulesId:
      type: object
      properties:
        name:
          type: string
          description: The rule's name.
        expression:
          type: string
          description: The CEL expression that defines the rule.
        target_type:
          type: string
          description: The type of target that the rule will notify when matched.
          enum:
            - EscalationPolicy
            - OnCallSchedule
            - User
            - Webhook
        target_id:
          type: string
          description: The ID of the target that the rule will notify when matched.
        incident_type_id:
          type: string
          description: The ID of an incident type that should be used when an alert is
            promoted to an incident
        notification_priority_override:
          type: string
          description: "A notification priority that will be set on the resulting alert
            (default: HIGH)"
          enum:
            - HIGH
            - MEDIUM
            - LOW
            - ""
      description: Update a Signals rule by ID
    postV1Changes:
      type: object
      properties:
        summary:
          type: string
        description:
          type: string
        labels:
          type: object
          description: A labels hash of keys and values
          additionalProperties:
            type: string
      description: Create a new change entry
    ChangeEntity:
      type: object
      properties:
        id:
          type: string
          description: UUID of the Change
        summary:
          type: string
          description: Description of the Change
        created_at:
          type: string
          format: date-time
          description: The time the change entry was created
        updated_at:
          type: string
          format: date-time
        labels:
          type: object
          description: Arbitrary key/value pairs of labels.
          additionalProperties:
            type: string
        description:
          type: string
          description: Description of the Change
      description: ChangeEntity model
    patchV1ChangesChangeId:
      type: object
      properties:
        summary:
          type: string
        description:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
      description: Update a change entry
    postV1ChangesChangeIdIdentities:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
      required:
        - type
        - value
      description: Create an identity for this change
    ChangeIdentityEntity:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        value:
          type: string
        change_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      description: ChangeIdentityEntity model
    ChangeIdentityEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/ChangeIdentityEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: ChangeIdentityEntityPaginated model
    patchV1ChangesChangeIdIdentitiesIdentityId:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
      required:
        - type
        - value
      description: Update an identity
    postV1ChangesEvents:
      type: object
      properties:
        summary:
          type: string
        description:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
        environments:
          type: array
          description: An array of environment IDs
          items:
            type: string
        services:
          type: array
          description: An array of service IDs
          items:
            type: string
        changes:
          type: array
          description: An array of change IDs
          items:
            type: string
        external_id:
          type: string
          description: The ID of a change event as assigned by an external provider
        change_identities:
          type: array
          description: If provided and valid, the event will be linked to all changes that
            have the same identities. Identity *values* must be unique.
          items:
            type: object
            properties:
              type:
                type: string
              value:
                type: string
            required:
              - type
              - value
        attachments:
          type: array
          description: JSON objects representing attachments, see attachments
            documentation for the schema
          items:
            type: object
            properties:
              type:
                type: string
                enum:
                  - link
                additionalProperties:
                  type: string
            required:
              - type
        authors:
          type: array
          description: Array of additional authors to add to the change event, the
            creating actor will automatically be added as an author
          items:
            type: object
            properties:
              source:
                type: string
              source_id:
                type: string
              name:
                type: string
            required:
              - source
              - source_id
              - name
      required:
        - summary
      description: Create a change event
    ChangeEventEntity:
      type: object
      properties:
        id:
          type: string
        summary:
          type: string
        description:
          type: string
        external_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
          nullable: true
        duration_ms:
          type: integer
          format: int32
          nullable: true
        duration_iso8601:
          type: string
          nullable: true
        environments:
          type: array
          items:
            $ref: "#/components/schemas/EnvironmentEntryEntity"
        related_changes:
          type: array
          items:
            $ref: "#/components/schemas/ChangeEntity"
        identities:
          type: array
          items:
            $ref: "#/components/schemas/ChangeIdentityEntity"
        authors:
          type: array
          items:
            $ref: "#/components/schemas/AuthorEntity"
        attachments:
          type: array
          items:
            type: object
          description: "A list of objects attached to this item. Can be one of:
            LinkEntity, CustomerSupportIssueEntity, or GenericAttachmentEntity"
        labels:
          type: object
          description: An object of label key and values
          additionalProperties:
            type: string
        services:
          type: array
          items:
            $ref: "#/components/schemas/ServiceEntity"
      description: ChangeEventEntity model
    ChangeEventSlimEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/ChangeEventSlimEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: ChangeEventSlimEntityPaginated model
    ChangeEventSlimEntity:
      type: object
      properties:
        id:
          type: string
        summary:
          type: string
        description:
          type: string
        external_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
          nullable: true
        duration_ms:
          type: integer
          format: int32
          nullable: true
        duration_iso8601:
          type: string
          nullable: true
        environments:
          type: array
          items:
            $ref: "#/components/schemas/EnvironmentEntryEntity"
        authors:
          type: array
          items:
            $ref: "#/components/schemas/AuthorEntity"
        labels:
          type: object
          description: An object of label key and values
          additionalProperties:
            type: string
        services:
          type: array
          items:
            $ref: "#/components/schemas/ServiceEntity"
    patchV1ChangesEventsChangeEventId:
      type: object
      properties:
        summary:
          type: string
        description:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
        environments:
          type: array
          description: An array of environment IDs (setting this will overwrite the
            current environments)
          items:
            type: string
        services:
          type: array
          description: An array of service IDs (setting this will overwrite the current
            services)
          items:
            type: string
        attachments:
          type: array
          description: JSON objects representing attachments, see attachments
            documentation for the schema
          items:
            type: object
            properties:
              type:
                type: string
                enum:
                  - link
                additionalProperties:
                  type: string
            required:
              - type
      description: Update a change event
    ChangeTypeEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/ChangeTypeEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: ChangeTypeEntityPaginated model
    ChangeTypeEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    EntitlementEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/EntitlementEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: EntitlementEntityPaginated model
    EntitlementEntity:
      type: object
      properties:
        current_count:
          type: integer
          format: int32
        errors:
          type: array
          items:
            type: string
        exists:
          type: boolean
        available:
          type: boolean
        maximum:
          type: integer
          format: int32
        name:
          type: string
        slug:
          type: string
        tier:
          type: string
          enum:
            - free
            - essentials
            - enterprise
            - signals_only
    postV1Incidents:
      type: object
      properties:
        name:
          type: string
        summary:
          type: string
        customer_impact_summary:
          type: string
        description:
          type: string
        priority:
          type: string
        severity:
          type: string
        severity_condition_id:
          type: string
        severity_impact_id:
          type: string
        alert_ids:
          type: array
          description: List of alert IDs that this incident should be associated to
          items:
            type: string
        labels:
          type: object
          description: Key:value pairs to track custom data for the incident
          additionalProperties:
            type: string
        runbook_ids:
          type: array
          description: List of ids of Runbooks to attach to this incident. Foregoes any
            conditions these Runbooks may have guarding automatic attachment.
          items:
            type: string
        tag_list:
          type: array
          description: List of tags for the incident
          items:
            type: string
        impacts:
          type: array
          description: An array of impacted infrastructure
          items:
            type: object
            properties:
              type:
                type: string
                description: "The type of impacted infrastructure. One of: environment,
                  functionality, or service"
              id:
                type: string
                description: The ID of the impacted infrastructure
              condition_id:
                type: string
                description: The ID of the impact condition. Find these at
                  /v1/severity_matrix/conditions
            required:
              - type
              - id
              - condition_id
        milestones:
          type: array
          description: An array of milestones to set on an incident. This can be used to
            create an already-resolved incident.
          items:
            type: object
            properties:
              type:
                type: string
                description: The type/slug of the milestone. Must be one of the currently
                  configured milestones.
              occurred_at:
                type: string
                format: date-time
                description: An ISO8601 formatted string for when this milestone occurred. If
                  you are removing a milestone, this field still needs to be set
                  to some value
            required:
              - type
              - occurred_at
        restricted:
          type: boolean
        team_ids:
          type: array
          description: IDs of teams you wish to assign to this incident.
          items:
            type: string
        custom_fields:
          type: array
          description: An array of custom fields to set on the incident.
          items:
            type: object
            properties:
              field_id:
                type: string
                description: The ID of the custom field you wish to set.
              value_string:
                type: string
                description: The value you wish to set on the custom field if the type of the
                  field accepts string values
              value_array:
                type: array
                description: The value you wish to set on the custom field if the type of the
                  field accepts array values
                items:
                  type: string
            required:
              - field_id
        external_links:
          type: string
        skip_incident_type_values:
          type: boolean
          description: If true, the incident type values will not be copied to the
            incident. This is useful when creating an incident from an incident
            type, but you want to set the values manually.
          default: false
      required:
        - name
      description: Create a new incident
    IncidentEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/IncidentEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: IncidentEntityPaginated model
    patchV1IncidentsIncidentId:
      type: object
      properties:
        name:
          type: string
        summary:
          type: string
        customer_impact_summary:
          type: string
        description:
          type: string
        labels:
          type: object
          description: Key:value pairs to track custom data for the incident
          additionalProperties:
            type: string
        priority:
          type: string
        severity:
          type: string
        severity_condition_id:
          type: string
        severity_impact_id:
          type: string
        tag_list:
          type: array
          description: List of tags for the incident
          items:
            type: string
      description: Updates an incident with provided parameters
    Incidents_AlertEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Incidents_AlertEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: Incidents_AlertEntityPaginated model
    Incidents_AlertEntity:
      type: object
      properties:
        id:
          type: string
        alert:
          $ref: "#/components/schemas/Alerts_AlertEntity"
        primary:
          type: boolean
          description: whether or not this is the primary alert for this incident
      description: Incidents_AlertEntity model
    Alerts_AlertEntity:
      type: object
      properties:
        id:
          type: string
        summary:
          type: string
        description:
          type: string
        priority:
          type: string
        integration_name:
          type: string
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
          nullable: true
        duration_ms:
          type: integer
          format: int32
          nullable: true
        duration_iso8601:
          type: string
          nullable: true
        status:
          type: string
        remote_id:
          type: string
        remote_url:
          type: string
        labels:
          type: object
          description: Arbitrary key:value pairs of labels.
          additionalProperties:
            type: string
        environments:
          type: array
          items:
            $ref: "#/components/schemas/SuccinctEntity"
        services:
          type: array
          items:
            $ref: "#/components/schemas/SuccinctEntity"
        tags:
          type: array
          items:
            type: string
        source_icon:
          type: string
        signal_id:
          type: string
        signal_rule:
          $ref: "#/components/schemas/Signals_API_RuleEntity"
        team_name:
          type: string
        team_id:
          type: string
        position:
          type: integer
          format: int32
        incidents:
          type: array
          items:
            $ref: "#/components/schemas/PublicAPI_V1_Incidents_SuccinctEntity"
        events:
          type: array
          items:
            $ref: "#/components/schemas/Alerts_SirenEventEntity"
        is_expired:
          type: boolean
      description: Alerts_AlertEntity model
    Signals_API_RuleEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        expression:
          type: string
        team_id:
          type: string
        target:
          $ref: "#/components/schemas/Signals_API_TargetEntity"
        created_by:
          $ref: "#/components/schemas/AuthorEntity"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        incident_type:
          $ref: "#/components/schemas/SuccinctEntity"
        notification_priority_override:
          type: string
          enum:
            - HIGH
            - MEDIUM
            - LOW
    Signals_API_TargetEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        is_pageable:
          type: boolean
    PublicAPI_V1_Incidents_SuccinctEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        number:
          type: string
    Alerts_SirenEventEntity:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        data:
          type: object
          description: The event's payload
        created_at:
          type: string
          format: date-time
    patchV1IncidentsIncidentIdAlertsIncidentAlertIdPrimary:
      type: object
      properties:
        primary:
          type: boolean
      required:
        - primary
      description: Setting an alert as primary will overwrite milestone times in the
        FireHydrant incident with times included in the primary alert. Services
        attached to the primary alert will also be automatically added to the
        incident.
    putV1IncidentsIncidentIdMilestonesBulkUpdate:
      type: object
      properties:
        bulk:
          type: string
          enum:
            - "true"
        milestones:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                description: The type/slug of the milestone. Must be one of the currently
                  configured milestones for the given incident.
              occurred_at:
                type: string
                format: date-time
                description: An ISO8601 formatted string for when this milestone occurred. If
                  you are removing a milestone, this field still needs to be set
                  to some value
              remove:
                type: boolean
                description: If set to true, the milestone will be removed from the incident
            required:
              - type
              - occurred_at
      required:
        - milestones
      description: |
        Update milestone times in bulk for a given incident. All milestone
        times for an incident must occur in chronological order
        corresponding to the configured order of milestones. If the result
        of this request would cause any milestone(s) to appear out of place,
        a 422 response will instead be returned. This includes milestones
        not explicitly submitted or updated in this request.
    Incidents_MilestoneEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Incidents_MilestoneEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: Incidents_MilestoneEntityPaginated model
    postV1IncidentsIncidentIdRelatedChangeEvents:
      type: object
      properties:
        change_event_id:
          type: string
          description: The ID of the change event to associate
        type:
          type: string
          enum:
            - caused
            - fixed
            - suspect
            - dismissed
        why:
          type: string
          description: A short description about why this change event is related
      required:
        - change_event_id
        - type
      description: Add a related change to an incident. Changes added to an incident
        can be causes, fixes, or suspects. To remove a change from an incident,
        the type field should be set to dismissed.
    Incidents_RelatedChangeEventEntity:
      type: object
      properties:
        id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        why:
          type: string
          description: The reason why this change event is related to this incident
        type:
          type: string
          enum:
            - caused
            - fixed
            - suspect
            - dismissed
        change_event:
          $ref: "#/components/schemas/ChangeEventEntity"
        incident_id:
          type: string
        created_by:
          $ref: "#/components/schemas/AuthorEntity"
      description: Incidents_RelatedChangeEventEntity model
    Incidents_RelatedChangeEventEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Incidents_RelatedChangeEventEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: Incidents_RelatedChangeEventEntityPaginated model
    patchV1IncidentsIncidentIdRelatedChangeEventsRelatedChangeEventId:
      type: object
      properties:
        type:
          type: string
          enum:
            - caused
            - fixed
            - suspect
            - dismissed
        why:
          type: string
          description: A short description about why this change event is related
      description: Update a change attached to an incident
    postV1IncidentsIncidentIdStatusPages:
      type: object
      properties:
        integration_slug:
          type: string
        integration_id:
          type: string
        title:
          type: string
      required:
        - integration_slug
        - integration_id
      description: Add a status page to an incident.
    Incidents_StatusPageEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Incidents_StatusPageEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: Incidents_StatusPageEntityPaginated model
    postV1IncidentsIncidentIdTaskLists:
      type: object
      properties:
        task_list_id:
          type: string
          description: The id of the task list.
        assignee_id:
          type: string
          description: The ID of the user assigned to the tasks in this list.
      required:
        - task_list_id
      description: Add all tasks from list to incident
    TaskEntity:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        state:
          type: string
        assignee:
          $ref: "#/components/schemas/AuthorEntity"
        created_by:
          $ref: "#/components/schemas/AuthorEntity"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        due_at:
          type: string
          format: date-time
      description: TaskEntity model
    postV1IncidentsIncidentIdTasks:
      type: object
      properties:
        title:
          type: string
          description: The title of the task.
        state:
          type: string
          description: "The state of the task. One of: open, in_progress, cancelled, done"
        description:
          type: string
          description: A description of what the task is for.
        assignee_id:
          type: string
          description: The ID of the user assigned to the task.
        due_at:
          type: string
          description: The due date of the task. Relative values are supported such as '5m'
      required:
        - title
      description: Create a task
    TaskEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/TaskEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: TaskEntityPaginated model
    patchV1IncidentsIncidentIdTasksTaskId:
      type: object
      properties:
        title:
          type: string
          description: The title of the task.
        description:
          type: string
          description: A description of what the task is for.
        state:
          type: string
          description: "The state of the task. One of: open, in_progress, cancelled, done"
        assignee_id:
          type: string
          description: The ID of the user assigned to the task.
        due_at:
          type: string
          description: The due date of the task. Relative values are supported such as '5m'
      description: Update a task's attributes
    postV1IncidentsIncidentIdTasksTaskIdConvert:
      type: object
      properties:
        summary:
          type: string
        project_id:
          type: string
        description:
          type: string
        state:
          type: string
        tag_list:
          type: array
          description: List of tags for the ticket
          items:
            type: string
      description: Convert a task to a follow-up
    Attachments_LinkEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Attachments_LinkEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: Attachments_LinkEntityPaginated model
    postV1IncidentsIncidentIdLinks:
      type: object
      properties:
        display_text:
          type: string
        icon_url:
          type: string
        href:
          type: string
      required:
        - href
      description: Allows adding adhoc links to an incident as an attachment
    putV1IncidentsIncidentIdLinksLinkId:
      type: object
      properties:
        display_text:
          type: string
        icon_url:
          type: string
        href_url:
          type: string
      description: Updates the external incident link attributes
    PublicAPI_V1_Incidents_TranscriptEntity:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the transcript entry
        speaker:
          type: string
          description: The speaker for the transcript entry
        start:
          type: integer
          format: int32
          description: The start time for the transcript entry
        until:
          type: integer
          format: int32
          description: The end time for the transcript entry
        words:
          type: string
          description: The words spoken for the transcript entry
        created_at:
          type: string
          format: date-time
          description: The time the transcript entry was created
        updated_at:
          type: string
          format: date-time
          description: The time the transcript entry was last updated
      description: PublicAPI_V1_Incidents_TranscriptEntity model
    IncidentAttachmentEntity:
      type: object
      properties:
        file_name:
          type: string
        file_content_type:
          type: string
        signed_url:
          type: string
        media_type:
          type: string
        description:
          type: string
        external_id:
          type: string
        file_size:
          type: integer
          format: int32
        status:
          type: string
          enum:
            - pending_upload
            - uploaded
        versions:
          type: object
          description: An object with keys that designate a specific version or size of
            the attachment
      description: IncidentAttachmentEntity model
    IncidentEventEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/IncidentEventEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: IncidentEventEntityPaginated model
    IncidentEventEntity:
      type: object
      properties:
        id:
          type: string
        incident_id:
          type: string
        type:
          type: string
        context:
          type: string
        data:
          type: object
          description: "Can be one of: NoteEntity, TourStepEntity, RootCauseEntity,
            ChangeTypeEntity, RoleUpdateEntity, TaskUpdateEntity,
            AlertLinkedEntity, ChatMessageEntity, AddTaskListEntity,
            ImpactUpdateEntity, TicketUpdateEntity, GeneralUpdateEntity,
            ChangelogEntryEntity, IncidentStatusEntity, TeamAssignmentEntity,
            BulkUpdateEntity"
        occurred_at:
          type: string
          format: date-time
        visibility:
          type: string
          enum:
            - private_to_org
            - open_to_public
            - internal_status_page
        author:
          $ref: "#/components/schemas/AuthorEntity"
        votes:
          $ref: "#/components/schemas/VotesEntity"
        conversations:
          type: array
          items:
            $ref: "#/components/schemas/Conversations_API_Entities_Reference"
      description: IncidentEventEntity model
    VotesEntity:
      type: object
      properties:
        voted:
          type: boolean
          description: Whether or not the current actor has voted
        liked:
          type: boolean
          description: Whether or not the current actor has voted positively
        disliked:
          type: boolean
          description: Whether or not the current actor has voted negatively
        likes:
          type: integer
          format: int32
        dislikes:
          type: integer
          format: int32
      description: VotesEntity model
    patchV1IncidentsIncidentIdEventsEventIdVotes:
      type: object
      properties:
        direction:
          type: string
          description: The direction you would like to vote, or if you dig it
          enum:
            - up
            - down
            - dig
      required:
        - direction
      description: Allows for upvoting or downvoting an event
    patchV1IncidentsIncidentIdImpact:
      type: object
      properties:
        note:
          type: string
        milestone:
          type: string
        impact:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              condition_id:
                type: string
            required:
              - id
              - condition_id
        status_pages:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              integration_slug:
                type: string
            required:
              - id
              - integration_slug
      description: >
        Allows updating an incident's impacted infrastructure, with the option
        to

        move the incident into a different milestone and provide a note to update

        the incident timeline and any attached status pages. If this method is

        requested with the PUT verb, impacts will be completely replaced with the

        information in the request body, even if not provided (effectively clearing

        all impacts). If this method is requested with the PATCH verb, the provided

        impacts will be added or updated, but no impacts will be removed.
    putV1IncidentsIncidentIdImpact:
      type: object
      properties:
        note:
          type: string
        milestone:
          type: string
        impact:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              condition_id:
                type: string
            required:
              - id
              - condition_id
        status_pages:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              integration_slug:
                type: string
            required:
              - id
              - integration_slug
      description: >
        Allows updating an incident's impacted infrastructure, with the option
        to

        move the incident into a different milestone and provide a note to update

        the incident timeline and any attached status pages. If this method is

        requested with the PUT verb, impacts will be completely replaced with the

        information in the request body, even if not provided (effectively clearing

        all impacts). If this method is requested with the PATCH verb, the provided

        impacts will be added or updated, but no impacts will be removed.
    postV1IncidentsIncidentIdImpactType:
      type: object
      properties:
        id:
          type: string
        condition_id:
          type: string
      required:
        - id
      description: Add impacted infrastructure to an incident
    IncidentImpactEntity:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        infrastructure:
          $ref: "#/components/schemas/SuccinctEntity"
      description: IncidentImpactEntity model
    IncidentImpactEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/IncidentImpactEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: IncidentImpactEntityPaginated model
    postV1IncidentsIncidentIdNotes:
      type: object
      properties:
        body:
          type: string
        occurred_at:
          type: string
          format: date-time
          description: ISO8601 timestamp for when the note occurred
        visibility:
          type: string
          enum:
            - private_to_org
            - open_to_public
            - internal_status_page
          default: private_to_org
        status_pages:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              integration_slug:
                type: string
            required:
              - id
              - integration_slug
      required:
        - body
      description: Create a new note on for an incident. The visibility field on a
        note determines where it gets posted.
    patchV1IncidentsIncidentIdNotesNoteId:
      type: object
      properties:
        body:
          type: string
      required:
        - body
      description: Updates the body of a note
    postV1IncidentsIncidentIdGenericChatMessages:
      type: object
      properties:
        body:
          type: string
        occurred_at:
          type: string
          format: date-time
          description: ISO8601 timestamp for when the chat message occurred
        vote_direction:
          type: string
          enum:
            - up
            - down
      required:
        - body
      description: Create a new generic chat message on an incident timeline. These
        are independent of any specific chat provider.
    Event_GenericChatMessageEntity:
      type: object
      properties:
        id:
          type: string
        body:
          type: string
        created_at:
          type: string
          format: date-time
      description: Event_GenericChatMessageEntity model
    patchV1IncidentsIncidentIdGenericChatMessagesMessageId:
      type: object
      properties:
        body:
          type: string
      required:
        - body
      description: Update an existing generic chat message on an incident.
    Incidents_RoleAssignmentEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Incidents_RoleAssignmentEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: Incidents_RoleAssignmentEntityPaginated model
    postV1IncidentsIncidentIdRoleAssignments:
      type: object
      properties:
        user_id:
          type: string
          description: The user ID to assign the role to
        incident_role_id:
          type: string
          description: The Incident Role ID to assign the role to
      required:
        - user_id
        - incident_role_id
      description: Assign a role to a user for this incident
    postV1IncidentsIncidentIdTeamAssignments:
      type: object
      properties:
        team_id:
          type: string
          description: The team ID to associate to the incident
      required:
        - team_id
      description: Assign a team for this incident
    Incidents_RelationshipsEntity:
      type: object
      properties:
        parent:
          $ref: "#/components/schemas/PublicAPI_V1_Incidents_SuccinctEntity"
        children:
          type: array
          items:
            $ref: "#/components/schemas/PublicAPI_V1_Incidents_SuccinctEntity"
          description: The root incident's child incidents.
        siblings:
          type: array
          items:
            $ref: "#/components/schemas/PublicAPI_V1_Incidents_SuccinctEntity"
          description: A list of incidents that share the root incident's parent.
      description: Incidents_RelationshipsEntity model
    IncidentRoleEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/IncidentRoleEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: IncidentRoleEntityPaginated model
    postV1IncidentRoles:
      type: object
      properties:
        name:
          type: string
        summary:
          type: string
        description:
          type: string
      required:
        - name
        - summary
      description: Create a new incident role
    patchV1IncidentRolesIncidentRoleId:
      type: object
      properties:
        name:
          type: string
        summary:
          type: string
        description:
          type: string
      description: Update a single incident role from its ID
    TagEntity:
      type: object
      properties:
        name:
          type: string
      description: TagEntity model
    TagEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/TagEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: TagEntityPaginated model
    postV1IncidentTypes:
      type: object
      properties:
        name:
          type: string
        template:
          type: object
          properties:
            description:
              type: string
            customer_impact_summary:
              type: string
            labels:
              type: object
              description: A labels hash of keys and values
              additionalProperties:
                type: string
            severity:
              type: string
            priority:
              type: string
            tag_list:
              type: array
              description: List of tags for the incident
              items:
                type: string
            runbook_ids:
              type: array
              description: List of ids of Runbooks to attach to incidents created from this
                type
              items:
                type: string
            private_incident:
              type: boolean
            team_ids:
              type: array
              description: List of ids of teams to be assigned to incidents
              items:
                type: string
            impacts:
              type: array
              description: An array of impact/condition combinations
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: The id of impact
                  condition_id:
                    type: string
                    description: The id of the condition
                required:
                  - id
                  - condition_id
      required:
        - name
        - template
      description: Create a new incident type
    IncidentTypeEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        template:
          $ref: "#/components/schemas/IncidentTypeEntity_TemplateEntity"
        template_values:
          $ref: "#/components/schemas/IncidentTypeEntity_TemplateValuesEntity"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      description: IncidentTypeEntity model
      x-speakeasy-entity: IncidentType
    IncidentTypeEntity_TemplateEntity:
      type: object
      properties:
        incident_name:
          type: string
        summary:
          type: string
        description:
          type: string
        customer_impact_summary:
          type: string
        labels:
          type: object
          description: Arbitrary key:value pairs of labels for your incidents.
          additionalProperties:
            type: string
        severity:
          type: string
        priority:
          type: string
        tag_list:
          type: array
          items:
            type: string
        runbook_ids:
          type: array
          items:
            type: string
        team_ids:
          type: array
          items:
            type: string
        private_incident:
          type: boolean
        custom_fields:
          type: string
        impacts:
          type: array
          items:
            $ref: "#/components/schemas/IncidentTypeEntity_TemplateImpactEntity"
    IncidentTypeEntity_TemplateImpactEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        condition_id:
          type: string
        condition_name:
          type: string
        type:
          type: string
          enum:
            - environment
            - functionality
            - service
    IncidentTypeEntity_TemplateValuesEntity:
      type: object
      properties:
        services:
          type: array
          items:
            $ref: "#/components/schemas/IncidentTypeEntity_TemplateImpactEntity"
        functionalities:
          type: array
          items:
            $ref: "#/components/schemas/IncidentTypeEntity_TemplateImpactEntity"
        environments:
          type: array
          items:
            $ref: "#/components/schemas/IncidentTypeEntity_TemplateImpactEntity"
        runbooks:
          type: object
          description: A hash mapping runbook IDs to runbook names.
        teams:
          type: array
          items:
            $ref: "#/components/schemas/TeamEntity"
    IncidentTypeEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/IncidentTypeEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: IncidentTypeEntityPaginated model
    patchV1IncidentTypesId:
      type: object
      properties:
        name:
          type: string
        template:
          type: object
          properties:
            description:
              type: string
            customer_impact_summary:
              type: string
            labels:
              type: object
              description: A labels hash of keys and values
              additionalProperties:
                type: string
            severity:
              type: string
            priority:
              type: string
            tag_list:
              type: array
              description: List of tags for the incident
              items:
                type: string
            runbook_ids:
              type: array
              description: List of ids of Runbooks to attach to incidents created from this
                type
              items:
                type: string
            private_incident:
              type: boolean
            team_ids:
              type: array
              description: List of ids of teams to be assigned to incidents
              items:
                type: string
            impacts:
              type: array
              description: An array of impact/condition combinations
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: The id of impact
                  condition_id:
                    type: string
                    description: The id of the condition
                required:
                  - id
                  - condition_id
      required:
        - name
        - template
      description: Update a single incident type from its ID
    Integrations_IntegrationEntity:
      type: object
      properties:
        id:
          type: string
        slug:
          type: string
        name:
          type: string
        description:
          type: string
        setup_url:
          type: string
        created_at:
          type: string
          format: date-time
        connections:
          $ref: "#/components/schemas/Integrations_ConnectionEntity"
        enabled:
          type: boolean
        installed:
          type: boolean
        deprecated:
          type: boolean
        logo:
          $ref: "#/components/schemas/Integrations_IntegrationEntity_LogoEntity"
        nat_ip:
          type: string
      description: Integrations_IntegrationEntity model
    Integrations_ConnectionEntity:
      type: object
      properties:
        id:
          type: string
        integration_slug:
          type: string
        integration_id:
          type: string
        display_name:
          type: string
        configuration_url:
          type: string
        authorized_by:
          type: string
        authorized_by_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        details:
          type: object
          description: Integration-specific details of this connection. As identified by
            the integration_slug, this object will be represented by that
            integration's ConnectionEntity.
        default_authorized_actor:
          $ref: "#/components/schemas/AuthorEntity"
    Integrations_IntegrationEntity_LogoEntity:
      type: object
      properties:
        logo_url:
          type: string
    FieldMapping_FieldMapEntity:
      type: object
      properties:
        id:
          type: string
        connection_id:
          type: string
        connection_type:
          type: string
        entity_id:
          type: string
        entity_type:
          type: string
        body:
          type: object
        available_fields_url:
          type: string
        data_bag_url:
          type: string
      description: FieldMapping_FieldMapEntity model
    FieldMapping_MappableFieldEntity:
      type: object
      properties:
        value:
          type: string
          description: The ID of the field
        label:
          type: string
          description: The human-readable name of the field
        type:
          type: string
          description: The allowed type of the field
        allowed_values:
          type: string
          description: The allowed values of the field
        required:
          type: string
          description: If the field is required to be mapped
        help_text:
          type: string
          description: Short, inline documentation for the present field
      description: FieldMapping_MappableFieldEntity model
    Integrations_Aws_ConnectionEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Integrations_Aws_ConnectionEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: Integrations_Aws_ConnectionEntityPaginated model
    Integrations_Aws_ConnectionEntity:
      type: object
      properties:
        id:
          type: string
        aws_account_id:
          type: string
        target_arn:
          type: string
        external_id:
          type: string
        connection_status:
          type: string
          enum:
            - pending_setup
            - role_assumed
            - cant_assume_role
            - invalid_permissions
            - validated
        status_text:
          type: string
        status_description:
          type: string
        environment_id:
          type: string
        environment_name:
          type: string
        regions:
          type: array
          items:
            type: string
      description: Integrations_Aws_ConnectionEntity model
    patchV1IntegrationsAwsConnectionsId:
      type: object
      properties:
        aws_account_id:
          type: string
        target_arn:
          type: string
        connection_status:
          type: string
      description: Update the AWS connection with the provided data.
    Integrations_Aws_CloudtrailBatchEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Integrations_Aws_CloudtrailBatchEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: Integrations_Aws_CloudtrailBatchEntityPaginated model
    Integrations_Aws_CloudtrailBatchEntity:
      type: object
      properties:
        id:
          type: string
        events_created:
          type: integer
          format: int32
        status:
          type: string
          enum:
            - in_progress
            - failed
            - successful
            - pending
            - retried
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
        connection:
          $ref: "#/components/schemas/Integrations_Aws_ConnectionEntity"
        created_at:
          type: string
          format: date-time
      description: Integrations_Aws_CloudtrailBatchEntity model
    patchV1IntegrationsAwsCloudtrailBatchesId:
      type: object
      properties:
        events_created:
          type: integer
          format: int32
        status:
          type: string
        error:
          type: string
        ends_at:
          type: string
          format: date-time
      description: Update a CloudTrail batch with new information.
    Integrations_ConfluenceCloud_SpaceKeyEntity:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
      description: Integrations_ConfluenceCloud_SpaceKeyEntity model
    Integrations_Statuspage_ConnectionEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Integrations_Statuspage_ConnectionEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: Integrations_Statuspage_ConnectionEntityPaginated model
    Integrations_Statuspage_ConnectionEntity:
      type: object
      properties:
        id:
          type: string
        page_name:
          type: string
        page_id:
          type: string
        conditions:
          type: array
          items:
            $ref: "#/components/schemas/Integrations_Statuspage_ConditionEntity"
        severities:
          type: array
          items:
            $ref: "#/components/schemas/Integrations_Statuspage_SeverityEntity"
        milestone_mappings:
          type: array
          items:
            $ref: "#/components/schemas/Integrations_Statuspage_MilestoneMappingEntity"
      description: Integrations_Statuspage_ConnectionEntity model
    Integrations_Statuspage_ConditionEntity:
      type: object
      properties:
        condition_id:
          type: string
        condition_name:
          type: string
        statuspageio_condition:
          type: string
          enum:
            - operational
            - major_outage
            - minor_outage
            - degraded_performance
    Integrations_Statuspage_SeverityEntity:
      type: object
      properties:
        severity_slug:
          type: string
        remote_status:
          type: string
    Integrations_Statuspage_MilestoneMappingEntity:
      type: object
      properties:
        milestone_id:
          type: string
        status:
          type: string
    patchV1IntegrationsStatuspageConnectionsConnectionId:
      type: object
      properties:
        page_id:
          type: string
        severities:
          type: array
          items:
            type: object
            properties:
              severity_slug:
                type: string
                description: FireHydrant severity slug
              remote_status:
                type: string
                description: Statuspage.io severity name
            required:
              - severity_slug
              - remote_status
        conditions:
          type: array
          items:
            type: object
            properties:
              condition_id:
                type: string
                description: FireHydrant condition id
              statuspageio_condition:
                type: string
                description: Statuspage.io condition name
            required:
              - condition_id
              - statuspageio_condition
        milestone_mappings:
          type: array
          items:
            type: object
            properties:
              milestone_id:
                type: string
                description: FireHydrant milestone id
              status:
                type: string
                description: Statuspage.io status
                enum:
                  - investigating
                  - identified
                  - monitoring
                  - resolved
            required:
              - milestone_id
              - status
      description: Update the given Statuspage integration connection.
    UserEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/UserEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: UserEntityPaginated model
    CurrentUserEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        source:
          type: string
        email:
          type: string
        role:
          type: string
        teams:
          type: array
          items:
            $ref: "#/components/schemas/SuccinctEntity"
        organization_id:
          type: string
        organization_name:
          type: string
        account_id:
          type: integer
          format: int32
      description: CurrentUserEntity model
    ReportEntity:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Reports_BucketEntity"
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        bucket_period:
          type: string
      description: ReportEntity model
    Reports_BucketEntity:
      type: object
      properties:
        bucket:
          type: string
        points:
          type: array
          items:
            $ref: "#/components/schemas/Reports_DataPointEntity"
    Reports_DataPointEntity:
      type: object
      properties:
        key:
          type: string
        value:
          type: integer
          format: int32
    Metrics_TicketFunnelMetricsEntity:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Metrics_TicketFunnelMetricsEntity_DataBucketEntity"
        groupings:
          $ref: "#/components/schemas/Metrics_TicketFunnelMetricsEntity_GroupingsEntity"
      description: Metrics_TicketFunnelMetricsEntity model
    Metrics_TicketFunnelMetricsEntity_DataBucketEntity:
      type: object
      properties:
        time_bucket:
          type: string
          format: date-time
          description: The start datetime for the period
        filter_params:
          $ref: "#/components/schemas/Metrics_TicketFunnelMetricsEntity_DataBucketFilterP\
            aramsEntity"
        tasks_created:
          type: integer
          format: int32
          description: The number of tasks created
        tasks_done:
          type: integer
          format: int32
          description: The number of tasks completed
        follow_ups_created:
          type: integer
          format: int32
          description: The number of follow ups created
        follow_ups_done:
          type: integer
          format: int32
          description: The number of follow ups completed
    Metrics_TicketFunnelMetricsEntity_DataBucketFilterParamsEntity:
      type: object
      properties:
        start_date:
          type: string
          format: date-time
          description: The start datetime for the period
        end_date:
          type: string
          format: date
          description: The end datetime for the period not inclusive
    Metrics_TicketFunnelMetricsEntity_GroupingsEntity:
      type: object
      properties:
        bucket_size:
          type: string
          description: The bucket size for the data
    Metrics_RetrospectiveEntity:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Metrics_RetrospectiveEntity_DataEntity"
        summary:
          $ref: "#/components/schemas/Metrics_RetrospectiveEntity_SummaryEntity"
      description: Metrics_RetrospectiveEntity model
    Metrics_RetrospectiveEntity_DataEntity:
      type: object
      properties:
        x:
          type: string
        y:
          type: number
          format: float
    Metrics_RetrospectiveEntity_SummaryEntity:
      type: object
      properties:
        completed:
          type: integer
          format: int32
        total:
          type: integer
          format: int32
        incomplete:
          type: integer
          format: int32
        mean:
          type: number
          format: float
        shortest:
          type: number
          format: float
        longest:
          type: number
          format: float
        completion_percentage:
          type: number
          format: float
    Metrics_MilestonesFunnelEntity:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Metrics_MilestonesFunnelEntity_DataBucketEntity"
        columns:
          type: array
          items:
            $ref: "#/components/schemas/Metrics_MilestonesFunnelEntity_ColumnEntity"
        groupings:
          $ref: "#/components/schemas/Metrics_MilestonesFunnelEntity_GroupingsEntity"
        meta:
          $ref: "#/components/schemas/Metrics_MilestonesFunnelEntity_MetaEntity"
      description: Metrics_MilestonesFunnelEntity model
    Metrics_MilestonesFunnelEntity_DataBucketEntity:
      type: object
      properties:
        time_bucket:
          type: string
          format: date-time
          description: The start datetime for the period
        filter_params:
          $ref: "#/components/schemas/Metrics_MilestonesFunnelEntity_DataBucketFilterPara\
            msEntity"
        milestone_counts:
          type: array
          items:
            $ref: "#/components/schemas/Metrics_MilestonesFunnelEntity_DataBucketMilestoneC\
              ountEntity"
    Metrics_MilestonesFunnelEntity_DataBucketFilterParamsEntity:
      type: object
      properties:
        start_date:
          type: string
          format: date-time
          description: The start datetime for the period
        end_date:
          type: string
          format: date
          description: The end datetime for the period not inclusive
    Metrics_MilestonesFunnelEntity_DataBucketMilestoneCountEntity:
      type: object
      properties:
        milestone_id:
          type: string
          description: The UUID of the milestone
        count:
          type: integer
          format: int32
          description: The frequency count of that milestone for the period
    Metrics_MilestonesFunnelEntity_ColumnEntity:
      type: object
      properties:
        name:
          type: string
          description: The slug of the milestone
        label:
          type: string
          description: The name of the milestone
        tooltip:
          type: string
          description: The description of the milestone
        id:
          type: string
          description: The UUID of the milestone
    Metrics_MilestonesFunnelEntity_GroupingsEntity:
      type: object
      properties:
        bucket_size:
          type: string
          description: The bucket size for the data
    Metrics_MilestonesFunnelEntity_MetaEntity:
      type: object
      properties:
        deleted_milestones:
          type: array
          items:
            type: string
        added_milestones:
          type: array
          items:
            type: string
    Metrics_MetricsEntity:
      type: object
      properties:
        type:
          type: string
        by:
          type: string
          description: "The field by which the metrics are grouped. Can be one of: total,
            severity, priority, functionality, service, environment, or user."
        bucket_size:
          type: integer
          format: int32
          description: "The size of returned buckets. Can be one of: day, week, month, or
            all_time."
        display_information:
          type: object
        keys:
          type: array
          items:
            type: string
        buckets:
          type: array
          items:
            type: object
        sort:
          $ref: "#/components/schemas/Metrics_MetricsEntity_SortEntity"
      description: Metrics_MetricsEntity model
    Metrics_MetricsEntity_SortEntity:
      type: object
      properties:
        field:
          type: string
        direction:
          type: string
        limit:
          type: integer
          format: int32
    Metrics_MttxDataEntity:
      type: object
      properties:
        groupings:
          type: array
          items:
            $ref: "#/components/schemas/Metrics_MttxDataEntity_GroupingEntity"
        data:
          type: array
          items:
            $ref: "#/components/schemas/Metrics_MttxGroupEntity"
      description: Metrics_MttxDataEntity model
    Metrics_MttxDataEntity_GroupingEntity:
      type: object
      properties:
        type:
          type: string
        id_attribute:
          type: string
        name_attribute:
          type: string
    Metrics_MttxGroupEntity:
      type: object
      properties:
        group_attributes:
          type: string
        filter_params:
          type: object
        count:
          type: integer
          format: int32
        mttd:
          type: number
          format: float
        mtta:
          type: number
          format: float
        mttm:
          type: number
          format: float
        mttr:
          type: number
          format: float
        count_diff:
          type: integer
          format: int32
        count_percent_diff:
          type: number
          format: float
        mttd_diff:
          type: number
          format: float
        mtta_diff:
          type: number
          format: float
        mttm_diff:
          type: number
          format: float
        mttr_diff:
          type: number
          format: float
        mttd_percent_diff:
          type: number
          format: float
        mtta_percent_diff:
          type: number
          format: float
        mttm_percent_diff:
          type: number
          format: float
        mttr_percent_diff:
          type: number
          format: float
        healthiness:
          type: number
          format: float
    Metrics_InfrastructureListEntity:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Metrics_InfrastructureMetricsEntity"
          description: List of infrastructure metrics
      description: Metrics_InfrastructureListEntity model
    Metrics_InfrastructureMetricsEntity:
      type: object
      properties:
        id:
          type: string
          description: The UUID of the component
        name:
          type: string
          description: The name of the component
        mttd:
          type: integer
          format: int32
          description: Mean Time To Detection (seconds) for all incidents for this
            component in this time period
        mtta:
          type: integer
          format: int32
          description: Mean Time To Acknowledgement (seconds) for all incidents for this
            component in this time period
        mttm:
          type: integer
          format: int32
          description: Mean Time To Mitigation (seconds) for all incidents for this
            component in this time period
        mttr:
          type: integer
          format: int32
          description: Mean Time To Resolution (seconds) for all incidents for this
            component in this time period
        count:
          type: integer
          format: int32
          description: Number of incidents in this time period for this component
        total_time:
          type: integer
          format: int32
          description: Total time (seconds) the component was impacted (MTTR x Incident
            Count)
      description: Metrics_InfrastructureMetricsEntity model
    Runbooks_ActionsEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Runbooks_ActionsEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: Runbooks_ActionsEntityPaginated model
    Runbooks_ActionsEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
        config:
          $ref: "#/components/schemas/Runbooks_ActionConfigEntity"
        category:
          type: string
        prerequisites:
          type: object
        integration:
          $ref: "#/components/schemas/Integrations_IntegrationEntity"
        supported_runbook_types:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        automatable:
          type: boolean
        rerunnable:
          type: boolean
        repeatable:
          type: boolean
        default_logic:
          type: object
        default_rule_data:
          type: object
    Runbooks_ActionConfigEntity:
      type: object
      properties:
        elements:
          $ref: "#/components/schemas/Runbooks_ElementEntity"
        documentation_url:
          type: string
          description: Location of documentation for this action
    Runbooks_ElementEntity:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        markdown:
          $ref: "#/components/schemas/Runbooks_ElementMarkdownEntity"
        textarea:
          $ref: "#/components/schemas/Runbooks_ElementTextareaEntity"
        input:
          $ref: "#/components/schemas/Runbooks_ElementInputEntity"
        plain_text:
          $ref: "#/components/schemas/Runbooks_ElementMarkdownEntity"
        dynamic_select:
          $ref: "#/components/schemas/Runbooks_ElementDynamicSelectEntity"
    Runbooks_ElementMarkdownEntity:
      type: object
      properties:
        text:
          type: string
    Runbooks_ElementTextareaEntity:
      type: object
      properties:
        label:
          type: string
        placeholder:
          type: string
        default_value:
          type: string
    Runbooks_ElementInputEntity:
      type: object
      properties:
        label:
          type: string
        placeholder:
          type: string
        default_value:
          type: string
        required:
          type: boolean
    Runbooks_ElementDynamicSelectEntity:
      type: object
      properties:
        label:
          type: string
        placeholder:
          type: string
        async_url:
          type: string
        required:
          type: boolean
        clearable:
          type: boolean
        is_multi:
          type: boolean
        default_value:
          $ref: "#/components/schemas/Runbooks_ElementDynamicSelectEntity_SelectOptionEnt\
            ity"
        options:
          type: array
          items:
            $ref: "#/components/schemas/Runbooks_ElementDynamicSelectEntity_SelectOptionEnt\
              ity"
    Runbooks_ElementDynamicSelectEntity_SelectOptionEntity:
      type: object
      properties:
        label:
          type: string
        value:
          type: string
    postV1RunbooksExecutions:
      type: object
      properties:
        execute_for:
          type: string
          description: "The incident to attach the runbook to. Format must be:
            `incident/${incidentId}`"
        runbook_id:
          type: string
          description: ID of runbook to attach
      required:
        - execute_for
        - runbook_id
      description: Attaches a runbook to an incident and executes it
    Runbooks_ExecutionEntity:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        status_reason:
          type: string
        status_reason_message:
          type: string
        has_been_rerun:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        created_by:
          type: string
        runbook:
          $ref: "#/components/schemas/SlimRunbookEntity"
        steps:
          $ref: "#/components/schemas/Runbooks_ExecutionStepEntity"
        executed_for:
          $ref: "#/components/schemas/Runbooks_ExecutionEntity_ExecutedForEntity"
      description: Runbooks_ExecutionEntity model
    Runbooks_ExecutionStepEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        action_slug:
          type: string
        action_type:
          type: string
        integration_name:
          type: string
        integration_slug:
          type: string
        automatic:
          type: boolean
        config:
          type: object
        step_elements:
          type: array
          items:
            type: object
        executable:
          type: boolean
        repeats:
          type: boolean
        repeats_duration:
          type: string
          description: ISO8601 formatted duration string
        repeats_at:
          type: string
          format: date-time
        has_been_rerun:
          type: boolean
        has_been_retried:
          type: boolean
        execution:
          $ref: "#/components/schemas/Runbooks_ExecutionStepExecutionEntity"
        repeatable:
          type: boolean
        rule:
          $ref: "#/components/schemas/Rules_RuleEntity"
    Runbooks_ExecutionStepExecutionEntity:
      type: object
      properties:
        state:
          type: string
          enum:
            - initial
            - pending
            - scheduled
            - started
            - dismissed
            - completed
            - errored
        data:
          type: object
        performed_by:
          $ref: "#/components/schemas/ActorEntity"
        performed_at:
          type: string
          format: date-time
        scheduled_for:
          type: string
          format: date-time
        error:
          type: string
        webhook_delivery:
          $ref: "#/components/schemas/Runbooks_WebhookDeliveryEntity"
    Runbooks_WebhookDeliveryEntity:
      type: object
      properties:
        headers:
          type: string
        status_code:
          type: string
    Runbooks_ExecutionEntity_ExecutedForEntity:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        name:
          type: string
    Runbooks_ExecutionEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Runbooks_ExecutionEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: Runbooks_ExecutionEntityPaginated model
    patchV1RunbooksExecutionsExecutionIdVotes:
      type: object
      properties:
        direction:
          type: string
          description: The direction you would like to vote, or if you dig it
          enum:
            - up
            - down
            - dig
      required:
        - direction
      description: Allows for upvoting or downvoting an event
    putV1RunbooksExecutionsExecutionIdStepsStepId:
      type: object
      properties:
        state:
          type: string
        schedule_for:
          type: string
          format: date-time
        data:
          type: object
          description: Data for execution of this step
          additionalProperties: true
        repeats_at:
          type: string
          format: date-time
      required:
        - state
      description: Updates a runbook step execution, especially for changing the state
        of a step execution.
    patchV1RunbooksExecutionsExecutionIdStepsStepIdVotes:
      type: object
      properties:
        direction:
          type: string
          description: The direction you would like to vote, or if you dig it
          enum:
            - up
            - down
            - dig
      required:
        - direction
      description: Allows for upvoting or downvoting an event
    postV1Runbooks:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          description: Deprecated, but still required. Please just use 'incident'
          enum:
            - incident
            - general
            - infrastructure
            - incident_role
        summary:
          type: string
          description: Deprecated. Use description
        description:
          type: string
          description: A longer description about the Runbook. Supports markdown format
        auto_attach_to_restricted_incidents:
          type: boolean
          description: Whether or not this runbook should be automatically attached to
            restricted incidents. Note that setting this to `true` will prevent
            it from being attached to public incidents, even manually. Defaults
            to `false`.
        tutorial:
          type: boolean
          description: Whether or not this runbook is a tutorial runbook
        owner:
          type: object
          description: An object representing a Team that owns the runbook
          properties:
            id:
              type: string
          required:
            - id
        attachment_rule:
          type: object
          properties:
            logic:
              type: string
              description: The JSON logic for the attaching the runbook
            user_data:
              type: string
              description: The user data for the rule
          required:
            - logic
        steps:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Name for step
              action_id:
                type: string
                description: ID of action to use for this step.
              rule:
                type: object
                properties:
                  logic:
                    type: string
                    description: The JSON logic for the rule
                  user_data:
                    type: string
                    description: The user data for the rule
                required:
                  - logic
            required:
              - name
              - action_id
      required:
        - name
        - type
      description: Create a new runbook for use with incidents.
    RunbookEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        summary:
          type: string
        description:
          type: string
        type:
          type: string
        runbook_template_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        created_by:
          $ref: "#/components/schemas/AuthorEntity"
        updated_by:
          $ref: "#/components/schemas/AuthorEntity"
        steps:
          $ref: "#/components/schemas/RunbookStepEntity"
        attachment_rule:
          $ref: "#/components/schemas/Rules_RuleEntity"
        votes:
          $ref: "#/components/schemas/VotesEntity"
        is_editable:
          type: boolean
        owner:
          $ref: "#/components/schemas/TeamEntity"
        categories:
          type: string
          description: categories the runbook applies to
        auto_attach_to_restricted_incidents:
          type: boolean
        tutorial:
          type: boolean
      description: RunbookEntity model
      x-speakeasy-entity: Runbook
    RunbookStepEntity:
      type: object
      properties:
        name:
          type: string
        action_id:
          type: string
        step_id:
          type: string
        config:
          type: object
          description: An unstructured object of key/value pairs describing the config
            settings for the step.
        action_elements:
          type: array
          items:
            type: object
          description: A list of action elements
        step_elements:
          type: array
          items:
            type: object
          description: A list of step elements
        automatic:
          type: boolean
        delay_duration:
          type: string
          format: date-time
        action:
          $ref: "#/components/schemas/Runbooks_ActionsEntity"
        reruns:
          type: boolean
        repeats:
          type: boolean
        repeats_duration:
          type: string
          format: date-time
        votes:
          $ref: "#/components/schemas/VotesEntity"
        rule:
          $ref: "#/components/schemas/Rules_RuleEntity"
    putV1RunbooksRunbookId:
      type: object
      properties:
        name:
          type: string
        summary:
          type: string
        description:
          type: string
        tutorial:
          type: boolean
          description: Whether or not this runbook is a tutorial runbook
        owner:
          type: object
          description: An object representing a Team that owns the runbook
          properties:
            id:
              type: string
        severities:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
        services:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
        environments:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
        attachment_rule:
          type: object
          properties:
            logic:
              type: string
              description: The JSON logic for the attaching the runbook
            user_data:
              type: string
              description: The user data for the rule
          required:
            - logic
        steps:
          type: array
          items:
            type: object
            properties:
              step_id:
                type: string
                description: ID of step to be updated
              name:
                type: string
                description: Name for step
              action_id:
                type: string
                description: ID of action to use for this step.
              rule:
                type: object
                properties:
                  logic:
                    type: string
                    description: The JSON logic for the rule
                  user_data:
                    type: string
                    description: The user data for the rule
                required:
                  - logic
            required:
              - name
              - action_id
        auto_attach_to_restricted_incidents:
          type: boolean
          description: Whether or not this runbook should be automatically attached to
            restricted incidents. Note that setting this to `true` will prevent
            it from being attached to public incidents, even manually. Defaults
            to `false`.
      description: >
        Update a runbook and any attachment rules associated with it. This
        endpoint is used to configure nearly everything

        about a runbook, including but not limited to the steps, environments, attachment rules, and severities.
    NuncConnectionEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/NuncConnectionEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: NuncConnectionEntityPaginated model
    NuncConnectionEntity:
      type: object
      properties:
        id:
          type: string
        domain:
          type: string
        company_name:
          type: string
        company_website:
          type: string
        cname:
          type: string
        greeting_title:
          type: string
        greeting_body:
          type: string
        operational_message:
          type: string
        company_tos_url:
          type: string
        primary_color:
          type: string
        secondary_color:
          type: string
        button_background_color:
          type: string
        button_text_color:
          type: string
        link_color:
          type: string
        title:
          type: string
        exposed_fields:
          type: string
        conditions:
          $ref: "#/components/schemas/NuncConditionEntity"
        components:
          $ref: "#/components/schemas/NuncComponentEntity"
        component_groups:
          $ref: "#/components/schemas/NuncComponentGroupEntity"
        logo:
          $ref: "#/components/schemas/MediaImageEntity"
        cover_image:
          $ref: "#/components/schemas/MediaImageEntity"
        favicon:
          $ref: "#/components/schemas/MediaImageEntity"
        open_graph_image:
          $ref: "#/components/schemas/MediaImageEntity"
        dark_logo:
          $ref: "#/components/schemas/MediaImageEntity"
        enable_histogram:
          type: boolean
        ui_version:
          type: integer
          format: int32
        links:
          type: array
          items:
            $ref: "#/components/schemas/LinksEntity"
          description: List of links attached to this status page.
      description: NuncConnectionEntity model
    NuncConditionEntity:
      type: object
      properties:
        nunc_condition:
          type: string
        condition_name:
          type: string
        condition_id:
          type: string
    NuncComponentEntity:
      type: object
      properties:
        infrastructure_type:
          type: string
        infrastructure_id:
          type: string
        label:
          type: string
        position:
          type: integer
          format: int32
        component_group_id:
          type: string
    NuncComponentGroupEntity:
      type: object
      properties:
        id:
          type: string
        component_group_id:
          type: string
        name:
          type: string
        position:
          type: integer
          format: int32
    MediaImageEntity:
      type: object
      properties:
        original_url:
          type: string
        versions_urls:
          type: object
          description: An object with keys that can have different versions of an image
    NuncEmailSubscribersEntity:
      type: object
      properties:
        id:
          type: string
          description: UUID of the subscriber
        email:
          type: string
          description: Email of the subscriber
        created_at:
          type: string
          format: date-time
          description: The time the subscriber was created
      description: NuncEmailSubscribersEntity model
    patchV1NuncConnectionsNuncConnectionIdLinksLinkId:
      type: object
      properties:
        display_text:
          type: string
        icon_url:
          type: string
        href_url:
          type: string
      description: Update a link to be displayed on a FireHydrant status page
    patchV1SavedSearchesResourceTypeSavedSearchId:
      type: object
      properties:
        is_private:
          type: boolean
        name:
          type: string
        filter_values:
          type: object
          additionalProperties: true
      description: Update a specific saved search
    SavedSearchEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        resource_type:
          type: string
        user_id:
          type: string
        is_private:
          type: boolean
          description: Whether or not this saved search is private
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        filter_values:
          type: object
          description: An unstructured key/value pair of saved values for searching
      description: SavedSearchEntity model
    postV1SavedSearchesResourceType:
      type: object
      properties:
        name:
          type: string
        is_private:
          type: boolean
        filter_values:
          type: object
          additionalProperties: true
      required:
        - name
        - filter_values
      description: Create a new saved search for a particular resource type
    Lifecycles_PhaseEntityList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Lifecycles_PhaseEntity"
      description: Lifecycles_PhaseEntityList model
    Lifecycles_PhaseEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        position:
          type: integer
          format: int32
        milestones:
          type: array
          items:
            $ref: "#/components/schemas/Lifecycles_MilestoneEntity"
      description: Lifecycles_PhaseEntity model
    Lifecycles_MilestoneEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        slug:
          type: string
        position:
          type: integer
          format: int32
        created_by:
          $ref: "#/components/schemas/AuthorEntity"
        updated_by:
          $ref: "#/components/schemas/AuthorEntity"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    postV1Priorities:
      type: object
      properties:
        slug:
          type: string
        description:
          type: string
        default:
          type: boolean
      required:
        - slug
      description: Create a new priority
    PriorityEntity:
      type: object
      properties:
        slug:
          type: string
        description:
          type: string
        position:
          type: integer
          format: int32
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        default:
          type: boolean
      description: PriorityEntity model
      x-speakeasy-entity: Priority
    patchV1PrioritiesPrioritySlug:
      type: object
      properties:
        slug:
          type: string
        description:
          type: string
        default:
          type: boolean
      description: Update a specific priority
    postV1Severities:
      type: object
      properties:
        slug:
          type: string
        description:
          type: string
        position:
          type: integer
          format: int32
        color:
          type: string
          enum:
            - red
            - orange
            - yellow
            - blue
            - teal
            - grey
      required:
        - slug
      description: Create a new severity
    SeverityEntity:
      type: object
      properties:
        slug:
          type: string
        description:
          type: string
        type:
          type: string
        position:
          type: integer
          format: int32
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        system_record:
          type: boolean
        color:
          type: string
      description: SeverityEntity model
      x-speakeasy-entity: Severity
    SeverityEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/SeverityEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: SeverityEntityPaginated model
    patchV1SeveritiesSeveritySlug:
      type: object
      properties:
        slug:
          type: string
        description:
          type: string
        position:
          type: integer
          format: int32
        color:
          type: string
          enum:
            - red
            - orange
            - yellow
            - blue
            - teal
            - grey
      description: Update a specific severity
    patchV1SeverityMatrix:
      type: object
      properties:
        summary:
          type: string
        data:
          type: array
          items:
            type: object
            properties:
              severity:
                type: string
                description: Slug of a severity
              impact_id:
                type: string
                description: Impact id
              condition_id:
                type: string
                description: Condition id
            required:
              - severity
              - impact_id
              - condition_id
      required:
        - data
      description: Update available severities and impacts in your organization's
        severity matrix.
    SeverityMatrix_SeverityMatrixEntity:
      type: object
      properties:
        matrix:
          type: array
          items:
            $ref: "#/components/schemas/SeverityMatrix_ItemEntity"
        impacts:
          type: array
          items:
            $ref: "#/components/schemas/SeverityMatrix_ImpactEntity"
        conditions:
          type: array
          items:
            $ref: "#/components/schemas/SeverityMatrix_ConditionEntity"
      description: SeverityMatrix_SeverityMatrixEntity model
    SeverityMatrix_ItemEntity:
      type: object
      properties:
        severity:
          type: string
        condition_id:
          type: string
        impact_id:
          type: string
        impact_type:
          type: string
    postV1SeverityMatrixConditions:
      type: object
      properties:
        name:
          type: string
        position:
          type: integer
          format: int32
          description: Position is used to determine ordering of conditions in API
            responses and dropdowns. The condition with the lowest position
            (typically 0) will be considered the Default Condition
      required:
        - name
      description: Create a new condition
    patchV1SeverityMatrixConditionsConditionId:
      type: object
      properties:
        name:
          type: string
        position:
          type: integer
          format: int32
          description: Position is used to determine ordering of conditions in API
            responses and dropdowns. The condition with the lowest position
            (typically 0) will be considered the Default Condition
      description: Update a specific condition
    postV1SeverityMatrixImpacts:
      type: object
      properties:
        affects_type:
          type: string
        affects_id:
          type: string
        position:
          type: integer
          format: int32
      required:
        - affects_type
        - affects_id
      description: Create a new impact
    patchV1SeverityMatrixImpactsImpactId:
      type: object
      properties:
        name:
          type: string
        position:
          type: integer
          format: int32
      description: Update a specific impact
    postV1ScheduledMaintenances:
      type: object
      properties:
        name:
          type: string
        starts_at:
          type: string
          format: date-time
          description: ISO8601 timestamp for the start time of the scheduled maintenance
        ends_at:
          type: string
          format: date-time
          description: ISO8601 timestamp for the end time of the scheduled maintenance
        summary:
          type: string
        description:
          type: string
        labels:
          type: object
          description: A json object of label keys and values
          additionalProperties:
            type: string
        status_pages:
          type: array
          description: An array of status pages to display this maintenance on
          items:
            type: object
            properties:
              integration_slug:
                type: string
                description: The slug identifying the type of status page
              connection_id:
                type: string
                description: The UUID of the status page to display this maintenance on
            required:
              - connection_id
        impacts:
          type: array
          description: An array of impact/condition combinations
          items:
            type: object
            properties:
              type:
                type: string
                description: The type of impact
              id:
                type: string
                description: The id of impact
              condition_id:
                type: string
                description: The id of the condition
            required:
              - type
              - id
              - condition_id
      required:
        - name
        - starts_at
        - ends_at
      description: Create a new scheduled maintenance event
    ScheduledMaintenanceEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        summary:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
        incident:
          $ref: "#/components/schemas/IncidentEntity"
        status_pages:
          type: array
          items:
            $ref: "#/components/schemas/ScheduledMaintenancesStatusPageEntity"
        impacts:
          type: array
          items:
            $ref: "#/components/schemas/ScheduledMaintenancesImpactEntity"
        labels:
          type: object
          description: An object of label key and values
          additionalProperties:
            type: string
      description: ScheduledMaintenanceEntity model
    ScheduledMaintenancesStatusPageEntity:
      type: object
      properties:
        id:
          type: string
        integration_id:
          type: string
        integration_slug:
          type: string
        integration_name:
          type: string
    ScheduledMaintenancesImpactEntity:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        impact:
          $ref: "#/components/schemas/SuccinctEntity"
        condition:
          $ref: "#/components/schemas/SeverityMatrix_ConditionEntity"
    patchV1ScheduledMaintenancesScheduledMaintenanceId:
      type: object
      properties:
        name:
          type: string
        summary:
          type: string
        starts_at:
          type: string
          format: date-time
          description: ISO8601 timestamp for the start time of the scheduled maintenance
        ends_at:
          type: string
          format: date-time
          description: ISO8601 timestamp for the end time of the scheduled maintenance
        description:
          type: string
        labels:
          type: object
          description: A json object of label keys and values
          additionalProperties:
            type: string
        status_pages:
          type: array
          description: An array of status pages to display this maintenance on
          items:
            type: object
            properties:
              integration_slug:
                type: string
                description: The slug identifying the type of status page
              connection_id:
                type: string
                description: The UUID of the status page to display this maintenance on
            required:
              - connection_id
        impacts:
          type: array
          description: An array of impact/condition combinations
          items:
            type: object
            properties:
              type:
                type: string
                description: The type of impact
              id:
                type: string
                description: The id of impact
              condition_id:
                type: string
                description: The id of the condition
            required:
              - type
              - id
              - condition_id
      description: Change the conditions of a scheduled maintenance event, including
        updating any status page announcements of changes.
    ScheduleEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/ScheduleEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: ScheduleEntityPaginated model
    InfrastructureSearchEntity:
      type: object
      properties:
        type:
          type: string
        infrastructure:
          type: string
      description: InfrastructureSearchEntity model
    Nunc_NuncSubscription:
      type: object
      properties:
        response:
          type: string
      description: Nunc_NuncSubscription model
    postV1NuncSubscriptions:
      type: object
      properties:
        email:
          type: string
      required:
        - email
      description: Subscribe to status page updates
    postV1StatusUpdateTemplates:
      type: object
      properties:
        name:
          type: string
        body:
          type: string
      required:
        - name
        - body
      description: Create a status update template for your organization
    StatusUpdateTemplateEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        body:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        discarded_at:
          type: string
          format: date-time
      description: StatusUpdateTemplateEntity model
      x-speakeasy-entity: StatusUpdateTemplate
    patchV1StatusUpdateTemplatesStatusUpdateTemplateId:
      type: object
      properties:
        name:
          type: string
        body:
          type: string
      description: Update a single status update template
    Organizations_CustomFieldDefinitionEntity:
      type: object
      properties:
        display_name:
          type: string
        field_id:
          type: string
        field_type:
          type: string
        slug:
          type: string
        description:
          type: string
        required:
          type: boolean
        required_at_milestone_id:
          type: string
          description: The milestone at which this field is required, if `required` is set
            to `true`. When null, a required field is always required.
        permissible_values:
          type: string
      description: Organizations_CustomFieldDefinitionEntity model
    patchV1CustomFieldsDefinitionsFieldId:
      type: object
      properties:
        description:
          type: string
        display_name:
          type: string
        permissible_values:
          type: array
          items:
            type: string
        required:
          type: boolean
        required_at_milestone_id:
          type: string
          description: An optional milestone ID to specify when the field should become
            required, if `required` is set to `true`. If not provided, required
            fields are always required.
      description: Update a single custom field definition
    postV1CustomFieldsDefinitions:
      type: object
      properties:
        display_name:
          type: string
        description:
          type: string
        field_type:
          type: string
        permissible_values:
          type: array
          items:
            type: string
        required:
          type: boolean
        required_at_milestone_id:
          type: string
          description: An optional milestone ID to specify when the field should become
            required, if `required` is set to `true`. If not provided, required
            fields are always required.
      required:
        - display_name
        - field_type
        - required
      description: Create a new custom field definition
    postV1PostMortemsReports:
      type: object
      properties:
        incident_id:
          type: string
      required:
        - incident_id
      description: Create a report
    PostMortems_PostMortemReportEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        summary:
          type: string
        incident_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        tag_list:
          type: array
          items:
            type: string
        additional_details:
          type: array
          items:
            type: string
        incident:
          $ref: "#/components/schemas/IncidentEntity"
        questions:
          $ref: "#/components/schemas/PostMortems_QuestionEntity"
        calendar_events:
          $ref: "#/components/schemas/Calendars_EventEntity"
      description: PostMortems_PostMortemReportEntity model
    PostMortems_QuestionEntity:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        body:
          type: string
        tooltip:
          type: string
        kind:
          type: string
        question_type_id:
          type: string
        is_required:
          type: boolean
        available_options:
          type: array
          items:
            type: string
        conversations:
          type: array
          items:
            $ref: "#/components/schemas/Conversations_API_Entities_Reference"
    Calendars_EventEntity:
      type: object
      properties:
        id:
          type: string
        summary:
          type: string
        description:
          type: string
        starts_at:
          type: string
        ends_at:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        provider_url:
          type: string
        provider_icon_url:
          type: string
    PostMortems_PostMortemReportEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/PostMortems_PostMortemReportEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: PostMortems_PostMortemReportEntityPaginated model
    patchV1PostMortemsReportsReportId:
      type: object
      properties:
        name:
          type: string
        summary:
          type: string
        additional_details:
          type: string
        questions:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: ID of a question
              body:
                type: string
                description: Answer to question
      description: Update a report
    postV1PostMortemsReportsReportIdReasons:
      type: object
      properties:
        summary:
          type: string
      required:
        - summary
      description: Add a new contributing factor to an incident
    PostMortems_ReasonEntity:
      type: object
      properties:
        id:
          type: string
        summary:
          type: string
        position:
          type: integer
          format: int32
        created_by:
          $ref: "#/components/schemas/AuthorEntity"
        conversations:
          type: array
          items:
            $ref: "#/components/schemas/Conversations_API_Entities_Reference"
      description: PostMortems_ReasonEntity model
    PostMortems_ReasonEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/PostMortems_ReasonEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: PostMortems_ReasonEntityPaginated model
    patchV1PostMortemsReportsReportIdReasonsReasonId:
      type: object
      properties:
        summary:
          type: string
      description: Update a contributing factor
    putV1PostMortemsReportsReportIdReasonsOrder:
      type: object
      properties:
        old_position:
          type: integer
          format: int32
        new_position:
          type: integer
          format: int32
      required:
        - old_position
        - new_position
      description: Reorder a contributing factor
    patchV1PostMortemsReportsReportIdFieldsFieldId:
      type: object
      properties:
        value:
          type: string
      required:
        - value
      description: Update a field value on a post mortem report
    PostMortems_SectionFieldEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        value:
          type: string
      description: PostMortems_SectionFieldEntity model
    postV1PostMortemsReportsReportIdPublish:
      type: object
      properties:
        _:
          x-speakeasy-name-override: underscore
          type: string
          enum:
            - "true"
        user_ids:
          type: array
          description: An array of user IDs with whom to share the report
          items:
            type: string
        team_ids:
          type: array
          description: An array of team IDs with whom to share the report
          items:
            type: string
      description: Marks an incident retrospective as published and emails all of the
        participants in the report the summary
    putV1PostMortemsQuestions:
      type: object
      properties:
        _make_swagger_work_:
          type: string
        questions:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: ID of a question
              title:
                type: string
                description: title of a question
              tooltip:
                type: string
                description: tooltip of a question
      description: Update the questions configured to be provided and filled out on
        future retrospective reports.
    PostMortems_QuestionTypeEntity:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        tooltip:
          type: string
        kind:
          type: string
        is_required:
          type: boolean
        available_options:
          type: array
          items:
            type: string
      description: PostMortems_QuestionTypeEntity model
    PostMortems_QuestionTypeEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/PostMortems_QuestionTypeEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: PostMortems_QuestionTypeEntityPaginated model
    Alerts_AlertEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Alerts_AlertEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: Alerts_AlertEntityPaginated model
    Alerts_ProcessingLogEntryEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Alerts_ProcessingLogEntryEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: Alerts_ProcessingLogEntryEntityPaginated model
    Alerts_ProcessingLogEntryEntity:
      type: object
      properties:
        id:
          type: string
        context:
          type: object
          description: An unstructured representation of this log entry's context.
        created_at:
          type: string
          format: date-time
        level:
          type: string
          enum:
            - unknown
            - debug
            - info
            - warn
            - error
            - fatal
        message:
          type: string
        message_type:
          type: string
          enum:
            - i18n_key
            - custom
    postV1TicketingTickets:
      type: object
      properties:
        summary:
          type: string
        related_to:
          type: string
          description: Which incident this ticket is related to, in the format of
            'incident/UUID'
        project_id:
          type: string
        description:
          type: string
        state:
          type: string
        type:
          type: string
        priority_id:
          type: string
        tag_list:
          type: array
          description: List of tags for the ticket
          items:
            type: string
        remote_url:
          type: string
          description: The remote URL for an existing ticket in a supported and configured
            ticketing integration
      required:
        - summary
      description: Creates a ticket for a project
    patchV1TicketingTicketsTicketId:
      type: object
      properties:
        summary:
          type: string
        description:
          type: string
        state:
          type: string
        type:
          type: string
        priority_id:
          type: string
        tag_list:
          type: array
          description: List of tags for the ticket
          items:
            type: string
      description: Update a ticket's attributes
    Ticketing_Projects_ProjectListItemEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        config:
          $ref: "#/components/schemas/Ticketing_ProjectConfigEntity"
        field_map:
          $ref: "#/components/schemas/Ticketing_ProjectFieldMapEntity"
        updated_at:
          type: string
          format: date-time
        connection_slug:
          type: string
      description: Ticketing_Projects_ProjectListItemEntity model
    Ticketing_ProjectConfigEntity:
      type: object
      properties:
        id:
          type: string
        connection_id:
          type: string
        connection_type:
          type: string
        ticketing_project_id:
          type: string
        ticketing_project_name:
          type: string
        details:
          type: object
          description: "A config object containing details about the project config. Can
            be one of: Ticketing::JiraCloud::ProjectConfigEntity,
            Ticketing::JiraOnprem::ProjectConfigEntity, or
            Ticketing::Shortcut::ProjectConfigEntity"
      description: Ticketing_ProjectConfigEntity model
    Ticketing_ProjectFieldMapEntity:
      type: object
      properties:
        id:
          type: string
        connection_id:
          type: string
        connection_type:
          type: string
        ticketing_project_id:
          type: string
        body:
          type: array
          items:
            $ref: "#/components/schemas/Ticketing_ProjectFieldMapBodyEntity"
      description: Ticketing_ProjectFieldMapEntity model
    Ticketing_ProjectFieldMapBodyEntity:
      type: object
      properties:
        strategy:
          type: string
          enum:
            - basic
            - logic
        external_field:
          type: string
        external_value:
          $ref: "#/components/schemas/Ticketing_ProjectFieldMapExternalValueEntity"
        user_data:
          type: object
        cases:
          type: array
          items:
            $ref: "#/components/schemas/Ticketing_ProjectFieldMapCasesEntity"
        else:
          $ref: "#/components/schemas/Ticketing_ProjectFieldMapCasesElseEntity"
    Ticketing_ProjectFieldMapExternalValueEntity:
      type: object
      properties:
        type:
          type: string
          enum:
            - literal
            - fh-attribute
            - fh-type
        value:
          type: string
        attribute:
          type: string
        presentation:
          type: string
    Ticketing_ProjectFieldMapCasesEntity:
      type: object
      properties:
        logic:
          type: object
          description: An unstructured object of key/value pairs describing the logic for
            applying the rule.
        external_value:
          $ref: "#/components/schemas/Ticketing_ProjectFieldMapExternalValueEntity"
    Ticketing_ProjectFieldMapCasesElseEntity:
      type: object
      properties:
        external_value:
          $ref: "#/components/schemas/Ticketing_ProjectFieldMapExternalValueEntity"
    Ticketing_FieldMaps_MappableFieldEntity:
      type: object
      properties:
        value:
          type: string
          description: The ID of the field
        label:
          type: string
          description: The human-readable name of the field
        type:
          type: string
          description: The allowed type of the field
        allowed_values:
          type: string
          description: The allowed values of the field
        required:
          type: string
          description: If the field is required to be mapped
      description: Ticketing_FieldMaps_MappableFieldEntity model
    postV1TicketingPriorities:
      type: object
      properties:
        name:
          type: string
        position:
          type: integer
          format: int32
          description: The position that this priority should take in your list of
            priorities. Priorities should be ordered from highest to lowest,
            with the highest priority at 0. If a position isn't specified, the
            new priority will be added to the end of the list; if another
            priority already exists at the specified position, that priority and
            all priorities following it will automatically be moved down the
            list to make room for the new priority.
      required:
        - name
      description: Create a single ticketing priority
    patchV1TicketingPrioritiesId:
      type: object
      properties:
        name:
          type: string
        position:
          type: integer
          format: int32
          description: The position that this priority should take in your list of
            priorities. Priorities should be ordered from highest to lowest,
            with the highest priority at 0. If a position isn't specified, the
            new priority will be added to the end of the list; if another
            priority already exists at the specified position, this priority
            will shift that priority and all priorities down the list.
      description: Update a single ticketing priority's attributes
    postV1TaskLists:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        task_list_items:
          type: array
          items:
            type: object
            properties:
              summary:
                type: string
                description: A summary of the task
              description:
                type: string
                description: A long-form description for the task if additional context is
                  helpful
            required:
              - summary
      required:
        - name
        - task_list_items
      description: Creates a new task list
    TaskListEntity:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        created_by:
          $ref: "#/components/schemas/AuthorEntity"
        task_list_items:
          $ref: "#/components/schemas/TaskListItemEntity"
      description: TaskListEntity model
      x-speakeasy-entity: TaskList
    TaskListItemEntity:
      type: object
      properties:
        summary:
          type: string
        description:
          type: string
    patchV1TaskListsTaskListId:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        task_list_items:
          type: array
          items:
            type: object
            properties:
              summary:
                type: string
                description: A summary of the task
              description:
                type: string
                description: A long-form description for the task if additional context is
                  helpful
            required:
              - summary
      description: Updates a task list's attributes and task list items
    putV1ScimV2GroupsId:
      type: object
      properties:
        displayName:
          type: string
          description: The name of the team being updated
        members:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
                description: String that represents the user's UUID to assign to the team
            required:
              - value
      required:
        - displayName
        - members
      description: SCIM endpoint to update a Team (Colloquial for Group in the SCIM
        protocol). Any members defined in the payload will be assigned to the
        team with no defined role, any missing members will be removed from the
        team.
    postV1ScimV2Groups:
      type: object
      properties:
        displayName:
          type: string
          description: The name of the team being created
        members:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
                description: String that represents the user's UUID to assign to the team
            required:
              - value
      required:
        - displayName
        - members
      description: SCIM endpoint to create a new Team (Colloquial for Group in the
        SCIM protocol). Any members defined in the payload will be assigned to
        the team with no defined role.
    putV1ScimV2UsersId:
      type: object
      properties:
        userName:
          type: string
          description: A service provider's unique identifier for the user
        name:
          type: object
          description: The components of the user's name
          properties:
            givenName:
              type: string
              description: The family name of the User, or last name in most Western languages
            familyName:
              type: string
              description: The given name of the User, or first name in most Western languages
          required:
            - givenName
            - familyName
        emails:
          type: array
          description: Email addresses for the User
          items:
            type: object
            properties:
              value:
                type: string
                description: String that represents an email address for the User
              primary:
                type: boolean
                description: Boolean which signifies if an email is intended as the primary
                  email for the User
            required:
              - value
        roles:
          type: array
          description: Roles for the User
          items:
            type: string
        active:
          type: boolean
          description: Boolean that represents whether user is active
      description: PUT SCIM endpoint to update a User. This endpoint is used to
        replace a resource's attributes.
    postV1ScimV2Users:
      type: object
      properties:
        userName:
          type: string
          description: A service provider's unique identifier for the user
        name:
          type: object
          description: The components of the user's name
          properties:
            familyName:
              type: string
              description: The family name of the User, or last name in most Western languages
            givenName:
              type: string
              description: The given name of the User, or first name in most Western languages
          required:
            - familyName
            - givenName
        emails:
          type: array
          description: Email addresses for the User
          items:
            type: object
            properties:
              value:
                type: string
                description: String that represents an email address for the User
              primary:
                type: boolean
                description: Boolean which signifies if an email is intended as the primary
                  email for the User
            required:
              - value
              - primary
        roles:
          type: array
          description: Roles for the User. Options are owner, member or collaborator
          items:
            type: string
        password:
          type: string
          description: This attribute is intended to be used as a means to set, replace,
            or compare (i.e., filter for equality) a password
      required:
        - userName
        - name
        - emails
      description: SCIM endpoint to create and provision a new User. This endpoint
        will provision the User, which allows them to accept their account
        throught their IDP or via the Forgot Password flow.
    postV1CatalogsCatalogIdIngest:
      type: object
      properties:
        encoding:
          type: string
          description: Encoding for submitted data
          enum:
            - text/yaml
            - application/x-yaml
            - application/json
        data:
          type: string
          description: Service data
      required:
        - encoding
        - data
      description: Accepts catalog data in the configured format and asyncronously
        processes the data to incorporate changes into service catalog.
    Imports_ImportEntity:
      type: object
      properties:
        state:
          type: string
          enum:
            - preprocessing
            - ready_for_import
            - importing
            - completed
        updated_at:
          type: string
          format: date-time
      description: Imports_ImportEntity model
    postV1ChecklistTemplates:
      type: object
      properties:
        name:
          type: string
        checks:
          type: array
          description: An array of checks for the checklist template
          items:
            type: object
            properties:
              name:
                type: string
                description: The name of the check
              description:
                type: string
                description: The description of the check
            required:
              - name
        description:
          type: string
        team_id:
          type: string
          description: The ID of the Team that owns the checklist template
        connected_services:
          type: array
          description: Array of service IDs to attach checklist template to
          items:
            type: object
            properties:
              id:
                type: string
            required:
              - id
      required:
        - name
        - checks
      description: Creates a checklist template for the organization
    ChecklistTemplateEntityPaginated:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/ChecklistTemplateEntity"
        pagination:
          $ref: "#/components/schemas/PaginationEntity"
      description: ChecklistTemplateEntityPaginated model
    patchV1ChecklistTemplatesId:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        checks:
          type: array
          description: An array of checks for the checklist template
          items:
            type: object
            properties:
              id:
                type: string
                description: Specify the check ID when updating an already existing check
              description:
                type: string
                description: The description of the check
              name:
                type: string
                description: The name of the check
            required:
              - name
        team_id:
          type: string
          description: The ID of the Team that owns the checklist template
        connected_services:
          type: array
          description: Array of service IDs to attach checklist template to
          items:
            type: object
            properties:
              id:
                type: string
              remove:
                type: boolean
                description: Set to `true` to remove checklist from service
            required:
              - id
        remove_remaining_connected_services:
          type: boolean
          description: If set to true, any services tagged on the checklist that are not
            included in the given array will be removed. Set this to true if you
            want to do a replacement operation for the services
      description: Update a checklist templates attributes
    postV1ConversationsConversationIdCommentsCommentIdReactions:
      type: object
      properties:
        reaction:
          type: string
          description: CLDR short name of Unicode emojis
      required:
        - reaction
      description: ALPHA - Create a reaction on a comment
    patchV1ConversationsConversationIdCommentsCommentId:
      type: object
      properties:
        body:
          type: string
          description: Text body of comment
      description: ALPHA - Update a comment's attributes
    postV1ConversationsConversationIdComments:
      type: object
      properties:
        body:
          type: string
          description: Text body of comment
      required:
        - body
      description: ALPHA - Creates a comment for a project
    postV1SignalsEmailTargets:
      type: object
      properties:
        name:
          type: string
          description: The email target's name.
        slug:
          type: string
          description: The email address that will be listening to events.
        description:
          type: string
          description: A detailed description of the email target.
        target:
          type: object
          description: >
            The target that the email target will notify. This object must
            contain a `type`

            field that specifies the type of target and an `id` field that specifies the ID of

            the target. The `type` field must be one of "escalation_policy", "on_call_schedule",

            "team", "user", or "slack_channel".
          properties:
            type:
              type: string
              description: The type of target that the inbound email will notify when matched.
              enum:
                - Team
                - EntireTeam
                - EscalationPolicy
                - OnCallSchedule
                - User
                - SlackChannel
                - Webhook
            id:
              type: string
              description: The ID of the target that the inbound email will notify when
                matched.
          required:
            - type
            - id
        allowed_senders:
          type: array
          description: A list of email addresses that are allowed to send events to the
            target. Must be exact match.
          items:
            type: string
        rules:
          type: array
          description: A list of CEL expressions that should be evaluated and matched to
            determine if the target should be notified.
          items:
            type: string
        rule_matching_strategy:
          type: string
          description: Whether or not all rules must match, or if only one rule must match.
          enum:
            - all
            - any
        status_cel:
          type: string
          description: The CEL expression that defines the status of an incoming email
            that is sent to the target.
        level_cel:
          type: string
          description: The CEL expression that defines the level of an incoming email that
            is sent to the target.
      required:
        - name
      description: Create a Signals email target for a team.
    patchV1SignalsEmailTargetsId:
      type: object
      properties:
        name:
          type: string
          description: The email target's name.
        slug:
          type: string
          description: The email address that will be listening to events.
        description:
          type: string
          description: A detailed description of the email target.
        target:
          type: object
          description: >
            The target that the email target will notify. This object must
            contain a `type`

            field that specifies the type of target and an `id` field that specifies the ID of

            the target. The `type` field must be one of "escalation_policy", "on_call_schedule",

            "team", "user", or "slack_channel".
          properties:
            type:
              type: string
              description: The type of target that the inbound email will notify when matched.
              enum:
                - Team
                - EntireTeam
                - EscalationPolicy
                - OnCallSchedule
                - User
                - SlackChannel
                - Webhook
            id:
              type: string
              description: The ID of the target that the inbound email will notify when
                matched.
          required:
            - type
            - id
        allowed_senders:
          type: array
          description: A list of email addresses that are allowed to send events to the
            target. Must be exact match.
          items:
            type: string
        status_cel:
          type: string
          description: The CEL expression that defines the status of an incoming email
            that is sent to the target.
        level_cel:
          type: string
          description: The CEL expression that defines the level of an incoming email that
            is sent to the target.
        rules:
          type: array
          description: A list of CEL expressions that should be evaluated and matched to
            determine if the target should be notified.
          items:
            type: string
        rule_matching_strategy:
          type: string
          description: Whether or not all rules must match, or if only one rule must match.
          enum:
            - all
            - any
      description: Update a Signals email target by ID
    postV1SignalsWebhookTargets:
      x-speakeasy-entity: WebhookTarget
      type: object
      properties:
        name:
          type: string
          description: The webhook target's name.
        description:
          type: string
          description: An optional detailed description of the webhook target.
        url:
          type: string
          description: The URL that the webhook target will notify.
        signing_key:
          type: string
          description: |
            An optional secret we will provide in the `FH-Signature` header
            when sending a payload to the webhook target. This key will not be
            shown in any response once configured.
      required:
        - name
        - url
      description: Create a Signals webhook target.
    patchV1SignalsWebhookTargetsId:
      type: object
      properties:
        name:
          type: string
          description: The webhook target's name.
        description:
          type: string
          description: An optional detailed description of the webhook target.
        url:
          type: string
          description: The URL that the webhook target will notify.
        signing_key:
          type: string
          description: |
            An optional secret we will provide in the `FH-Signature` header
            when sending a payload to the webhook target. This key will not be
            shown in any response once configured.
      description: Update a Signals webhook target by ID
    Signals_API_IngestKeyEntity:
      type: object
      properties:
        url:
          type: string
      description: Signals_API_IngestKeyEntity model
    postV1SignalsDebugger:
      type: object
      properties:
        expression:
          type: string
          description: CEL expression
        signals:
          type: array
          description: List of signals to evaluate rule expression against
          items:
            type: object
            properties:
              summary:
                type: string
              body:
                type: string
              level:
                type: string
              images:
                type: array
                items:
                  type: object
                  properties:
                    src:
                      type: string
                    alt:
                      type: string
              links:
                type: array
                items:
                  type: object
                  properties:
                    href:
                      type: string
                    text:
                      type: string
      required:
        - expression
        - signals
    postV1Webhooks:
      type: object
      properties:
        url:
          type: string
      required:
        - url
      description: Create a new webhook
    Webhooks_Entities_WebhookEntity:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
        state:
          type: string
        created_by:
          $ref: "#/components/schemas/AuthorEntity"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        subscriptions:
          type: string
      description: Webhooks_Entities_WebhookEntity model
      x-speakeasy-entity: Webhook
    patchV1WebhooksWebhookId:
      type: object
      properties:
        url:
          type: string
        state:
          type: string
          enum:
            - active
            - inactive
      description: Update a specific webhook
    AI_Entities_PreferencesEntity:
      type: object
      properties:
        ai:
          type: boolean
        description:
          type: boolean
        followups:
          type: boolean
        impact:
          type: boolean
        retros:
          type: boolean
        similar_incidents:
          type: boolean
        summaries:
          type: boolean
        updates:
          type: boolean
      description: AI_Entities_PreferencesEntity model
