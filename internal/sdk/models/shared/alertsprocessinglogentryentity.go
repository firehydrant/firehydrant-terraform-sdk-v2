// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/internal/utils"
	"time"
)

// Context - An unstructured representation of this log entry's context.
type Context struct {
}

type Level string

const (
	LevelUnknown Level = "unknown"
	LevelDebug   Level = "debug"
	LevelInfo    Level = "info"
	LevelWarn    Level = "warn"
	LevelError   Level = "error"
	LevelFatal   Level = "fatal"
)

func (e Level) ToPointer() *Level {
	return &e
}
func (e *Level) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "unknown":
		fallthrough
	case "debug":
		fallthrough
	case "info":
		fallthrough
	case "warn":
		fallthrough
	case "error":
		fallthrough
	case "fatal":
		*e = Level(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Level: %v", v)
	}
}

type MessageType string

const (
	MessageTypeI18nKey MessageType = "i18n_key"
	MessageTypeCustom  MessageType = "custom"
)

func (e MessageType) ToPointer() *MessageType {
	return &e
}
func (e *MessageType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "i18n_key":
		fallthrough
	case "custom":
		*e = MessageType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MessageType: %v", v)
	}
}

type AlertsProcessingLogEntryEntity struct {
	ID *string `json:"id,omitempty"`
	// An unstructured representation of this log entry's context.
	Context     *Context     `json:"context,omitempty"`
	CreatedAt   *time.Time   `json:"created_at,omitempty"`
	Level       *Level       `json:"level,omitempty"`
	Message     *string      `json:"message,omitempty"`
	MessageType *MessageType `json:"message_type,omitempty"`
}

func (a AlertsProcessingLogEntryEntity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AlertsProcessingLogEntryEntity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AlertsProcessingLogEntryEntity) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *AlertsProcessingLogEntryEntity) GetContext() *Context {
	if o == nil {
		return nil
	}
	return o.Context
}

func (o *AlertsProcessingLogEntryEntity) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *AlertsProcessingLogEntryEntity) GetLevel() *Level {
	if o == nil {
		return nil
	}
	return o.Level
}

func (o *AlertsProcessingLogEntryEntity) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *AlertsProcessingLogEntryEntity) GetMessageType() *MessageType {
	if o == nil {
		return nil
	}
	return o.MessageType
}
