// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type Underscore string

const (
	UnderscoreTrue Underscore = "true"
)

func (e Underscore) ToPointer() *Underscore {
	return &e
}
func (e *Underscore) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "true":
		*e = Underscore(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Underscore: %v", v)
	}
}

// PostV1PostMortemsReportsReportIDPublish - Marks an incident retrospective as published and emails all of the participants in the report the summary
type PostV1PostMortemsReportsReportIDPublish struct {
	Underscore *Underscore `json:"_,omitempty"`
	// An array of user IDs with whom to share the report
	UserIds []string `json:"user_ids,omitempty"`
	// An array of team IDs with whom to share the report
	TeamIds []string `json:"team_ids,omitempty"`
}

func (o *PostV1PostMortemsReportsReportIDPublish) GetUnderscore() *Underscore {
	if o == nil {
		return nil
	}
	return o.Underscore
}

func (o *PostV1PostMortemsReportsReportIDPublish) GetUserIds() []string {
	if o == nil {
		return nil
	}
	return o.UserIds
}

func (o *PostV1PostMortemsReportsReportIDPublish) GetTeamIds() []string {
	if o == nil {
		return nil
	}
	return o.TeamIds
}
