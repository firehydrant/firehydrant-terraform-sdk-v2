// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/internal/utils"
	"time"
)

type PatchV1ChangesEventsChangeEventIDType string

const (
	PatchV1ChangesEventsChangeEventIDTypeLink PatchV1ChangesEventsChangeEventIDType = "link"
)

func (e PatchV1ChangesEventsChangeEventIDType) ToPointer() *PatchV1ChangesEventsChangeEventIDType {
	return &e
}
func (e *PatchV1ChangesEventsChangeEventIDType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "link":
		*e = PatchV1ChangesEventsChangeEventIDType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchV1ChangesEventsChangeEventIDType: %v", v)
	}
}

type PatchV1ChangesEventsChangeEventIDAttachments struct {
	Type PatchV1ChangesEventsChangeEventIDType `json:"type"`
}

func (o *PatchV1ChangesEventsChangeEventIDAttachments) GetType() PatchV1ChangesEventsChangeEventIDType {
	if o == nil {
		return PatchV1ChangesEventsChangeEventIDType("")
	}
	return o.Type
}

// PatchV1ChangesEventsChangeEventID - Update a change event
type PatchV1ChangesEventsChangeEventID struct {
	Summary     *string           `json:"summary,omitempty"`
	Description *string           `json:"description,omitempty"`
	Labels      map[string]string `json:"labels,omitempty"`
	StartsAt    *time.Time        `json:"starts_at,omitempty"`
	EndsAt      *time.Time        `json:"ends_at,omitempty"`
	// An array of environment IDs (setting this will overwrite the current environments)
	Environments []string `json:"environments,omitempty"`
	// An array of service IDs (setting this will overwrite the current services)
	Services []string `json:"services,omitempty"`
	// JSON objects representing attachments, see attachments documentation for the schema
	Attachments []PatchV1ChangesEventsChangeEventIDAttachments `json:"attachments,omitempty"`
}

func (p PatchV1ChangesEventsChangeEventID) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PatchV1ChangesEventsChangeEventID) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PatchV1ChangesEventsChangeEventID) GetSummary() *string {
	if o == nil {
		return nil
	}
	return o.Summary
}

func (o *PatchV1ChangesEventsChangeEventID) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *PatchV1ChangesEventsChangeEventID) GetLabels() map[string]string {
	if o == nil {
		return nil
	}
	return o.Labels
}

func (o *PatchV1ChangesEventsChangeEventID) GetStartsAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartsAt
}

func (o *PatchV1ChangesEventsChangeEventID) GetEndsAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndsAt
}

func (o *PatchV1ChangesEventsChangeEventID) GetEnvironments() []string {
	if o == nil {
		return nil
	}
	return o.Environments
}

func (o *PatchV1ChangesEventsChangeEventID) GetServices() []string {
	if o == nil {
		return nil
	}
	return o.Services
}

func (o *PatchV1ChangesEventsChangeEventID) GetAttachments() []PatchV1ChangesEventsChangeEventIDAttachments {
	if o == nil {
		return nil
	}
	return o.Attachments
}
