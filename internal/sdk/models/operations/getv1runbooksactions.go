// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy/terraform-provider-firehydrant-terraform-sdk/internal/sdk/models/shared"
	"net/http"
)

type GetV1RunbooksActionsRequest struct {
	Page    *int `queryParam:"style=form,explode=true,name=page"`
	PerPage *int `queryParam:"style=form,explode=true,name=per_page"`
	// List actions supporting this specific Runbook type
	Type *string `queryParam:"style=form,explode=true,name=type"`
	// Boolean to determine whether to return a slimified version of the action object's integration
	Lite *bool `queryParam:"style=form,explode=true,name=lite"`
}

func (o *GetV1RunbooksActionsRequest) GetPage() *int {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *GetV1RunbooksActionsRequest) GetPerPage() *int {
	if o == nil {
		return nil
	}
	return o.PerPage
}

func (o *GetV1RunbooksActionsRequest) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *GetV1RunbooksActionsRequest) GetLite() *bool {
	if o == nil {
		return nil
	}
	return o.Lite
}

type GetV1RunbooksActionsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// List all Runbook actions available through your connected integrations
	RunbooksActionsEntityPaginated *shared.RunbooksActionsEntityPaginated
}

func (o *GetV1RunbooksActionsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetV1RunbooksActionsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetV1RunbooksActionsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetV1RunbooksActionsResponse) GetRunbooksActionsEntityPaginated() *shared.RunbooksActionsEntityPaginated {
	if o == nil {
		return nil
	}
	return o.RunbooksActionsEntityPaginated
}
