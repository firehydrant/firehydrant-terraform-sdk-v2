// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"net/http"
)

type PathParamResourceType string

const (
	PathParamResourceTypeChangeEvents          PathParamResourceType = "change_events"
	PathParamResourceTypeIncidents             PathParamResourceType = "incidents"
	PathParamResourceTypeServices              PathParamResourceType = "services"
	PathParamResourceTypeScheduledMaintenances PathParamResourceType = "scheduled_maintenances"
	PathParamResourceTypeTicketTasks           PathParamResourceType = "ticket_tasks"
	PathParamResourceTypeTicketFollowUps       PathParamResourceType = "ticket_follow_ups"
	PathParamResourceTypeAnalytics             PathParamResourceType = "analytics"
	PathParamResourceTypeImpactAnalytics       PathParamResourceType = "impact_analytics"
	PathParamResourceTypeAlerts                PathParamResourceType = "alerts"
	PathParamResourceTypeIncidentEvents        PathParamResourceType = "incident_events"
)

func (e PathParamResourceType) ToPointer() *PathParamResourceType {
	return &e
}
func (e *PathParamResourceType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "change_events":
		fallthrough
	case "incidents":
		fallthrough
	case "services":
		fallthrough
	case "scheduled_maintenances":
		fallthrough
	case "ticket_tasks":
		fallthrough
	case "ticket_follow_ups":
		fallthrough
	case "analytics":
		fallthrough
	case "impact_analytics":
		fallthrough
	case "alerts":
		fallthrough
	case "incident_events":
		*e = PathParamResourceType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PathParamResourceType: %v", v)
	}
}

type PatchV1SavedSearchesResourceTypeSavedSearchIDRequest struct {
	ResourceType                                  PathParamResourceType                                `pathParam:"style=simple,explode=false,name=resource_type"`
	SavedSearchID                                 string                                               `pathParam:"style=simple,explode=false,name=saved_search_id"`
	PatchV1SavedSearchesResourceTypeSavedSearchID shared.PatchV1SavedSearchesResourceTypeSavedSearchID `request:"mediaType=application/json"`
}

func (o *PatchV1SavedSearchesResourceTypeSavedSearchIDRequest) GetResourceType() PathParamResourceType {
	if o == nil {
		return PathParamResourceType("")
	}
	return o.ResourceType
}

func (o *PatchV1SavedSearchesResourceTypeSavedSearchIDRequest) GetSavedSearchID() string {
	if o == nil {
		return ""
	}
	return o.SavedSearchID
}

func (o *PatchV1SavedSearchesResourceTypeSavedSearchIDRequest) GetPatchV1SavedSearchesResourceTypeSavedSearchID() shared.PatchV1SavedSearchesResourceTypeSavedSearchID {
	if o == nil {
		return shared.PatchV1SavedSearchesResourceTypeSavedSearchID{}
	}
	return o.PatchV1SavedSearchesResourceTypeSavedSearchID
}

type PatchV1SavedSearchesResourceTypeSavedSearchIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Update a specific saved search
	SavedSearchEntity *shared.SavedSearchEntity
}

func (o *PatchV1SavedSearchesResourceTypeSavedSearchIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PatchV1SavedSearchesResourceTypeSavedSearchIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PatchV1SavedSearchesResourceTypeSavedSearchIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PatchV1SavedSearchesResourceTypeSavedSearchIDResponse) GetSavedSearchEntity() *shared.SavedSearchEntity {
	if o == nil {
		return nil
	}
	return o.SavedSearchEntity
}
