// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy/terraform-provider-firehydrant-terraform-sdk/internal/sdk/models/shared"
	"net/http"
)

type PatchV1ConversationsConversationIDCommentsCommentIDRequest struct {
	CommentID                                           string                                                     `pathParam:"style=simple,explode=false,name=comment_id"`
	ConversationID                                      string                                                     `pathParam:"style=simple,explode=false,name=conversation_id"`
	PatchV1ConversationsConversationIDCommentsCommentID shared.PatchV1ConversationsConversationIDCommentsCommentID `request:"mediaType=application/json"`
}

func (o *PatchV1ConversationsConversationIDCommentsCommentIDRequest) GetCommentID() string {
	if o == nil {
		return ""
	}
	return o.CommentID
}

func (o *PatchV1ConversationsConversationIDCommentsCommentIDRequest) GetConversationID() string {
	if o == nil {
		return ""
	}
	return o.ConversationID
}

func (o *PatchV1ConversationsConversationIDCommentsCommentIDRequest) GetPatchV1ConversationsConversationIDCommentsCommentID() shared.PatchV1ConversationsConversationIDCommentsCommentID {
	if o == nil {
		return shared.PatchV1ConversationsConversationIDCommentsCommentID{}
	}
	return o.PatchV1ConversationsConversationIDCommentsCommentID
}

type PatchV1ConversationsConversationIDCommentsCommentIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *PatchV1ConversationsConversationIDCommentsCommentIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PatchV1ConversationsConversationIDCommentsCommentIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PatchV1ConversationsConversationIDCommentsCommentIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
