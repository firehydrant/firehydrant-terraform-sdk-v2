// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"net/http"
)

type GetV1IncidentsIncidentIDImpactTypePathParamType string

const (
	GetV1IncidentsIncidentIDImpactTypePathParamTypeEnvironments    GetV1IncidentsIncidentIDImpactTypePathParamType = "environments"
	GetV1IncidentsIncidentIDImpactTypePathParamTypeFunctionalities GetV1IncidentsIncidentIDImpactTypePathParamType = "functionalities"
	GetV1IncidentsIncidentIDImpactTypePathParamTypeServices        GetV1IncidentsIncidentIDImpactTypePathParamType = "services"
	GetV1IncidentsIncidentIDImpactTypePathParamTypeCustomers       GetV1IncidentsIncidentIDImpactTypePathParamType = "customers"
)

func (e GetV1IncidentsIncidentIDImpactTypePathParamType) ToPointer() *GetV1IncidentsIncidentIDImpactTypePathParamType {
	return &e
}
func (e *GetV1IncidentsIncidentIDImpactTypePathParamType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environments":
		fallthrough
	case "functionalities":
		fallthrough
	case "services":
		fallthrough
	case "customers":
		*e = GetV1IncidentsIncidentIDImpactTypePathParamType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetV1IncidentsIncidentIDImpactTypePathParamType: %v", v)
	}
}

type GetV1IncidentsIncidentIDImpactTypeRequest struct {
	IncidentID string                                          `pathParam:"style=simple,explode=false,name=incident_id"`
	Type       GetV1IncidentsIncidentIDImpactTypePathParamType `pathParam:"style=simple,explode=false,name=type"`
}

func (o *GetV1IncidentsIncidentIDImpactTypeRequest) GetIncidentID() string {
	if o == nil {
		return ""
	}
	return o.IncidentID
}

func (o *GetV1IncidentsIncidentIDImpactTypeRequest) GetType() GetV1IncidentsIncidentIDImpactTypePathParamType {
	if o == nil {
		return GetV1IncidentsIncidentIDImpactTypePathParamType("")
	}
	return o.Type
}

type GetV1IncidentsIncidentIDImpactTypeResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// List impacted infrastructure on an incident by specifying type
	IncidentImpactEntityPaginated *shared.IncidentImpactEntityPaginated
}

func (o *GetV1IncidentsIncidentIDImpactTypeResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetV1IncidentsIncidentIDImpactTypeResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetV1IncidentsIncidentIDImpactTypeResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetV1IncidentsIncidentIDImpactTypeResponse) GetIncidentImpactEntityPaginated() *shared.IncidentImpactEntityPaginated {
	if o == nil {
		return nil
	}
	return o.IncidentImpactEntityPaginated
}
