// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/firehydrant/terraform-provider-firehydrant/internal/sdk/models/shared"
	"net/http"
)

type PostV1IncidentsIncidentIDRelatedChangeEventsRequest struct {
	IncidentID                                   string                                              `pathParam:"style=simple,explode=false,name=incident_id"`
	PostV1IncidentsIncidentIDRelatedChangeEvents shared.PostV1IncidentsIncidentIDRelatedChangeEvents `request:"mediaType=application/json"`
}

func (o *PostV1IncidentsIncidentIDRelatedChangeEventsRequest) GetIncidentID() string {
	if o == nil {
		return ""
	}
	return o.IncidentID
}

func (o *PostV1IncidentsIncidentIDRelatedChangeEventsRequest) GetPostV1IncidentsIncidentIDRelatedChangeEvents() shared.PostV1IncidentsIncidentIDRelatedChangeEvents {
	if o == nil {
		return shared.PostV1IncidentsIncidentIDRelatedChangeEvents{}
	}
	return o.PostV1IncidentsIncidentIDRelatedChangeEvents
}

type PostV1IncidentsIncidentIDRelatedChangeEventsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Add a related change to an incident. Changes added to an incident can be causes, fixes, or suspects. To remove a change from an incident, the type field should be set to dismissed.
	IncidentsRelatedChangeEventEntity *shared.IncidentsRelatedChangeEventEntity
	// Bad Request
	ErrorEntity *shared.ErrorEntity
}

func (o *PostV1IncidentsIncidentIDRelatedChangeEventsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PostV1IncidentsIncidentIDRelatedChangeEventsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PostV1IncidentsIncidentIDRelatedChangeEventsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PostV1IncidentsIncidentIDRelatedChangeEventsResponse) GetIncidentsRelatedChangeEventEntity() *shared.IncidentsRelatedChangeEventEntity {
	if o == nil {
		return nil
	}
	return o.IncidentsRelatedChangeEventEntity
}

func (o *PostV1IncidentsIncidentIDRelatedChangeEventsResponse) GetErrorEntity() *shared.ErrorEntity {
	if o == nil {
		return nil
	}
	return o.ErrorEntity
}
