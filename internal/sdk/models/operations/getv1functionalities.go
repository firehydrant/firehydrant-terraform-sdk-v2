// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy/terraform-provider-firehydrant-terraform-sdk/internal/sdk/models/shared"
	"net/http"
)

type GetV1FunctionalitiesRequest struct {
	// A query to search functionalities by their name or description
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// A query to search functionalities by their name
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// A query to search services by if they are impacted with active incidents
	Impacted *string `queryParam:"style=form,explode=true,name=impacted"`
	// A comma separated list of label key / values in the format of 'key=value,key2=value2'. To filter change events that have a key (with no specific value), omit the value
	Labels *string `queryParam:"style=form,explode=true,name=labels"`
	// A query to search functionalities by their owning team ID
	Owner *string `queryParam:"style=form,explode=true,name=owner"`
	// Boolean to determine whether to return a slimified version of the functionalities object
	Lite    *bool `queryParam:"style=form,explode=true,name=lite"`
	Page    *int  `queryParam:"style=form,explode=true,name=page"`
	PerPage *int  `queryParam:"style=form,explode=true,name=per_page"`
}

func (o *GetV1FunctionalitiesRequest) GetQuery() *string {
	if o == nil {
		return nil
	}
	return o.Query
}

func (o *GetV1FunctionalitiesRequest) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetV1FunctionalitiesRequest) GetImpacted() *string {
	if o == nil {
		return nil
	}
	return o.Impacted
}

func (o *GetV1FunctionalitiesRequest) GetLabels() *string {
	if o == nil {
		return nil
	}
	return o.Labels
}

func (o *GetV1FunctionalitiesRequest) GetOwner() *string {
	if o == nil {
		return nil
	}
	return o.Owner
}

func (o *GetV1FunctionalitiesRequest) GetLite() *bool {
	if o == nil {
		return nil
	}
	return o.Lite
}

func (o *GetV1FunctionalitiesRequest) GetPage() *int {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *GetV1FunctionalitiesRequest) GetPerPage() *int {
	if o == nil {
		return nil
	}
	return o.PerPage
}

type GetV1FunctionalitiesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// List all of the functionalities that have been added to the organiation
	FunctionalityEntityPaginated *shared.FunctionalityEntityPaginated
}

func (o *GetV1FunctionalitiesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetV1FunctionalitiesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetV1FunctionalitiesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetV1FunctionalitiesResponse) GetFunctionalityEntityPaginated() *shared.FunctionalityEntityPaginated {
	if o == nil {
		return nil
	}
	return o.FunctionalityEntityPaginated
}
