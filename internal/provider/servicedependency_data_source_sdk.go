// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/speakeasy/terraform-provider-firehydrant-terraform-sdk/internal/provider/types"
	"github.com/speakeasy/terraform-provider-firehydrant-terraform-sdk/internal/sdk/models/shared"
	"time"
)

func (r *ServiceDependencyDataSourceModel) RefreshFromSharedServiceDependencyEntity(resp *shared.ServiceDependencyEntity) {
	if resp != nil {
		if resp.ConnectedService == nil {
			r.ConnectedService = nil
		} else {
			r.ConnectedService = &tfTypes.ServiceEntity{}
			r.ConnectedService.ActiveIncidents = []types.String{}
			for _, v := range resp.ConnectedService.ActiveIncidents {
				r.ConnectedService.ActiveIncidents = append(r.ConnectedService.ActiveIncidents, types.StringValue(v))
			}
			r.ConnectedService.AlertOnAdd = types.BoolPointerValue(resp.ConnectedService.AlertOnAdd)
			r.ConnectedService.AllowedParams = []types.String{}
			for _, v := range resp.ConnectedService.AllowedParams {
				r.ConnectedService.AllowedParams = append(r.ConnectedService.AllowedParams, types.StringValue(v))
			}
			r.ConnectedService.AutoAddRespondingTeam = types.BoolPointerValue(resp.ConnectedService.AutoAddRespondingTeam)
			r.ConnectedService.Checklists = []tfTypes.Checklists{}
			if len(r.ConnectedService.Checklists) > len(resp.ConnectedService.Checklists) {
				r.ConnectedService.Checklists = r.ConnectedService.Checklists[:len(resp.ConnectedService.Checklists)]
			}
			for checklistsCount, checklistsItem := range resp.ConnectedService.Checklists {
				var checklists1 tfTypes.Checklists
				checklists1.Checks = []tfTypes.ChecklistCheckEntity{}
				for checksCount, checksItem := range checklistsItem.Checks {
					var checks1 tfTypes.ChecklistCheckEntity
					checks1.Description = types.StringPointerValue(checksItem.Description)
					checks1.ID = types.StringPointerValue(checksItem.ID)
					checks1.Name = types.StringPointerValue(checksItem.Name)
					checks1.Status = types.BoolPointerValue(checksItem.Status)
					if checksCount+1 > len(checklists1.Checks) {
						checklists1.Checks = append(checklists1.Checks, checks1)
					} else {
						checklists1.Checks[checksCount].Description = checks1.Description
						checklists1.Checks[checksCount].ID = checks1.ID
						checklists1.Checks[checksCount].Name = checks1.Name
						checklists1.Checks[checksCount].Status = checks1.Status
					}
				}
				checklists1.CreatedAt = types.StringPointerValue(checklistsItem.CreatedAt)
				checklists1.Description = types.StringPointerValue(checklistsItem.Description)
				checklists1.ID = types.StringPointerValue(checklistsItem.ID)
				checklists1.Name = types.StringPointerValue(checklistsItem.Name)
				if checklistsItem.Owner == nil {
					checklists1.Owner = nil
				} else {
					checklists1.Owner = &tfTypes.TeamEntity{}
					if checklistsItem.Owner.CreatedAt != nil {
						checklists1.Owner.CreatedAt = types.StringValue(checklistsItem.Owner.CreatedAt.Format(time.RFC3339Nano))
					} else {
						checklists1.Owner.CreatedAt = types.StringNull()
					}
					if checklistsItem.Owner.CreatedBy == nil {
						checklists1.Owner.CreatedBy = nil
					} else {
						checklists1.Owner.CreatedBy = &tfTypes.AuthorEntity{}
						checklists1.Owner.CreatedBy.Email = types.StringPointerValue(checklistsItem.Owner.CreatedBy.Email)
						checklists1.Owner.CreatedBy.ID = types.StringPointerValue(checklistsItem.Owner.CreatedBy.ID)
						checklists1.Owner.CreatedBy.Name = types.StringPointerValue(checklistsItem.Owner.CreatedBy.Name)
						checklists1.Owner.CreatedBy.Source = types.StringPointerValue(checklistsItem.Owner.CreatedBy.Source)
					}
					checklists1.Owner.Description = types.StringPointerValue(checklistsItem.Owner.Description)
					checklists1.Owner.Functionalities = []tfTypes.FunctionalityEntity{}
					for functionalitiesCount, functionalitiesItem := range checklistsItem.Owner.Functionalities {
						var functionalities1 tfTypes.FunctionalityEntity
						functionalities1.ActiveIncidents = []types.String{}
						for _, v := range functionalitiesItem.ActiveIncidents {
							functionalities1.ActiveIncidents = append(functionalities1.ActiveIncidents, types.StringValue(v))
						}
						functionalities1.AlertOnAdd = types.BoolPointerValue(functionalitiesItem.AlertOnAdd)
						functionalities1.AutoAddRespondingTeam = types.BoolPointerValue(functionalitiesItem.AutoAddRespondingTeam)
						if functionalitiesItem.CreatedAt != nil {
							functionalities1.CreatedAt = types.StringValue(functionalitiesItem.CreatedAt.Format(time.RFC3339Nano))
						} else {
							functionalities1.CreatedAt = types.StringNull()
						}
						functionalities1.Description = types.StringPointerValue(functionalitiesItem.Description)
						functionalities1.ExternalResources = []tfTypes.ExternalResourceEntity{}
						for externalResourcesCount, externalResourcesItem := range functionalitiesItem.ExternalResources {
							var externalResources1 tfTypes.ExternalResourceEntity
							externalResources1.ConnectionID = types.StringPointerValue(externalResourcesItem.ConnectionID)
							externalResources1.ConnectionName = types.StringPointerValue(externalResourcesItem.ConnectionName)
							externalResources1.ConnectionType = types.StringPointerValue(externalResourcesItem.ConnectionType)
							if externalResourcesItem.CreatedAt != nil {
								externalResources1.CreatedAt = types.StringValue(externalResourcesItem.CreatedAt.Format(time.RFC3339Nano))
							} else {
								externalResources1.CreatedAt = types.StringNull()
							}
							externalResources1.Name = types.StringPointerValue(externalResourcesItem.Name)
							externalResources1.RemoteID = types.StringPointerValue(externalResourcesItem.RemoteID)
							externalResources1.RemoteURL = types.StringPointerValue(externalResourcesItem.RemoteURL)
							if externalResourcesItem.UpdatedAt != nil {
								externalResources1.UpdatedAt = types.StringValue(externalResourcesItem.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								externalResources1.UpdatedAt = types.StringNull()
							}
							if externalResourcesCount+1 > len(functionalities1.ExternalResources) {
								functionalities1.ExternalResources = append(functionalities1.ExternalResources, externalResources1)
							} else {
								functionalities1.ExternalResources[externalResourcesCount].ConnectionID = externalResources1.ConnectionID
								functionalities1.ExternalResources[externalResourcesCount].ConnectionName = externalResources1.ConnectionName
								functionalities1.ExternalResources[externalResourcesCount].ConnectionType = externalResources1.ConnectionType
								functionalities1.ExternalResources[externalResourcesCount].CreatedAt = externalResources1.CreatedAt
								functionalities1.ExternalResources[externalResourcesCount].Name = externalResources1.Name
								functionalities1.ExternalResources[externalResourcesCount].RemoteID = externalResources1.RemoteID
								functionalities1.ExternalResources[externalResourcesCount].RemoteURL = externalResources1.RemoteURL
								functionalities1.ExternalResources[externalResourcesCount].UpdatedAt = externalResources1.UpdatedAt
							}
						}
						functionalities1.ID = types.StringPointerValue(functionalitiesItem.ID)
						if len(functionalitiesItem.Labels) > 0 {
							functionalities1.Labels = make(map[string]types.String)
							for key, value := range functionalitiesItem.Labels {
								functionalities1.Labels[key] = types.StringValue(value)
							}
						}
						functionalities1.Links = []tfTypes.LinksEntity{}
						for linksCount, linksItem := range functionalitiesItem.Links {
							var links1 tfTypes.LinksEntity
							links1.HrefURL = types.StringPointerValue(linksItem.HrefURL)
							links1.IconURL = types.StringPointerValue(linksItem.IconURL)
							links1.ID = types.StringPointerValue(linksItem.ID)
							links1.Name = types.StringPointerValue(linksItem.Name)
							if linksCount+1 > len(functionalities1.Links) {
								functionalities1.Links = append(functionalities1.Links, links1)
							} else {
								functionalities1.Links[linksCount].HrefURL = links1.HrefURL
								functionalities1.Links[linksCount].IconURL = links1.IconURL
								functionalities1.Links[linksCount].ID = links1.ID
								functionalities1.Links[linksCount].Name = links1.Name
							}
						}
						functionalities1.Name = types.StringPointerValue(functionalitiesItem.Name)
						if functionalitiesItem.Owner == nil {
							functionalities1.Owner = nil
						} else {
							functionalities1.Owner = &tfTypes.TeamEntity1{}
						}
						functionalities1.Slug = types.StringPointerValue(functionalitiesItem.Slug)
						if functionalitiesItem.UpdatedAt != nil {
							functionalities1.UpdatedAt = types.StringValue(functionalitiesItem.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							functionalities1.UpdatedAt = types.StringNull()
						}
						if functionalitiesItem.UpdatedBy == nil {
							functionalities1.UpdatedBy = nil
						} else {
							functionalities1.UpdatedBy = &tfTypes.AuthorEntity{}
							functionalities1.UpdatedBy.Email = types.StringPointerValue(functionalitiesItem.UpdatedBy.Email)
							functionalities1.UpdatedBy.ID = types.StringPointerValue(functionalitiesItem.UpdatedBy.ID)
							functionalities1.UpdatedBy.Name = types.StringPointerValue(functionalitiesItem.UpdatedBy.Name)
							functionalities1.UpdatedBy.Source = types.StringPointerValue(functionalitiesItem.UpdatedBy.Source)
						}
						if functionalitiesCount+1 > len(checklists1.Owner.Functionalities) {
							checklists1.Owner.Functionalities = append(checklists1.Owner.Functionalities, functionalities1)
						} else {
							checklists1.Owner.Functionalities[functionalitiesCount].ActiveIncidents = functionalities1.ActiveIncidents
							checklists1.Owner.Functionalities[functionalitiesCount].AlertOnAdd = functionalities1.AlertOnAdd
							checklists1.Owner.Functionalities[functionalitiesCount].AutoAddRespondingTeam = functionalities1.AutoAddRespondingTeam
							checklists1.Owner.Functionalities[functionalitiesCount].CreatedAt = functionalities1.CreatedAt
							checklists1.Owner.Functionalities[functionalitiesCount].Description = functionalities1.Description
							checklists1.Owner.Functionalities[functionalitiesCount].ExternalResources = functionalities1.ExternalResources
							checklists1.Owner.Functionalities[functionalitiesCount].ID = functionalities1.ID
							checklists1.Owner.Functionalities[functionalitiesCount].Labels = functionalities1.Labels
							checklists1.Owner.Functionalities[functionalitiesCount].Links = functionalities1.Links
							checklists1.Owner.Functionalities[functionalitiesCount].Name = functionalities1.Name
							checklists1.Owner.Functionalities[functionalitiesCount].Owner = functionalities1.Owner
							checklists1.Owner.Functionalities[functionalitiesCount].Slug = functionalities1.Slug
							checklists1.Owner.Functionalities[functionalitiesCount].UpdatedAt = functionalities1.UpdatedAt
							checklists1.Owner.Functionalities[functionalitiesCount].UpdatedBy = functionalities1.UpdatedBy
						}
					}
					checklists1.Owner.ID = types.StringPointerValue(checklistsItem.Owner.ID)
					checklists1.Owner.Memberships = []tfTypes.MembershipEntity{}
					for membershipsCount, membershipsItem := range checklistsItem.Owner.Memberships {
						var memberships1 tfTypes.MembershipEntity
						if membershipsItem.DefaultIncidentRole == nil {
							memberships1.DefaultIncidentRole = nil
						} else {
							memberships1.DefaultIncidentRole = &tfTypes.IncidentRoleEntity{}
							if membershipsItem.DefaultIncidentRole.CreatedAt != nil {
								memberships1.DefaultIncidentRole.CreatedAt = types.StringValue(membershipsItem.DefaultIncidentRole.CreatedAt.Format(time.RFC3339Nano))
							} else {
								memberships1.DefaultIncidentRole.CreatedAt = types.StringNull()
							}
							memberships1.DefaultIncidentRole.Description = types.StringPointerValue(membershipsItem.DefaultIncidentRole.Description)
							if membershipsItem.DefaultIncidentRole.DiscardedAt != nil {
								memberships1.DefaultIncidentRole.DiscardedAt = types.StringValue(membershipsItem.DefaultIncidentRole.DiscardedAt.Format(time.RFC3339Nano))
							} else {
								memberships1.DefaultIncidentRole.DiscardedAt = types.StringNull()
							}
							memberships1.DefaultIncidentRole.ID = types.StringPointerValue(membershipsItem.DefaultIncidentRole.ID)
							memberships1.DefaultIncidentRole.Name = types.StringPointerValue(membershipsItem.DefaultIncidentRole.Name)
							memberships1.DefaultIncidentRole.Summary = types.StringPointerValue(membershipsItem.DefaultIncidentRole.Summary)
							if membershipsItem.DefaultIncidentRole.UpdatedAt != nil {
								memberships1.DefaultIncidentRole.UpdatedAt = types.StringValue(membershipsItem.DefaultIncidentRole.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								memberships1.DefaultIncidentRole.UpdatedAt = types.StringNull()
							}
						}
						if membershipsItem.Schedule == nil {
							memberships1.Schedule = nil
						} else {
							memberships1.Schedule = &tfTypes.ScheduleEntity{}
							memberships1.Schedule.Discarded = types.BoolPointerValue(membershipsItem.Schedule.Discarded)
							memberships1.Schedule.ID = types.StringPointerValue(membershipsItem.Schedule.ID)
							memberships1.Schedule.Integration = types.StringPointerValue(membershipsItem.Schedule.Integration)
							memberships1.Schedule.Name = types.StringPointerValue(membershipsItem.Schedule.Name)
						}
						if membershipsItem.User == nil {
							memberships1.User = nil
						} else {
							memberships1.User = &tfTypes.UserEntity{}
							if membershipsItem.User.CreatedAt != nil {
								memberships1.User.CreatedAt = types.StringValue(membershipsItem.User.CreatedAt.Format(time.RFC3339Nano))
							} else {
								memberships1.User.CreatedAt = types.StringNull()
							}
							memberships1.User.Email = types.StringPointerValue(membershipsItem.User.Email)
							memberships1.User.ID = types.StringPointerValue(membershipsItem.User.ID)
							memberships1.User.Name = types.StringPointerValue(membershipsItem.User.Name)
							memberships1.User.SignalsEnabledNotificationTypes = []types.String{}
							for _, v := range membershipsItem.User.SignalsEnabledNotificationTypes {
								memberships1.User.SignalsEnabledNotificationTypes = append(memberships1.User.SignalsEnabledNotificationTypes, types.StringValue(v))
							}
							memberships1.User.SlackLinked = types.BoolPointerValue(membershipsItem.User.SlackLinked)
							memberships1.User.SlackUserID = types.StringPointerValue(membershipsItem.User.SlackUserID)
							if membershipsItem.User.UpdatedAt != nil {
								memberships1.User.UpdatedAt = types.StringValue(membershipsItem.User.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								memberships1.User.UpdatedAt = types.StringNull()
							}
						}
						if membershipsCount+1 > len(checklists1.Owner.Memberships) {
							checklists1.Owner.Memberships = append(checklists1.Owner.Memberships, memberships1)
						} else {
							checklists1.Owner.Memberships[membershipsCount].DefaultIncidentRole = memberships1.DefaultIncidentRole
							checklists1.Owner.Memberships[membershipsCount].Schedule = memberships1.Schedule
							checklists1.Owner.Memberships[membershipsCount].User = memberships1.User
						}
					}
					if checklistsItem.Owner.MsTeamsChannel == nil {
						checklists1.Owner.MsTeamsChannel = nil
					} else {
						checklists1.Owner.MsTeamsChannel = &tfTypes.IntegrationsMicrosoftTeamsV2ChannelEntity{}
						checklists1.Owner.MsTeamsChannel.ChannelID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.ChannelID)
						checklists1.Owner.MsTeamsChannel.ChannelName = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.ChannelName)
						checklists1.Owner.MsTeamsChannel.ChannelURL = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.ChannelURL)
						checklists1.Owner.MsTeamsChannel.ID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.ID)
						checklists1.Owner.MsTeamsChannel.MsTeamID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.MsTeamID)
						checklists1.Owner.MsTeamsChannel.Status = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Status)
						checklists1.Owner.MsTeamsChannel.TeamName = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.TeamName)
					}
					checklists1.Owner.Name = types.StringPointerValue(checklistsItem.Owner.Name)
					checklists1.Owner.OwnedFunctionalities = []tfTypes.FunctionalityEntity{}
					for ownedFunctionalitiesCount, ownedFunctionalitiesItem := range checklistsItem.Owner.OwnedFunctionalities {
						var ownedFunctionalities1 tfTypes.FunctionalityEntity
						ownedFunctionalities1.ActiveIncidents = []types.String{}
						for _, v := range ownedFunctionalitiesItem.ActiveIncidents {
							ownedFunctionalities1.ActiveIncidents = append(ownedFunctionalities1.ActiveIncidents, types.StringValue(v))
						}
						ownedFunctionalities1.AlertOnAdd = types.BoolPointerValue(ownedFunctionalitiesItem.AlertOnAdd)
						ownedFunctionalities1.AutoAddRespondingTeam = types.BoolPointerValue(ownedFunctionalitiesItem.AutoAddRespondingTeam)
						if ownedFunctionalitiesItem.CreatedAt != nil {
							ownedFunctionalities1.CreatedAt = types.StringValue(ownedFunctionalitiesItem.CreatedAt.Format(time.RFC3339Nano))
						} else {
							ownedFunctionalities1.CreatedAt = types.StringNull()
						}
						ownedFunctionalities1.Description = types.StringPointerValue(ownedFunctionalitiesItem.Description)
						ownedFunctionalities1.ExternalResources = []tfTypes.ExternalResourceEntity{}
						for externalResourcesCount1, externalResourcesItem1 := range ownedFunctionalitiesItem.ExternalResources {
							var externalResources3 tfTypes.ExternalResourceEntity
							externalResources3.ConnectionID = types.StringPointerValue(externalResourcesItem1.ConnectionID)
							externalResources3.ConnectionName = types.StringPointerValue(externalResourcesItem1.ConnectionName)
							externalResources3.ConnectionType = types.StringPointerValue(externalResourcesItem1.ConnectionType)
							if externalResourcesItem1.CreatedAt != nil {
								externalResources3.CreatedAt = types.StringValue(externalResourcesItem1.CreatedAt.Format(time.RFC3339Nano))
							} else {
								externalResources3.CreatedAt = types.StringNull()
							}
							externalResources3.Name = types.StringPointerValue(externalResourcesItem1.Name)
							externalResources3.RemoteID = types.StringPointerValue(externalResourcesItem1.RemoteID)
							externalResources3.RemoteURL = types.StringPointerValue(externalResourcesItem1.RemoteURL)
							if externalResourcesItem1.UpdatedAt != nil {
								externalResources3.UpdatedAt = types.StringValue(externalResourcesItem1.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								externalResources3.UpdatedAt = types.StringNull()
							}
							if externalResourcesCount1+1 > len(ownedFunctionalities1.ExternalResources) {
								ownedFunctionalities1.ExternalResources = append(ownedFunctionalities1.ExternalResources, externalResources3)
							} else {
								ownedFunctionalities1.ExternalResources[externalResourcesCount1].ConnectionID = externalResources3.ConnectionID
								ownedFunctionalities1.ExternalResources[externalResourcesCount1].ConnectionName = externalResources3.ConnectionName
								ownedFunctionalities1.ExternalResources[externalResourcesCount1].ConnectionType = externalResources3.ConnectionType
								ownedFunctionalities1.ExternalResources[externalResourcesCount1].CreatedAt = externalResources3.CreatedAt
								ownedFunctionalities1.ExternalResources[externalResourcesCount1].Name = externalResources3.Name
								ownedFunctionalities1.ExternalResources[externalResourcesCount1].RemoteID = externalResources3.RemoteID
								ownedFunctionalities1.ExternalResources[externalResourcesCount1].RemoteURL = externalResources3.RemoteURL
								ownedFunctionalities1.ExternalResources[externalResourcesCount1].UpdatedAt = externalResources3.UpdatedAt
							}
						}
						ownedFunctionalities1.ID = types.StringPointerValue(ownedFunctionalitiesItem.ID)
						if len(ownedFunctionalitiesItem.Labels) > 0 {
							ownedFunctionalities1.Labels = make(map[string]types.String)
							for key1, value1 := range ownedFunctionalitiesItem.Labels {
								ownedFunctionalities1.Labels[key1] = types.StringValue(value1)
							}
						}
						ownedFunctionalities1.Links = []tfTypes.LinksEntity{}
						for linksCount1, linksItem1 := range ownedFunctionalitiesItem.Links {
							var links3 tfTypes.LinksEntity
							links3.HrefURL = types.StringPointerValue(linksItem1.HrefURL)
							links3.IconURL = types.StringPointerValue(linksItem1.IconURL)
							links3.ID = types.StringPointerValue(linksItem1.ID)
							links3.Name = types.StringPointerValue(linksItem1.Name)
							if linksCount1+1 > len(ownedFunctionalities1.Links) {
								ownedFunctionalities1.Links = append(ownedFunctionalities1.Links, links3)
							} else {
								ownedFunctionalities1.Links[linksCount1].HrefURL = links3.HrefURL
								ownedFunctionalities1.Links[linksCount1].IconURL = links3.IconURL
								ownedFunctionalities1.Links[linksCount1].ID = links3.ID
								ownedFunctionalities1.Links[linksCount1].Name = links3.Name
							}
						}
						ownedFunctionalities1.Name = types.StringPointerValue(ownedFunctionalitiesItem.Name)
						if ownedFunctionalitiesItem.Owner == nil {
							ownedFunctionalities1.Owner = nil
						} else {
							ownedFunctionalities1.Owner = &tfTypes.TeamEntity1{}
						}
						ownedFunctionalities1.Slug = types.StringPointerValue(ownedFunctionalitiesItem.Slug)
						if ownedFunctionalitiesItem.UpdatedAt != nil {
							ownedFunctionalities1.UpdatedAt = types.StringValue(ownedFunctionalitiesItem.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							ownedFunctionalities1.UpdatedAt = types.StringNull()
						}
						if ownedFunctionalitiesItem.UpdatedBy == nil {
							ownedFunctionalities1.UpdatedBy = nil
						} else {
							ownedFunctionalities1.UpdatedBy = &tfTypes.AuthorEntity{}
							ownedFunctionalities1.UpdatedBy.Email = types.StringPointerValue(ownedFunctionalitiesItem.UpdatedBy.Email)
							ownedFunctionalities1.UpdatedBy.ID = types.StringPointerValue(ownedFunctionalitiesItem.UpdatedBy.ID)
							ownedFunctionalities1.UpdatedBy.Name = types.StringPointerValue(ownedFunctionalitiesItem.UpdatedBy.Name)
							ownedFunctionalities1.UpdatedBy.Source = types.StringPointerValue(ownedFunctionalitiesItem.UpdatedBy.Source)
						}
						if ownedFunctionalitiesCount+1 > len(checklists1.Owner.OwnedFunctionalities) {
							checklists1.Owner.OwnedFunctionalities = append(checklists1.Owner.OwnedFunctionalities, ownedFunctionalities1)
						} else {
							checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].ActiveIncidents = ownedFunctionalities1.ActiveIncidents
							checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].AlertOnAdd = ownedFunctionalities1.AlertOnAdd
							checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].AutoAddRespondingTeam = ownedFunctionalities1.AutoAddRespondingTeam
							checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].CreatedAt = ownedFunctionalities1.CreatedAt
							checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].Description = ownedFunctionalities1.Description
							checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].ExternalResources = ownedFunctionalities1.ExternalResources
							checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].ID = ownedFunctionalities1.ID
							checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].Labels = ownedFunctionalities1.Labels
							checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].Links = ownedFunctionalities1.Links
							checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].Name = ownedFunctionalities1.Name
							checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].Owner = ownedFunctionalities1.Owner
							checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].Slug = ownedFunctionalities1.Slug
							checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].UpdatedAt = ownedFunctionalities1.UpdatedAt
							checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].UpdatedBy = ownedFunctionalities1.UpdatedBy
						}
					}
					checklists1.Owner.OwnedRunbooks = []tfTypes.SlimRunbookEntity{}
					for ownedRunbooksCount, ownedRunbooksItem := range checklistsItem.Owner.OwnedRunbooks {
						var ownedRunbooks1 tfTypes.SlimRunbookEntity
						if ownedRunbooksItem.AttachmentRule == nil {
							ownedRunbooks1.AttachmentRule = nil
						} else {
							ownedRunbooks1.AttachmentRule = &tfTypes.RulesRuleEntity{}
							if ownedRunbooksItem.AttachmentRule.Logic == nil {
								ownedRunbooks1.AttachmentRule.Logic = nil
							} else {
								ownedRunbooks1.AttachmentRule.Logic = &tfTypes.TeamEntity1{}
							}
							if ownedRunbooksItem.AttachmentRule.UserData == nil {
								ownedRunbooks1.AttachmentRule.UserData = nil
							} else {
								ownedRunbooks1.AttachmentRule.UserData = &tfTypes.FHTypesGenericEntity{}
								ownedRunbooks1.AttachmentRule.UserData.Label = types.StringPointerValue(ownedRunbooksItem.AttachmentRule.UserData.Label)
								ownedRunbooks1.AttachmentRule.UserData.Type = types.StringPointerValue(ownedRunbooksItem.AttachmentRule.UserData.Type)
								ownedRunbooks1.AttachmentRule.UserData.Value = types.StringPointerValue(ownedRunbooksItem.AttachmentRule.UserData.Value)
							}
						}
						ownedRunbooks1.Categories = types.StringPointerValue(ownedRunbooksItem.Categories)
						if ownedRunbooksItem.CreatedAt != nil {
							ownedRunbooks1.CreatedAt = types.StringValue(ownedRunbooksItem.CreatedAt.Format(time.RFC3339Nano))
						} else {
							ownedRunbooks1.CreatedAt = types.StringNull()
						}
						ownedRunbooks1.Description = types.StringPointerValue(ownedRunbooksItem.Description)
						ownedRunbooks1.ID = types.StringPointerValue(ownedRunbooksItem.ID)
						ownedRunbooks1.Name = types.StringPointerValue(ownedRunbooksItem.Name)
						if ownedRunbooksItem.Owner == nil {
							ownedRunbooks1.Owner = nil
						} else {
							ownedRunbooks1.Owner = &tfTypes.TeamEntity1{}
						}
						ownedRunbooks1.Summary = types.StringPointerValue(ownedRunbooksItem.Summary)
						ownedRunbooks1.Type = types.StringPointerValue(ownedRunbooksItem.Type)
						if ownedRunbooksItem.UpdatedAt != nil {
							ownedRunbooks1.UpdatedAt = types.StringValue(ownedRunbooksItem.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							ownedRunbooks1.UpdatedAt = types.StringNull()
						}
						if ownedRunbooksCount+1 > len(checklists1.Owner.OwnedRunbooks) {
							checklists1.Owner.OwnedRunbooks = append(checklists1.Owner.OwnedRunbooks, ownedRunbooks1)
						} else {
							checklists1.Owner.OwnedRunbooks[ownedRunbooksCount].AttachmentRule = ownedRunbooks1.AttachmentRule
							checklists1.Owner.OwnedRunbooks[ownedRunbooksCount].Categories = ownedRunbooks1.Categories
							checklists1.Owner.OwnedRunbooks[ownedRunbooksCount].CreatedAt = ownedRunbooks1.CreatedAt
							checklists1.Owner.OwnedRunbooks[ownedRunbooksCount].Description = ownedRunbooks1.Description
							checklists1.Owner.OwnedRunbooks[ownedRunbooksCount].ID = ownedRunbooks1.ID
							checklists1.Owner.OwnedRunbooks[ownedRunbooksCount].Name = ownedRunbooks1.Name
							checklists1.Owner.OwnedRunbooks[ownedRunbooksCount].Owner = ownedRunbooks1.Owner
							checklists1.Owner.OwnedRunbooks[ownedRunbooksCount].Summary = ownedRunbooks1.Summary
							checklists1.Owner.OwnedRunbooks[ownedRunbooksCount].Type = ownedRunbooks1.Type
							checklists1.Owner.OwnedRunbooks[ownedRunbooksCount].UpdatedAt = ownedRunbooks1.UpdatedAt
						}
					}
					checklists1.Owner.SignalsIcalURL = types.StringPointerValue(checklistsItem.Owner.SignalsIcalURL)
					if checklistsItem.Owner.SlackChannel == nil {
						checklists1.Owner.SlackChannel = nil
					} else {
						checklists1.Owner.SlackChannel = &tfTypes.IntegrationsSlackSlackChannelEntity{}
						checklists1.Owner.SlackChannel.ID = types.StringPointerValue(checklistsItem.Owner.SlackChannel.ID)
						checklists1.Owner.SlackChannel.Name = types.StringPointerValue(checklistsItem.Owner.SlackChannel.Name)
						checklists1.Owner.SlackChannel.SlackChannelID = types.StringPointerValue(checklistsItem.Owner.SlackChannel.SlackChannelID)
					}
					checklists1.Owner.Slug = types.StringPointerValue(checklistsItem.Owner.Slug)
					if checklistsItem.Owner.UpdatedAt != nil {
						checklists1.Owner.UpdatedAt = types.StringValue(checklistsItem.Owner.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						checklists1.Owner.UpdatedAt = types.StringNull()
					}
				}
				if checklistsItem.UpdatedAt != nil {
					checklists1.UpdatedAt = types.StringValue(checklistsItem.UpdatedAt.Format(time.RFC3339Nano))
				} else {
					checklists1.UpdatedAt = types.StringNull()
				}
				if checklistsCount+1 > len(r.ConnectedService.Checklists) {
					r.ConnectedService.Checklists = append(r.ConnectedService.Checklists, checklists1)
				} else {
					r.ConnectedService.Checklists[checklistsCount].Checks = checklists1.Checks
					r.ConnectedService.Checklists[checklistsCount].CreatedAt = checklists1.CreatedAt
					r.ConnectedService.Checklists[checklistsCount].Description = checklists1.Description
					r.ConnectedService.Checklists[checklistsCount].ID = checklists1.ID
					r.ConnectedService.Checklists[checklistsCount].Name = checklists1.Name
					r.ConnectedService.Checklists[checklistsCount].Owner = checklists1.Owner
					r.ConnectedService.Checklists[checklistsCount].UpdatedAt = checklists1.UpdatedAt
				}
			}
			if resp.ConnectedService.CompletedChecks != nil {
				r.ConnectedService.CompletedChecks = types.Int64Value(int64(*resp.ConnectedService.CompletedChecks))
			} else {
				r.ConnectedService.CompletedChecks = types.Int64Null()
			}
			if resp.ConnectedService.CreatedAt != nil {
				r.ConnectedService.CreatedAt = types.StringValue(resp.ConnectedService.CreatedAt.Format(time.RFC3339Nano))
			} else {
				r.ConnectedService.CreatedAt = types.StringNull()
			}
			r.ConnectedService.Description = types.StringPointerValue(resp.ConnectedService.Description)
			r.ConnectedService.ExternalResources = []tfTypes.ExternalResourceEntity{}
			if len(r.ConnectedService.ExternalResources) > len(resp.ConnectedService.ExternalResources) {
				r.ConnectedService.ExternalResources = r.ConnectedService.ExternalResources[:len(resp.ConnectedService.ExternalResources)]
			}
			for externalResourcesCount2, externalResourcesItem2 := range resp.ConnectedService.ExternalResources {
				var externalResources5 tfTypes.ExternalResourceEntity
				externalResources5.ConnectionID = types.StringPointerValue(externalResourcesItem2.ConnectionID)
				externalResources5.ConnectionName = types.StringPointerValue(externalResourcesItem2.ConnectionName)
				externalResources5.ConnectionType = types.StringPointerValue(externalResourcesItem2.ConnectionType)
				if externalResourcesItem2.CreatedAt != nil {
					externalResources5.CreatedAt = types.StringValue(externalResourcesItem2.CreatedAt.Format(time.RFC3339Nano))
				} else {
					externalResources5.CreatedAt = types.StringNull()
				}
				externalResources5.Name = types.StringPointerValue(externalResourcesItem2.Name)
				externalResources5.RemoteID = types.StringPointerValue(externalResourcesItem2.RemoteID)
				externalResources5.RemoteURL = types.StringPointerValue(externalResourcesItem2.RemoteURL)
				if externalResourcesItem2.UpdatedAt != nil {
					externalResources5.UpdatedAt = types.StringValue(externalResourcesItem2.UpdatedAt.Format(time.RFC3339Nano))
				} else {
					externalResources5.UpdatedAt = types.StringNull()
				}
				if externalResourcesCount2+1 > len(r.ConnectedService.ExternalResources) {
					r.ConnectedService.ExternalResources = append(r.ConnectedService.ExternalResources, externalResources5)
				} else {
					r.ConnectedService.ExternalResources[externalResourcesCount2].ConnectionID = externalResources5.ConnectionID
					r.ConnectedService.ExternalResources[externalResourcesCount2].ConnectionName = externalResources5.ConnectionName
					r.ConnectedService.ExternalResources[externalResourcesCount2].ConnectionType = externalResources5.ConnectionType
					r.ConnectedService.ExternalResources[externalResourcesCount2].CreatedAt = externalResources5.CreatedAt
					r.ConnectedService.ExternalResources[externalResourcesCount2].Name = externalResources5.Name
					r.ConnectedService.ExternalResources[externalResourcesCount2].RemoteID = externalResources5.RemoteID
					r.ConnectedService.ExternalResources[externalResourcesCount2].RemoteURL = externalResources5.RemoteURL
					r.ConnectedService.ExternalResources[externalResourcesCount2].UpdatedAt = externalResources5.UpdatedAt
				}
			}
			r.ConnectedService.Functionalities = []tfTypes.FunctionalityEntity{}
			if len(r.ConnectedService.Functionalities) > len(resp.ConnectedService.Functionalities) {
				r.ConnectedService.Functionalities = r.ConnectedService.Functionalities[:len(resp.ConnectedService.Functionalities)]
			}
			for functionalitiesCount1, functionalitiesItem1 := range resp.ConnectedService.Functionalities {
				var functionalities3 tfTypes.FunctionalityEntity
				functionalities3.ActiveIncidents = []types.String{}
				for _, v := range functionalitiesItem1.ActiveIncidents {
					functionalities3.ActiveIncidents = append(functionalities3.ActiveIncidents, types.StringValue(v))
				}
				functionalities3.AlertOnAdd = types.BoolPointerValue(functionalitiesItem1.AlertOnAdd)
				functionalities3.AutoAddRespondingTeam = types.BoolPointerValue(functionalitiesItem1.AutoAddRespondingTeam)
				if functionalitiesItem1.CreatedAt != nil {
					functionalities3.CreatedAt = types.StringValue(functionalitiesItem1.CreatedAt.Format(time.RFC3339Nano))
				} else {
					functionalities3.CreatedAt = types.StringNull()
				}
				functionalities3.Description = types.StringPointerValue(functionalitiesItem1.Description)
				functionalities3.ExternalResources = []tfTypes.ExternalResourceEntity{}
				for externalResourcesCount3, externalResourcesItem3 := range functionalitiesItem1.ExternalResources {
					var externalResources7 tfTypes.ExternalResourceEntity
					externalResources7.ConnectionID = types.StringPointerValue(externalResourcesItem3.ConnectionID)
					externalResources7.ConnectionName = types.StringPointerValue(externalResourcesItem3.ConnectionName)
					externalResources7.ConnectionType = types.StringPointerValue(externalResourcesItem3.ConnectionType)
					if externalResourcesItem3.CreatedAt != nil {
						externalResources7.CreatedAt = types.StringValue(externalResourcesItem3.CreatedAt.Format(time.RFC3339Nano))
					} else {
						externalResources7.CreatedAt = types.StringNull()
					}
					externalResources7.Name = types.StringPointerValue(externalResourcesItem3.Name)
					externalResources7.RemoteID = types.StringPointerValue(externalResourcesItem3.RemoteID)
					externalResources7.RemoteURL = types.StringPointerValue(externalResourcesItem3.RemoteURL)
					if externalResourcesItem3.UpdatedAt != nil {
						externalResources7.UpdatedAt = types.StringValue(externalResourcesItem3.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						externalResources7.UpdatedAt = types.StringNull()
					}
					if externalResourcesCount3+1 > len(functionalities3.ExternalResources) {
						functionalities3.ExternalResources = append(functionalities3.ExternalResources, externalResources7)
					} else {
						functionalities3.ExternalResources[externalResourcesCount3].ConnectionID = externalResources7.ConnectionID
						functionalities3.ExternalResources[externalResourcesCount3].ConnectionName = externalResources7.ConnectionName
						functionalities3.ExternalResources[externalResourcesCount3].ConnectionType = externalResources7.ConnectionType
						functionalities3.ExternalResources[externalResourcesCount3].CreatedAt = externalResources7.CreatedAt
						functionalities3.ExternalResources[externalResourcesCount3].Name = externalResources7.Name
						functionalities3.ExternalResources[externalResourcesCount3].RemoteID = externalResources7.RemoteID
						functionalities3.ExternalResources[externalResourcesCount3].RemoteURL = externalResources7.RemoteURL
						functionalities3.ExternalResources[externalResourcesCount3].UpdatedAt = externalResources7.UpdatedAt
					}
				}
				functionalities3.ID = types.StringPointerValue(functionalitiesItem1.ID)
				if len(functionalitiesItem1.Labels) > 0 {
					functionalities3.Labels = make(map[string]types.String)
					for key2, value3 := range functionalitiesItem1.Labels {
						functionalities3.Labels[key2] = types.StringValue(value3)
					}
				}
				functionalities3.Links = []tfTypes.LinksEntity{}
				for linksCount2, linksItem2 := range functionalitiesItem1.Links {
					var links5 tfTypes.LinksEntity
					links5.HrefURL = types.StringPointerValue(linksItem2.HrefURL)
					links5.IconURL = types.StringPointerValue(linksItem2.IconURL)
					links5.ID = types.StringPointerValue(linksItem2.ID)
					links5.Name = types.StringPointerValue(linksItem2.Name)
					if linksCount2+1 > len(functionalities3.Links) {
						functionalities3.Links = append(functionalities3.Links, links5)
					} else {
						functionalities3.Links[linksCount2].HrefURL = links5.HrefURL
						functionalities3.Links[linksCount2].IconURL = links5.IconURL
						functionalities3.Links[linksCount2].ID = links5.ID
						functionalities3.Links[linksCount2].Name = links5.Name
					}
				}
				functionalities3.Name = types.StringPointerValue(functionalitiesItem1.Name)
				if functionalitiesItem1.Owner == nil {
					functionalities3.Owner = nil
				} else {
					functionalities3.Owner = &tfTypes.TeamEntity1{}
				}
				functionalities3.Slug = types.StringPointerValue(functionalitiesItem1.Slug)
				if functionalitiesItem1.UpdatedAt != nil {
					functionalities3.UpdatedAt = types.StringValue(functionalitiesItem1.UpdatedAt.Format(time.RFC3339Nano))
				} else {
					functionalities3.UpdatedAt = types.StringNull()
				}
				if functionalitiesItem1.UpdatedBy == nil {
					functionalities3.UpdatedBy = nil
				} else {
					functionalities3.UpdatedBy = &tfTypes.AuthorEntity{}
					functionalities3.UpdatedBy.Email = types.StringPointerValue(functionalitiesItem1.UpdatedBy.Email)
					functionalities3.UpdatedBy.ID = types.StringPointerValue(functionalitiesItem1.UpdatedBy.ID)
					functionalities3.UpdatedBy.Name = types.StringPointerValue(functionalitiesItem1.UpdatedBy.Name)
					functionalities3.UpdatedBy.Source = types.StringPointerValue(functionalitiesItem1.UpdatedBy.Source)
				}
				if functionalitiesCount1+1 > len(r.ConnectedService.Functionalities) {
					r.ConnectedService.Functionalities = append(r.ConnectedService.Functionalities, functionalities3)
				} else {
					r.ConnectedService.Functionalities[functionalitiesCount1].ActiveIncidents = functionalities3.ActiveIncidents
					r.ConnectedService.Functionalities[functionalitiesCount1].AlertOnAdd = functionalities3.AlertOnAdd
					r.ConnectedService.Functionalities[functionalitiesCount1].AutoAddRespondingTeam = functionalities3.AutoAddRespondingTeam
					r.ConnectedService.Functionalities[functionalitiesCount1].CreatedAt = functionalities3.CreatedAt
					r.ConnectedService.Functionalities[functionalitiesCount1].Description = functionalities3.Description
					r.ConnectedService.Functionalities[functionalitiesCount1].ExternalResources = functionalities3.ExternalResources
					r.ConnectedService.Functionalities[functionalitiesCount1].ID = functionalities3.ID
					r.ConnectedService.Functionalities[functionalitiesCount1].Labels = functionalities3.Labels
					r.ConnectedService.Functionalities[functionalitiesCount1].Links = functionalities3.Links
					r.ConnectedService.Functionalities[functionalitiesCount1].Name = functionalities3.Name
					r.ConnectedService.Functionalities[functionalitiesCount1].Owner = functionalities3.Owner
					r.ConnectedService.Functionalities[functionalitiesCount1].Slug = functionalities3.Slug
					r.ConnectedService.Functionalities[functionalitiesCount1].UpdatedAt = functionalities3.UpdatedAt
					r.ConnectedService.Functionalities[functionalitiesCount1].UpdatedBy = functionalities3.UpdatedBy
				}
			}
			r.ConnectedService.ID = types.StringPointerValue(resp.ConnectedService.ID)
			if len(resp.ConnectedService.Labels) > 0 {
				r.ConnectedService.Labels = make(map[string]types.String)
				for key3, value4 := range resp.ConnectedService.Labels {
					r.ConnectedService.Labels[key3] = types.StringValue(value4)
				}
			}
			if resp.ConnectedService.LastImport == nil {
				r.ConnectedService.LastImport = nil
			} else {
				r.ConnectedService.LastImport = &tfTypes.ImportsImportableResourceEntity{}
				r.ConnectedService.LastImport.ImportErrors = []tfTypes.ImportsImportErrorEntity{}
				if len(r.ConnectedService.LastImport.ImportErrors) > len(resp.ConnectedService.LastImport.ImportErrors) {
					r.ConnectedService.LastImport.ImportErrors = r.ConnectedService.LastImport.ImportErrors[:len(resp.ConnectedService.LastImport.ImportErrors)]
				}
				for importErrorsCount, importErrorsItem := range resp.ConnectedService.LastImport.ImportErrors {
					var importErrors1 tfTypes.ImportsImportErrorEntity
					if importErrorsItem.CreatedAt != nil {
						importErrors1.CreatedAt = types.StringValue(importErrorsItem.CreatedAt.Format(time.RFC3339Nano))
					} else {
						importErrors1.CreatedAt = types.StringNull()
					}
					if importErrorsItem.Data == nil {
						importErrors1.Data = nil
					} else {
						importErrors1.Data = &tfTypes.TeamEntity1{}
					}
					importErrors1.ID = types.StringPointerValue(importErrorsItem.ID)
					importErrors1.Message = types.StringPointerValue(importErrorsItem.Message)
					if importErrorsItem.Resource == nil {
						importErrors1.Resource = nil
					} else {
						importErrors1.Resource = &tfTypes.ImportsImportErrorEntityResourceEntity{}
						importErrors1.Resource.Name = types.StringPointerValue(importErrorsItem.Resource.Name)
						importErrors1.Resource.ResourceID = types.StringPointerValue(importErrorsItem.Resource.ResourceID)
						importErrors1.Resource.ResourceType = types.StringPointerValue(importErrorsItem.Resource.ResourceType)
					}
					if importErrorsCount+1 > len(r.ConnectedService.LastImport.ImportErrors) {
						r.ConnectedService.LastImport.ImportErrors = append(r.ConnectedService.LastImport.ImportErrors, importErrors1)
					} else {
						r.ConnectedService.LastImport.ImportErrors[importErrorsCount].CreatedAt = importErrors1.CreatedAt
						r.ConnectedService.LastImport.ImportErrors[importErrorsCount].Data = importErrors1.Data
						r.ConnectedService.LastImport.ImportErrors[importErrorsCount].ID = importErrors1.ID
						r.ConnectedService.LastImport.ImportErrors[importErrorsCount].Message = importErrors1.Message
						r.ConnectedService.LastImport.ImportErrors[importErrorsCount].Resource = importErrors1.Resource
					}
				}
				if resp.ConnectedService.LastImport.ImportedAt != nil {
					r.ConnectedService.LastImport.ImportedAt = types.StringValue(resp.ConnectedService.LastImport.ImportedAt.Format(time.RFC3339Nano))
				} else {
					r.ConnectedService.LastImport.ImportedAt = types.StringNull()
				}
				r.ConnectedService.LastImport.RemoteID = types.StringPointerValue(resp.ConnectedService.LastImport.RemoteID)
				if resp.ConnectedService.LastImport.State != nil {
					r.ConnectedService.LastImport.State = types.StringValue(string(*resp.ConnectedService.LastImport.State))
				} else {
					r.ConnectedService.LastImport.State = types.StringNull()
				}
			}
			r.ConnectedService.Links = []tfTypes.LinksEntity{}
			if len(r.ConnectedService.Links) > len(resp.ConnectedService.Links) {
				r.ConnectedService.Links = r.ConnectedService.Links[:len(resp.ConnectedService.Links)]
			}
			for linksCount3, linksItem3 := range resp.ConnectedService.Links {
				var links7 tfTypes.LinksEntity
				links7.HrefURL = types.StringPointerValue(linksItem3.HrefURL)
				links7.IconURL = types.StringPointerValue(linksItem3.IconURL)
				links7.ID = types.StringPointerValue(linksItem3.ID)
				links7.Name = types.StringPointerValue(linksItem3.Name)
				if linksCount3+1 > len(r.ConnectedService.Links) {
					r.ConnectedService.Links = append(r.ConnectedService.Links, links7)
				} else {
					r.ConnectedService.Links[linksCount3].HrefURL = links7.HrefURL
					r.ConnectedService.Links[linksCount3].IconURL = links7.IconURL
					r.ConnectedService.Links[linksCount3].ID = links7.ID
					r.ConnectedService.Links[linksCount3].Name = links7.Name
				}
			}
			r.ConnectedService.ManagedBy = types.StringPointerValue(resp.ConnectedService.ManagedBy)
			if resp.ConnectedService.ManagedBySettings == nil {
				r.ConnectedService.ManagedBySettings = nil
			} else {
				r.ConnectedService.ManagedBySettings = &tfTypes.TeamEntity1{}
			}
			r.ConnectedService.Name = types.StringPointerValue(resp.ConnectedService.Name)
			if resp.ConnectedService.Owner == nil {
				r.ConnectedService.Owner = nil
			} else {
				r.ConnectedService.Owner = &tfTypes.TeamEntity{}
				if resp.ConnectedService.Owner.CreatedAt != nil {
					r.ConnectedService.Owner.CreatedAt = types.StringValue(resp.ConnectedService.Owner.CreatedAt.Format(time.RFC3339Nano))
				} else {
					r.ConnectedService.Owner.CreatedAt = types.StringNull()
				}
				if resp.ConnectedService.Owner.CreatedBy == nil {
					r.ConnectedService.Owner.CreatedBy = nil
				} else {
					r.ConnectedService.Owner.CreatedBy = &tfTypes.AuthorEntity{}
					r.ConnectedService.Owner.CreatedBy.Email = types.StringPointerValue(resp.ConnectedService.Owner.CreatedBy.Email)
					r.ConnectedService.Owner.CreatedBy.ID = types.StringPointerValue(resp.ConnectedService.Owner.CreatedBy.ID)
					r.ConnectedService.Owner.CreatedBy.Name = types.StringPointerValue(resp.ConnectedService.Owner.CreatedBy.Name)
					r.ConnectedService.Owner.CreatedBy.Source = types.StringPointerValue(resp.ConnectedService.Owner.CreatedBy.Source)
				}
				r.ConnectedService.Owner.Description = types.StringPointerValue(resp.ConnectedService.Owner.Description)
				r.ConnectedService.Owner.Functionalities = []tfTypes.FunctionalityEntity{}
				if len(r.ConnectedService.Owner.Functionalities) > len(resp.ConnectedService.Owner.Functionalities) {
					r.ConnectedService.Owner.Functionalities = r.ConnectedService.Owner.Functionalities[:len(resp.ConnectedService.Owner.Functionalities)]
				}
				for functionalitiesCount2, functionalitiesItem2 := range resp.ConnectedService.Owner.Functionalities {
					var functionalities5 tfTypes.FunctionalityEntity
					functionalities5.ActiveIncidents = []types.String{}
					for _, v := range functionalitiesItem2.ActiveIncidents {
						functionalities5.ActiveIncidents = append(functionalities5.ActiveIncidents, types.StringValue(v))
					}
					functionalities5.AlertOnAdd = types.BoolPointerValue(functionalitiesItem2.AlertOnAdd)
					functionalities5.AutoAddRespondingTeam = types.BoolPointerValue(functionalitiesItem2.AutoAddRespondingTeam)
					if functionalitiesItem2.CreatedAt != nil {
						functionalities5.CreatedAt = types.StringValue(functionalitiesItem2.CreatedAt.Format(time.RFC3339Nano))
					} else {
						functionalities5.CreatedAt = types.StringNull()
					}
					functionalities5.Description = types.StringPointerValue(functionalitiesItem2.Description)
					functionalities5.ExternalResources = []tfTypes.ExternalResourceEntity{}
					for externalResourcesCount4, externalResourcesItem4 := range functionalitiesItem2.ExternalResources {
						var externalResources9 tfTypes.ExternalResourceEntity
						externalResources9.ConnectionID = types.StringPointerValue(externalResourcesItem4.ConnectionID)
						externalResources9.ConnectionName = types.StringPointerValue(externalResourcesItem4.ConnectionName)
						externalResources9.ConnectionType = types.StringPointerValue(externalResourcesItem4.ConnectionType)
						if externalResourcesItem4.CreatedAt != nil {
							externalResources9.CreatedAt = types.StringValue(externalResourcesItem4.CreatedAt.Format(time.RFC3339Nano))
						} else {
							externalResources9.CreatedAt = types.StringNull()
						}
						externalResources9.Name = types.StringPointerValue(externalResourcesItem4.Name)
						externalResources9.RemoteID = types.StringPointerValue(externalResourcesItem4.RemoteID)
						externalResources9.RemoteURL = types.StringPointerValue(externalResourcesItem4.RemoteURL)
						if externalResourcesItem4.UpdatedAt != nil {
							externalResources9.UpdatedAt = types.StringValue(externalResourcesItem4.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							externalResources9.UpdatedAt = types.StringNull()
						}
						if externalResourcesCount4+1 > len(functionalities5.ExternalResources) {
							functionalities5.ExternalResources = append(functionalities5.ExternalResources, externalResources9)
						} else {
							functionalities5.ExternalResources[externalResourcesCount4].ConnectionID = externalResources9.ConnectionID
							functionalities5.ExternalResources[externalResourcesCount4].ConnectionName = externalResources9.ConnectionName
							functionalities5.ExternalResources[externalResourcesCount4].ConnectionType = externalResources9.ConnectionType
							functionalities5.ExternalResources[externalResourcesCount4].CreatedAt = externalResources9.CreatedAt
							functionalities5.ExternalResources[externalResourcesCount4].Name = externalResources9.Name
							functionalities5.ExternalResources[externalResourcesCount4].RemoteID = externalResources9.RemoteID
							functionalities5.ExternalResources[externalResourcesCount4].RemoteURL = externalResources9.RemoteURL
							functionalities5.ExternalResources[externalResourcesCount4].UpdatedAt = externalResources9.UpdatedAt
						}
					}
					functionalities5.ID = types.StringPointerValue(functionalitiesItem2.ID)
					if len(functionalitiesItem2.Labels) > 0 {
						functionalities5.Labels = make(map[string]types.String)
						for key4, value5 := range functionalitiesItem2.Labels {
							functionalities5.Labels[key4] = types.StringValue(value5)
						}
					}
					functionalities5.Links = []tfTypes.LinksEntity{}
					for linksCount4, linksItem4 := range functionalitiesItem2.Links {
						var links9 tfTypes.LinksEntity
						links9.HrefURL = types.StringPointerValue(linksItem4.HrefURL)
						links9.IconURL = types.StringPointerValue(linksItem4.IconURL)
						links9.ID = types.StringPointerValue(linksItem4.ID)
						links9.Name = types.StringPointerValue(linksItem4.Name)
						if linksCount4+1 > len(functionalities5.Links) {
							functionalities5.Links = append(functionalities5.Links, links9)
						} else {
							functionalities5.Links[linksCount4].HrefURL = links9.HrefURL
							functionalities5.Links[linksCount4].IconURL = links9.IconURL
							functionalities5.Links[linksCount4].ID = links9.ID
							functionalities5.Links[linksCount4].Name = links9.Name
						}
					}
					functionalities5.Name = types.StringPointerValue(functionalitiesItem2.Name)
					if functionalitiesItem2.Owner == nil {
						functionalities5.Owner = nil
					} else {
						functionalities5.Owner = &tfTypes.TeamEntity1{}
					}
					functionalities5.Slug = types.StringPointerValue(functionalitiesItem2.Slug)
					if functionalitiesItem2.UpdatedAt != nil {
						functionalities5.UpdatedAt = types.StringValue(functionalitiesItem2.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						functionalities5.UpdatedAt = types.StringNull()
					}
					if functionalitiesItem2.UpdatedBy == nil {
						functionalities5.UpdatedBy = nil
					} else {
						functionalities5.UpdatedBy = &tfTypes.AuthorEntity{}
						functionalities5.UpdatedBy.Email = types.StringPointerValue(functionalitiesItem2.UpdatedBy.Email)
						functionalities5.UpdatedBy.ID = types.StringPointerValue(functionalitiesItem2.UpdatedBy.ID)
						functionalities5.UpdatedBy.Name = types.StringPointerValue(functionalitiesItem2.UpdatedBy.Name)
						functionalities5.UpdatedBy.Source = types.StringPointerValue(functionalitiesItem2.UpdatedBy.Source)
					}
					if functionalitiesCount2+1 > len(r.ConnectedService.Owner.Functionalities) {
						r.ConnectedService.Owner.Functionalities = append(r.ConnectedService.Owner.Functionalities, functionalities5)
					} else {
						r.ConnectedService.Owner.Functionalities[functionalitiesCount2].ActiveIncidents = functionalities5.ActiveIncidents
						r.ConnectedService.Owner.Functionalities[functionalitiesCount2].AlertOnAdd = functionalities5.AlertOnAdd
						r.ConnectedService.Owner.Functionalities[functionalitiesCount2].AutoAddRespondingTeam = functionalities5.AutoAddRespondingTeam
						r.ConnectedService.Owner.Functionalities[functionalitiesCount2].CreatedAt = functionalities5.CreatedAt
						r.ConnectedService.Owner.Functionalities[functionalitiesCount2].Description = functionalities5.Description
						r.ConnectedService.Owner.Functionalities[functionalitiesCount2].ExternalResources = functionalities5.ExternalResources
						r.ConnectedService.Owner.Functionalities[functionalitiesCount2].ID = functionalities5.ID
						r.ConnectedService.Owner.Functionalities[functionalitiesCount2].Labels = functionalities5.Labels
						r.ConnectedService.Owner.Functionalities[functionalitiesCount2].Links = functionalities5.Links
						r.ConnectedService.Owner.Functionalities[functionalitiesCount2].Name = functionalities5.Name
						r.ConnectedService.Owner.Functionalities[functionalitiesCount2].Owner = functionalities5.Owner
						r.ConnectedService.Owner.Functionalities[functionalitiesCount2].Slug = functionalities5.Slug
						r.ConnectedService.Owner.Functionalities[functionalitiesCount2].UpdatedAt = functionalities5.UpdatedAt
						r.ConnectedService.Owner.Functionalities[functionalitiesCount2].UpdatedBy = functionalities5.UpdatedBy
					}
				}
				r.ConnectedService.Owner.ID = types.StringPointerValue(resp.ConnectedService.Owner.ID)
				r.ConnectedService.Owner.Memberships = []tfTypes.MembershipEntity{}
				if len(r.ConnectedService.Owner.Memberships) > len(resp.ConnectedService.Owner.Memberships) {
					r.ConnectedService.Owner.Memberships = r.ConnectedService.Owner.Memberships[:len(resp.ConnectedService.Owner.Memberships)]
				}
				for membershipsCount1, membershipsItem1 := range resp.ConnectedService.Owner.Memberships {
					var memberships3 tfTypes.MembershipEntity
					if membershipsItem1.DefaultIncidentRole == nil {
						memberships3.DefaultIncidentRole = nil
					} else {
						memberships3.DefaultIncidentRole = &tfTypes.IncidentRoleEntity{}
						if membershipsItem1.DefaultIncidentRole.CreatedAt != nil {
							memberships3.DefaultIncidentRole.CreatedAt = types.StringValue(membershipsItem1.DefaultIncidentRole.CreatedAt.Format(time.RFC3339Nano))
						} else {
							memberships3.DefaultIncidentRole.CreatedAt = types.StringNull()
						}
						memberships3.DefaultIncidentRole.Description = types.StringPointerValue(membershipsItem1.DefaultIncidentRole.Description)
						if membershipsItem1.DefaultIncidentRole.DiscardedAt != nil {
							memberships3.DefaultIncidentRole.DiscardedAt = types.StringValue(membershipsItem1.DefaultIncidentRole.DiscardedAt.Format(time.RFC3339Nano))
						} else {
							memberships3.DefaultIncidentRole.DiscardedAt = types.StringNull()
						}
						memberships3.DefaultIncidentRole.ID = types.StringPointerValue(membershipsItem1.DefaultIncidentRole.ID)
						memberships3.DefaultIncidentRole.Name = types.StringPointerValue(membershipsItem1.DefaultIncidentRole.Name)
						memberships3.DefaultIncidentRole.Summary = types.StringPointerValue(membershipsItem1.DefaultIncidentRole.Summary)
						if membershipsItem1.DefaultIncidentRole.UpdatedAt != nil {
							memberships3.DefaultIncidentRole.UpdatedAt = types.StringValue(membershipsItem1.DefaultIncidentRole.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							memberships3.DefaultIncidentRole.UpdatedAt = types.StringNull()
						}
					}
					if membershipsItem1.Schedule == nil {
						memberships3.Schedule = nil
					} else {
						memberships3.Schedule = &tfTypes.ScheduleEntity{}
						memberships3.Schedule.Discarded = types.BoolPointerValue(membershipsItem1.Schedule.Discarded)
						memberships3.Schedule.ID = types.StringPointerValue(membershipsItem1.Schedule.ID)
						memberships3.Schedule.Integration = types.StringPointerValue(membershipsItem1.Schedule.Integration)
						memberships3.Schedule.Name = types.StringPointerValue(membershipsItem1.Schedule.Name)
					}
					if membershipsItem1.User == nil {
						memberships3.User = nil
					} else {
						memberships3.User = &tfTypes.UserEntity{}
						if membershipsItem1.User.CreatedAt != nil {
							memberships3.User.CreatedAt = types.StringValue(membershipsItem1.User.CreatedAt.Format(time.RFC3339Nano))
						} else {
							memberships3.User.CreatedAt = types.StringNull()
						}
						memberships3.User.Email = types.StringPointerValue(membershipsItem1.User.Email)
						memberships3.User.ID = types.StringPointerValue(membershipsItem1.User.ID)
						memberships3.User.Name = types.StringPointerValue(membershipsItem1.User.Name)
						memberships3.User.SignalsEnabledNotificationTypes = []types.String{}
						for _, v := range membershipsItem1.User.SignalsEnabledNotificationTypes {
							memberships3.User.SignalsEnabledNotificationTypes = append(memberships3.User.SignalsEnabledNotificationTypes, types.StringValue(v))
						}
						memberships3.User.SlackLinked = types.BoolPointerValue(membershipsItem1.User.SlackLinked)
						memberships3.User.SlackUserID = types.StringPointerValue(membershipsItem1.User.SlackUserID)
						if membershipsItem1.User.UpdatedAt != nil {
							memberships3.User.UpdatedAt = types.StringValue(membershipsItem1.User.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							memberships3.User.UpdatedAt = types.StringNull()
						}
					}
					if membershipsCount1+1 > len(r.ConnectedService.Owner.Memberships) {
						r.ConnectedService.Owner.Memberships = append(r.ConnectedService.Owner.Memberships, memberships3)
					} else {
						r.ConnectedService.Owner.Memberships[membershipsCount1].DefaultIncidentRole = memberships3.DefaultIncidentRole
						r.ConnectedService.Owner.Memberships[membershipsCount1].Schedule = memberships3.Schedule
						r.ConnectedService.Owner.Memberships[membershipsCount1].User = memberships3.User
					}
				}
				if resp.ConnectedService.Owner.MsTeamsChannel == nil {
					r.ConnectedService.Owner.MsTeamsChannel = nil
				} else {
					r.ConnectedService.Owner.MsTeamsChannel = &tfTypes.IntegrationsMicrosoftTeamsV2ChannelEntity{}
					r.ConnectedService.Owner.MsTeamsChannel.ChannelID = types.StringPointerValue(resp.ConnectedService.Owner.MsTeamsChannel.ChannelID)
					r.ConnectedService.Owner.MsTeamsChannel.ChannelName = types.StringPointerValue(resp.ConnectedService.Owner.MsTeamsChannel.ChannelName)
					r.ConnectedService.Owner.MsTeamsChannel.ChannelURL = types.StringPointerValue(resp.ConnectedService.Owner.MsTeamsChannel.ChannelURL)
					r.ConnectedService.Owner.MsTeamsChannel.ID = types.StringPointerValue(resp.ConnectedService.Owner.MsTeamsChannel.ID)
					r.ConnectedService.Owner.MsTeamsChannel.MsTeamID = types.StringPointerValue(resp.ConnectedService.Owner.MsTeamsChannel.MsTeamID)
					r.ConnectedService.Owner.MsTeamsChannel.Status = types.StringPointerValue(resp.ConnectedService.Owner.MsTeamsChannel.Status)
					r.ConnectedService.Owner.MsTeamsChannel.TeamName = types.StringPointerValue(resp.ConnectedService.Owner.MsTeamsChannel.TeamName)
				}
				r.ConnectedService.Owner.Name = types.StringPointerValue(resp.ConnectedService.Owner.Name)
				r.ConnectedService.Owner.OwnedFunctionalities = []tfTypes.FunctionalityEntity{}
				if len(r.ConnectedService.Owner.OwnedFunctionalities) > len(resp.ConnectedService.Owner.OwnedFunctionalities) {
					r.ConnectedService.Owner.OwnedFunctionalities = r.ConnectedService.Owner.OwnedFunctionalities[:len(resp.ConnectedService.Owner.OwnedFunctionalities)]
				}
				for ownedFunctionalitiesCount1, ownedFunctionalitiesItem1 := range resp.ConnectedService.Owner.OwnedFunctionalities {
					var ownedFunctionalities3 tfTypes.FunctionalityEntity
					ownedFunctionalities3.ActiveIncidents = []types.String{}
					for _, v := range ownedFunctionalitiesItem1.ActiveIncidents {
						ownedFunctionalities3.ActiveIncidents = append(ownedFunctionalities3.ActiveIncidents, types.StringValue(v))
					}
					ownedFunctionalities3.AlertOnAdd = types.BoolPointerValue(ownedFunctionalitiesItem1.AlertOnAdd)
					ownedFunctionalities3.AutoAddRespondingTeam = types.BoolPointerValue(ownedFunctionalitiesItem1.AutoAddRespondingTeam)
					if ownedFunctionalitiesItem1.CreatedAt != nil {
						ownedFunctionalities3.CreatedAt = types.StringValue(ownedFunctionalitiesItem1.CreatedAt.Format(time.RFC3339Nano))
					} else {
						ownedFunctionalities3.CreatedAt = types.StringNull()
					}
					ownedFunctionalities3.Description = types.StringPointerValue(ownedFunctionalitiesItem1.Description)
					ownedFunctionalities3.ExternalResources = []tfTypes.ExternalResourceEntity{}
					for externalResourcesCount5, externalResourcesItem5 := range ownedFunctionalitiesItem1.ExternalResources {
						var externalResources11 tfTypes.ExternalResourceEntity
						externalResources11.ConnectionID = types.StringPointerValue(externalResourcesItem5.ConnectionID)
						externalResources11.ConnectionName = types.StringPointerValue(externalResourcesItem5.ConnectionName)
						externalResources11.ConnectionType = types.StringPointerValue(externalResourcesItem5.ConnectionType)
						if externalResourcesItem5.CreatedAt != nil {
							externalResources11.CreatedAt = types.StringValue(externalResourcesItem5.CreatedAt.Format(time.RFC3339Nano))
						} else {
							externalResources11.CreatedAt = types.StringNull()
						}
						externalResources11.Name = types.StringPointerValue(externalResourcesItem5.Name)
						externalResources11.RemoteID = types.StringPointerValue(externalResourcesItem5.RemoteID)
						externalResources11.RemoteURL = types.StringPointerValue(externalResourcesItem5.RemoteURL)
						if externalResourcesItem5.UpdatedAt != nil {
							externalResources11.UpdatedAt = types.StringValue(externalResourcesItem5.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							externalResources11.UpdatedAt = types.StringNull()
						}
						if externalResourcesCount5+1 > len(ownedFunctionalities3.ExternalResources) {
							ownedFunctionalities3.ExternalResources = append(ownedFunctionalities3.ExternalResources, externalResources11)
						} else {
							ownedFunctionalities3.ExternalResources[externalResourcesCount5].ConnectionID = externalResources11.ConnectionID
							ownedFunctionalities3.ExternalResources[externalResourcesCount5].ConnectionName = externalResources11.ConnectionName
							ownedFunctionalities3.ExternalResources[externalResourcesCount5].ConnectionType = externalResources11.ConnectionType
							ownedFunctionalities3.ExternalResources[externalResourcesCount5].CreatedAt = externalResources11.CreatedAt
							ownedFunctionalities3.ExternalResources[externalResourcesCount5].Name = externalResources11.Name
							ownedFunctionalities3.ExternalResources[externalResourcesCount5].RemoteID = externalResources11.RemoteID
							ownedFunctionalities3.ExternalResources[externalResourcesCount5].RemoteURL = externalResources11.RemoteURL
							ownedFunctionalities3.ExternalResources[externalResourcesCount5].UpdatedAt = externalResources11.UpdatedAt
						}
					}
					ownedFunctionalities3.ID = types.StringPointerValue(ownedFunctionalitiesItem1.ID)
					if len(ownedFunctionalitiesItem1.Labels) > 0 {
						ownedFunctionalities3.Labels = make(map[string]types.String)
						for key5, value6 := range ownedFunctionalitiesItem1.Labels {
							ownedFunctionalities3.Labels[key5] = types.StringValue(value6)
						}
					}
					ownedFunctionalities3.Links = []tfTypes.LinksEntity{}
					for linksCount5, linksItem5 := range ownedFunctionalitiesItem1.Links {
						var links11 tfTypes.LinksEntity
						links11.HrefURL = types.StringPointerValue(linksItem5.HrefURL)
						links11.IconURL = types.StringPointerValue(linksItem5.IconURL)
						links11.ID = types.StringPointerValue(linksItem5.ID)
						links11.Name = types.StringPointerValue(linksItem5.Name)
						if linksCount5+1 > len(ownedFunctionalities3.Links) {
							ownedFunctionalities3.Links = append(ownedFunctionalities3.Links, links11)
						} else {
							ownedFunctionalities3.Links[linksCount5].HrefURL = links11.HrefURL
							ownedFunctionalities3.Links[linksCount5].IconURL = links11.IconURL
							ownedFunctionalities3.Links[linksCount5].ID = links11.ID
							ownedFunctionalities3.Links[linksCount5].Name = links11.Name
						}
					}
					ownedFunctionalities3.Name = types.StringPointerValue(ownedFunctionalitiesItem1.Name)
					if ownedFunctionalitiesItem1.Owner == nil {
						ownedFunctionalities3.Owner = nil
					} else {
						ownedFunctionalities3.Owner = &tfTypes.TeamEntity1{}
					}
					ownedFunctionalities3.Slug = types.StringPointerValue(ownedFunctionalitiesItem1.Slug)
					if ownedFunctionalitiesItem1.UpdatedAt != nil {
						ownedFunctionalities3.UpdatedAt = types.StringValue(ownedFunctionalitiesItem1.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						ownedFunctionalities3.UpdatedAt = types.StringNull()
					}
					if ownedFunctionalitiesItem1.UpdatedBy == nil {
						ownedFunctionalities3.UpdatedBy = nil
					} else {
						ownedFunctionalities3.UpdatedBy = &tfTypes.AuthorEntity{}
						ownedFunctionalities3.UpdatedBy.Email = types.StringPointerValue(ownedFunctionalitiesItem1.UpdatedBy.Email)
						ownedFunctionalities3.UpdatedBy.ID = types.StringPointerValue(ownedFunctionalitiesItem1.UpdatedBy.ID)
						ownedFunctionalities3.UpdatedBy.Name = types.StringPointerValue(ownedFunctionalitiesItem1.UpdatedBy.Name)
						ownedFunctionalities3.UpdatedBy.Source = types.StringPointerValue(ownedFunctionalitiesItem1.UpdatedBy.Source)
					}
					if ownedFunctionalitiesCount1+1 > len(r.ConnectedService.Owner.OwnedFunctionalities) {
						r.ConnectedService.Owner.OwnedFunctionalities = append(r.ConnectedService.Owner.OwnedFunctionalities, ownedFunctionalities3)
					} else {
						r.ConnectedService.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].ActiveIncidents = ownedFunctionalities3.ActiveIncidents
						r.ConnectedService.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].AlertOnAdd = ownedFunctionalities3.AlertOnAdd
						r.ConnectedService.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].AutoAddRespondingTeam = ownedFunctionalities3.AutoAddRespondingTeam
						r.ConnectedService.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].CreatedAt = ownedFunctionalities3.CreatedAt
						r.ConnectedService.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].Description = ownedFunctionalities3.Description
						r.ConnectedService.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].ExternalResources = ownedFunctionalities3.ExternalResources
						r.ConnectedService.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].ID = ownedFunctionalities3.ID
						r.ConnectedService.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].Labels = ownedFunctionalities3.Labels
						r.ConnectedService.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].Links = ownedFunctionalities3.Links
						r.ConnectedService.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].Name = ownedFunctionalities3.Name
						r.ConnectedService.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].Owner = ownedFunctionalities3.Owner
						r.ConnectedService.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].Slug = ownedFunctionalities3.Slug
						r.ConnectedService.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].UpdatedAt = ownedFunctionalities3.UpdatedAt
						r.ConnectedService.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].UpdatedBy = ownedFunctionalities3.UpdatedBy
					}
				}
				r.ConnectedService.Owner.OwnedRunbooks = []tfTypes.SlimRunbookEntity{}
				if len(r.ConnectedService.Owner.OwnedRunbooks) > len(resp.ConnectedService.Owner.OwnedRunbooks) {
					r.ConnectedService.Owner.OwnedRunbooks = r.ConnectedService.Owner.OwnedRunbooks[:len(resp.ConnectedService.Owner.OwnedRunbooks)]
				}
				for ownedRunbooksCount1, ownedRunbooksItem1 := range resp.ConnectedService.Owner.OwnedRunbooks {
					var ownedRunbooks3 tfTypes.SlimRunbookEntity
					if ownedRunbooksItem1.AttachmentRule == nil {
						ownedRunbooks3.AttachmentRule = nil
					} else {
						ownedRunbooks3.AttachmentRule = &tfTypes.RulesRuleEntity{}
						if ownedRunbooksItem1.AttachmentRule.Logic == nil {
							ownedRunbooks3.AttachmentRule.Logic = nil
						} else {
							ownedRunbooks3.AttachmentRule.Logic = &tfTypes.TeamEntity1{}
						}
						if ownedRunbooksItem1.AttachmentRule.UserData == nil {
							ownedRunbooks3.AttachmentRule.UserData = nil
						} else {
							ownedRunbooks3.AttachmentRule.UserData = &tfTypes.FHTypesGenericEntity{}
							ownedRunbooks3.AttachmentRule.UserData.Label = types.StringPointerValue(ownedRunbooksItem1.AttachmentRule.UserData.Label)
							ownedRunbooks3.AttachmentRule.UserData.Type = types.StringPointerValue(ownedRunbooksItem1.AttachmentRule.UserData.Type)
							ownedRunbooks3.AttachmentRule.UserData.Value = types.StringPointerValue(ownedRunbooksItem1.AttachmentRule.UserData.Value)
						}
					}
					ownedRunbooks3.Categories = types.StringPointerValue(ownedRunbooksItem1.Categories)
					if ownedRunbooksItem1.CreatedAt != nil {
						ownedRunbooks3.CreatedAt = types.StringValue(ownedRunbooksItem1.CreatedAt.Format(time.RFC3339Nano))
					} else {
						ownedRunbooks3.CreatedAt = types.StringNull()
					}
					ownedRunbooks3.Description = types.StringPointerValue(ownedRunbooksItem1.Description)
					ownedRunbooks3.ID = types.StringPointerValue(ownedRunbooksItem1.ID)
					ownedRunbooks3.Name = types.StringPointerValue(ownedRunbooksItem1.Name)
					if ownedRunbooksItem1.Owner == nil {
						ownedRunbooks3.Owner = nil
					} else {
						ownedRunbooks3.Owner = &tfTypes.TeamEntity1{}
					}
					ownedRunbooks3.Summary = types.StringPointerValue(ownedRunbooksItem1.Summary)
					ownedRunbooks3.Type = types.StringPointerValue(ownedRunbooksItem1.Type)
					if ownedRunbooksItem1.UpdatedAt != nil {
						ownedRunbooks3.UpdatedAt = types.StringValue(ownedRunbooksItem1.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						ownedRunbooks3.UpdatedAt = types.StringNull()
					}
					if ownedRunbooksCount1+1 > len(r.ConnectedService.Owner.OwnedRunbooks) {
						r.ConnectedService.Owner.OwnedRunbooks = append(r.ConnectedService.Owner.OwnedRunbooks, ownedRunbooks3)
					} else {
						r.ConnectedService.Owner.OwnedRunbooks[ownedRunbooksCount1].AttachmentRule = ownedRunbooks3.AttachmentRule
						r.ConnectedService.Owner.OwnedRunbooks[ownedRunbooksCount1].Categories = ownedRunbooks3.Categories
						r.ConnectedService.Owner.OwnedRunbooks[ownedRunbooksCount1].CreatedAt = ownedRunbooks3.CreatedAt
						r.ConnectedService.Owner.OwnedRunbooks[ownedRunbooksCount1].Description = ownedRunbooks3.Description
						r.ConnectedService.Owner.OwnedRunbooks[ownedRunbooksCount1].ID = ownedRunbooks3.ID
						r.ConnectedService.Owner.OwnedRunbooks[ownedRunbooksCount1].Name = ownedRunbooks3.Name
						r.ConnectedService.Owner.OwnedRunbooks[ownedRunbooksCount1].Owner = ownedRunbooks3.Owner
						r.ConnectedService.Owner.OwnedRunbooks[ownedRunbooksCount1].Summary = ownedRunbooks3.Summary
						r.ConnectedService.Owner.OwnedRunbooks[ownedRunbooksCount1].Type = ownedRunbooks3.Type
						r.ConnectedService.Owner.OwnedRunbooks[ownedRunbooksCount1].UpdatedAt = ownedRunbooks3.UpdatedAt
					}
				}
				r.ConnectedService.Owner.SignalsIcalURL = types.StringPointerValue(resp.ConnectedService.Owner.SignalsIcalURL)
				if resp.ConnectedService.Owner.SlackChannel == nil {
					r.ConnectedService.Owner.SlackChannel = nil
				} else {
					r.ConnectedService.Owner.SlackChannel = &tfTypes.IntegrationsSlackSlackChannelEntity{}
					r.ConnectedService.Owner.SlackChannel.ID = types.StringPointerValue(resp.ConnectedService.Owner.SlackChannel.ID)
					r.ConnectedService.Owner.SlackChannel.Name = types.StringPointerValue(resp.ConnectedService.Owner.SlackChannel.Name)
					r.ConnectedService.Owner.SlackChannel.SlackChannelID = types.StringPointerValue(resp.ConnectedService.Owner.SlackChannel.SlackChannelID)
				}
				r.ConnectedService.Owner.Slug = types.StringPointerValue(resp.ConnectedService.Owner.Slug)
				if resp.ConnectedService.Owner.UpdatedAt != nil {
					r.ConnectedService.Owner.UpdatedAt = types.StringValue(resp.ConnectedService.Owner.UpdatedAt.Format(time.RFC3339Nano))
				} else {
					r.ConnectedService.Owner.UpdatedAt = types.StringNull()
				}
			}
			if resp.ConnectedService.ServiceChecklistUpdatedAt != nil {
				r.ConnectedService.ServiceChecklistUpdatedAt = types.StringValue(resp.ConnectedService.ServiceChecklistUpdatedAt.Format(time.RFC3339Nano))
			} else {
				r.ConnectedService.ServiceChecklistUpdatedAt = types.StringNull()
			}
			if resp.ConnectedService.ServiceTier != nil {
				r.ConnectedService.ServiceTier = types.Int64Value(int64(*resp.ConnectedService.ServiceTier))
			} else {
				r.ConnectedService.ServiceTier = types.Int64Null()
			}
			r.ConnectedService.Slug = types.StringPointerValue(resp.ConnectedService.Slug)
			r.ConnectedService.Teams = []tfTypes.TeamEntity{}
			if len(r.ConnectedService.Teams) > len(resp.ConnectedService.Teams) {
				r.ConnectedService.Teams = r.ConnectedService.Teams[:len(resp.ConnectedService.Teams)]
			}
			for teamsCount, teamsItem := range resp.ConnectedService.Teams {
				var teams1 tfTypes.TeamEntity
				if teamsItem.CreatedAt != nil {
					teams1.CreatedAt = types.StringValue(teamsItem.CreatedAt.Format(time.RFC3339Nano))
				} else {
					teams1.CreatedAt = types.StringNull()
				}
				if teamsItem.CreatedBy == nil {
					teams1.CreatedBy = nil
				} else {
					teams1.CreatedBy = &tfTypes.AuthorEntity{}
					teams1.CreatedBy.Email = types.StringPointerValue(teamsItem.CreatedBy.Email)
					teams1.CreatedBy.ID = types.StringPointerValue(teamsItem.CreatedBy.ID)
					teams1.CreatedBy.Name = types.StringPointerValue(teamsItem.CreatedBy.Name)
					teams1.CreatedBy.Source = types.StringPointerValue(teamsItem.CreatedBy.Source)
				}
				teams1.Description = types.StringPointerValue(teamsItem.Description)
				teams1.Functionalities = []tfTypes.FunctionalityEntity{}
				for functionalitiesCount3, functionalitiesItem3 := range teamsItem.Functionalities {
					var functionalities7 tfTypes.FunctionalityEntity
					functionalities7.ActiveIncidents = []types.String{}
					for _, v := range functionalitiesItem3.ActiveIncidents {
						functionalities7.ActiveIncidents = append(functionalities7.ActiveIncidents, types.StringValue(v))
					}
					functionalities7.AlertOnAdd = types.BoolPointerValue(functionalitiesItem3.AlertOnAdd)
					functionalities7.AutoAddRespondingTeam = types.BoolPointerValue(functionalitiesItem3.AutoAddRespondingTeam)
					if functionalitiesItem3.CreatedAt != nil {
						functionalities7.CreatedAt = types.StringValue(functionalitiesItem3.CreatedAt.Format(time.RFC3339Nano))
					} else {
						functionalities7.CreatedAt = types.StringNull()
					}
					functionalities7.Description = types.StringPointerValue(functionalitiesItem3.Description)
					functionalities7.ExternalResources = []tfTypes.ExternalResourceEntity{}
					for externalResourcesCount6, externalResourcesItem6 := range functionalitiesItem3.ExternalResources {
						var externalResources13 tfTypes.ExternalResourceEntity
						externalResources13.ConnectionID = types.StringPointerValue(externalResourcesItem6.ConnectionID)
						externalResources13.ConnectionName = types.StringPointerValue(externalResourcesItem6.ConnectionName)
						externalResources13.ConnectionType = types.StringPointerValue(externalResourcesItem6.ConnectionType)
						if externalResourcesItem6.CreatedAt != nil {
							externalResources13.CreatedAt = types.StringValue(externalResourcesItem6.CreatedAt.Format(time.RFC3339Nano))
						} else {
							externalResources13.CreatedAt = types.StringNull()
						}
						externalResources13.Name = types.StringPointerValue(externalResourcesItem6.Name)
						externalResources13.RemoteID = types.StringPointerValue(externalResourcesItem6.RemoteID)
						externalResources13.RemoteURL = types.StringPointerValue(externalResourcesItem6.RemoteURL)
						if externalResourcesItem6.UpdatedAt != nil {
							externalResources13.UpdatedAt = types.StringValue(externalResourcesItem6.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							externalResources13.UpdatedAt = types.StringNull()
						}
						if externalResourcesCount6+1 > len(functionalities7.ExternalResources) {
							functionalities7.ExternalResources = append(functionalities7.ExternalResources, externalResources13)
						} else {
							functionalities7.ExternalResources[externalResourcesCount6].ConnectionID = externalResources13.ConnectionID
							functionalities7.ExternalResources[externalResourcesCount6].ConnectionName = externalResources13.ConnectionName
							functionalities7.ExternalResources[externalResourcesCount6].ConnectionType = externalResources13.ConnectionType
							functionalities7.ExternalResources[externalResourcesCount6].CreatedAt = externalResources13.CreatedAt
							functionalities7.ExternalResources[externalResourcesCount6].Name = externalResources13.Name
							functionalities7.ExternalResources[externalResourcesCount6].RemoteID = externalResources13.RemoteID
							functionalities7.ExternalResources[externalResourcesCount6].RemoteURL = externalResources13.RemoteURL
							functionalities7.ExternalResources[externalResourcesCount6].UpdatedAt = externalResources13.UpdatedAt
						}
					}
					functionalities7.ID = types.StringPointerValue(functionalitiesItem3.ID)
					if len(functionalitiesItem3.Labels) > 0 {
						functionalities7.Labels = make(map[string]types.String)
						for key6, value8 := range functionalitiesItem3.Labels {
							functionalities7.Labels[key6] = types.StringValue(value8)
						}
					}
					functionalities7.Links = []tfTypes.LinksEntity{}
					for linksCount6, linksItem6 := range functionalitiesItem3.Links {
						var links13 tfTypes.LinksEntity
						links13.HrefURL = types.StringPointerValue(linksItem6.HrefURL)
						links13.IconURL = types.StringPointerValue(linksItem6.IconURL)
						links13.ID = types.StringPointerValue(linksItem6.ID)
						links13.Name = types.StringPointerValue(linksItem6.Name)
						if linksCount6+1 > len(functionalities7.Links) {
							functionalities7.Links = append(functionalities7.Links, links13)
						} else {
							functionalities7.Links[linksCount6].HrefURL = links13.HrefURL
							functionalities7.Links[linksCount6].IconURL = links13.IconURL
							functionalities7.Links[linksCount6].ID = links13.ID
							functionalities7.Links[linksCount6].Name = links13.Name
						}
					}
					functionalities7.Name = types.StringPointerValue(functionalitiesItem3.Name)
					if functionalitiesItem3.Owner == nil {
						functionalities7.Owner = nil
					} else {
						functionalities7.Owner = &tfTypes.TeamEntity1{}
					}
					functionalities7.Slug = types.StringPointerValue(functionalitiesItem3.Slug)
					if functionalitiesItem3.UpdatedAt != nil {
						functionalities7.UpdatedAt = types.StringValue(functionalitiesItem3.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						functionalities7.UpdatedAt = types.StringNull()
					}
					if functionalitiesItem3.UpdatedBy == nil {
						functionalities7.UpdatedBy = nil
					} else {
						functionalities7.UpdatedBy = &tfTypes.AuthorEntity{}
						functionalities7.UpdatedBy.Email = types.StringPointerValue(functionalitiesItem3.UpdatedBy.Email)
						functionalities7.UpdatedBy.ID = types.StringPointerValue(functionalitiesItem3.UpdatedBy.ID)
						functionalities7.UpdatedBy.Name = types.StringPointerValue(functionalitiesItem3.UpdatedBy.Name)
						functionalities7.UpdatedBy.Source = types.StringPointerValue(functionalitiesItem3.UpdatedBy.Source)
					}
					if functionalitiesCount3+1 > len(teams1.Functionalities) {
						teams1.Functionalities = append(teams1.Functionalities, functionalities7)
					} else {
						teams1.Functionalities[functionalitiesCount3].ActiveIncidents = functionalities7.ActiveIncidents
						teams1.Functionalities[functionalitiesCount3].AlertOnAdd = functionalities7.AlertOnAdd
						teams1.Functionalities[functionalitiesCount3].AutoAddRespondingTeam = functionalities7.AutoAddRespondingTeam
						teams1.Functionalities[functionalitiesCount3].CreatedAt = functionalities7.CreatedAt
						teams1.Functionalities[functionalitiesCount3].Description = functionalities7.Description
						teams1.Functionalities[functionalitiesCount3].ExternalResources = functionalities7.ExternalResources
						teams1.Functionalities[functionalitiesCount3].ID = functionalities7.ID
						teams1.Functionalities[functionalitiesCount3].Labels = functionalities7.Labels
						teams1.Functionalities[functionalitiesCount3].Links = functionalities7.Links
						teams1.Functionalities[functionalitiesCount3].Name = functionalities7.Name
						teams1.Functionalities[functionalitiesCount3].Owner = functionalities7.Owner
						teams1.Functionalities[functionalitiesCount3].Slug = functionalities7.Slug
						teams1.Functionalities[functionalitiesCount3].UpdatedAt = functionalities7.UpdatedAt
						teams1.Functionalities[functionalitiesCount3].UpdatedBy = functionalities7.UpdatedBy
					}
				}
				teams1.ID = types.StringPointerValue(teamsItem.ID)
				teams1.Memberships = []tfTypes.MembershipEntity{}
				for membershipsCount2, membershipsItem2 := range teamsItem.Memberships {
					var memberships5 tfTypes.MembershipEntity
					if membershipsItem2.DefaultIncidentRole == nil {
						memberships5.DefaultIncidentRole = nil
					} else {
						memberships5.DefaultIncidentRole = &tfTypes.IncidentRoleEntity{}
						if membershipsItem2.DefaultIncidentRole.CreatedAt != nil {
							memberships5.DefaultIncidentRole.CreatedAt = types.StringValue(membershipsItem2.DefaultIncidentRole.CreatedAt.Format(time.RFC3339Nano))
						} else {
							memberships5.DefaultIncidentRole.CreatedAt = types.StringNull()
						}
						memberships5.DefaultIncidentRole.Description = types.StringPointerValue(membershipsItem2.DefaultIncidentRole.Description)
						if membershipsItem2.DefaultIncidentRole.DiscardedAt != nil {
							memberships5.DefaultIncidentRole.DiscardedAt = types.StringValue(membershipsItem2.DefaultIncidentRole.DiscardedAt.Format(time.RFC3339Nano))
						} else {
							memberships5.DefaultIncidentRole.DiscardedAt = types.StringNull()
						}
						memberships5.DefaultIncidentRole.ID = types.StringPointerValue(membershipsItem2.DefaultIncidentRole.ID)
						memberships5.DefaultIncidentRole.Name = types.StringPointerValue(membershipsItem2.DefaultIncidentRole.Name)
						memberships5.DefaultIncidentRole.Summary = types.StringPointerValue(membershipsItem2.DefaultIncidentRole.Summary)
						if membershipsItem2.DefaultIncidentRole.UpdatedAt != nil {
							memberships5.DefaultIncidentRole.UpdatedAt = types.StringValue(membershipsItem2.DefaultIncidentRole.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							memberships5.DefaultIncidentRole.UpdatedAt = types.StringNull()
						}
					}
					if membershipsItem2.Schedule == nil {
						memberships5.Schedule = nil
					} else {
						memberships5.Schedule = &tfTypes.ScheduleEntity{}
						memberships5.Schedule.Discarded = types.BoolPointerValue(membershipsItem2.Schedule.Discarded)
						memberships5.Schedule.ID = types.StringPointerValue(membershipsItem2.Schedule.ID)
						memberships5.Schedule.Integration = types.StringPointerValue(membershipsItem2.Schedule.Integration)
						memberships5.Schedule.Name = types.StringPointerValue(membershipsItem2.Schedule.Name)
					}
					if membershipsItem2.User == nil {
						memberships5.User = nil
					} else {
						memberships5.User = &tfTypes.UserEntity{}
						if membershipsItem2.User.CreatedAt != nil {
							memberships5.User.CreatedAt = types.StringValue(membershipsItem2.User.CreatedAt.Format(time.RFC3339Nano))
						} else {
							memberships5.User.CreatedAt = types.StringNull()
						}
						memberships5.User.Email = types.StringPointerValue(membershipsItem2.User.Email)
						memberships5.User.ID = types.StringPointerValue(membershipsItem2.User.ID)
						memberships5.User.Name = types.StringPointerValue(membershipsItem2.User.Name)
						memberships5.User.SignalsEnabledNotificationTypes = []types.String{}
						for _, v := range membershipsItem2.User.SignalsEnabledNotificationTypes {
							memberships5.User.SignalsEnabledNotificationTypes = append(memberships5.User.SignalsEnabledNotificationTypes, types.StringValue(v))
						}
						memberships5.User.SlackLinked = types.BoolPointerValue(membershipsItem2.User.SlackLinked)
						memberships5.User.SlackUserID = types.StringPointerValue(membershipsItem2.User.SlackUserID)
						if membershipsItem2.User.UpdatedAt != nil {
							memberships5.User.UpdatedAt = types.StringValue(membershipsItem2.User.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							memberships5.User.UpdatedAt = types.StringNull()
						}
					}
					if membershipsCount2+1 > len(teams1.Memberships) {
						teams1.Memberships = append(teams1.Memberships, memberships5)
					} else {
						teams1.Memberships[membershipsCount2].DefaultIncidentRole = memberships5.DefaultIncidentRole
						teams1.Memberships[membershipsCount2].Schedule = memberships5.Schedule
						teams1.Memberships[membershipsCount2].User = memberships5.User
					}
				}
				if teamsItem.MsTeamsChannel == nil {
					teams1.MsTeamsChannel = nil
				} else {
					teams1.MsTeamsChannel = &tfTypes.IntegrationsMicrosoftTeamsV2ChannelEntity{}
					teams1.MsTeamsChannel.ChannelID = types.StringPointerValue(teamsItem.MsTeamsChannel.ChannelID)
					teams1.MsTeamsChannel.ChannelName = types.StringPointerValue(teamsItem.MsTeamsChannel.ChannelName)
					teams1.MsTeamsChannel.ChannelURL = types.StringPointerValue(teamsItem.MsTeamsChannel.ChannelURL)
					teams1.MsTeamsChannel.ID = types.StringPointerValue(teamsItem.MsTeamsChannel.ID)
					teams1.MsTeamsChannel.MsTeamID = types.StringPointerValue(teamsItem.MsTeamsChannel.MsTeamID)
					teams1.MsTeamsChannel.Status = types.StringPointerValue(teamsItem.MsTeamsChannel.Status)
					teams1.MsTeamsChannel.TeamName = types.StringPointerValue(teamsItem.MsTeamsChannel.TeamName)
				}
				teams1.Name = types.StringPointerValue(teamsItem.Name)
				teams1.OwnedFunctionalities = []tfTypes.FunctionalityEntity{}
				for ownedFunctionalitiesCount2, ownedFunctionalitiesItem2 := range teamsItem.OwnedFunctionalities {
					var ownedFunctionalities5 tfTypes.FunctionalityEntity
					ownedFunctionalities5.ActiveIncidents = []types.String{}
					for _, v := range ownedFunctionalitiesItem2.ActiveIncidents {
						ownedFunctionalities5.ActiveIncidents = append(ownedFunctionalities5.ActiveIncidents, types.StringValue(v))
					}
					ownedFunctionalities5.AlertOnAdd = types.BoolPointerValue(ownedFunctionalitiesItem2.AlertOnAdd)
					ownedFunctionalities5.AutoAddRespondingTeam = types.BoolPointerValue(ownedFunctionalitiesItem2.AutoAddRespondingTeam)
					if ownedFunctionalitiesItem2.CreatedAt != nil {
						ownedFunctionalities5.CreatedAt = types.StringValue(ownedFunctionalitiesItem2.CreatedAt.Format(time.RFC3339Nano))
					} else {
						ownedFunctionalities5.CreatedAt = types.StringNull()
					}
					ownedFunctionalities5.Description = types.StringPointerValue(ownedFunctionalitiesItem2.Description)
					ownedFunctionalities5.ExternalResources = []tfTypes.ExternalResourceEntity{}
					for externalResourcesCount7, externalResourcesItem7 := range ownedFunctionalitiesItem2.ExternalResources {
						var externalResources15 tfTypes.ExternalResourceEntity
						externalResources15.ConnectionID = types.StringPointerValue(externalResourcesItem7.ConnectionID)
						externalResources15.ConnectionName = types.StringPointerValue(externalResourcesItem7.ConnectionName)
						externalResources15.ConnectionType = types.StringPointerValue(externalResourcesItem7.ConnectionType)
						if externalResourcesItem7.CreatedAt != nil {
							externalResources15.CreatedAt = types.StringValue(externalResourcesItem7.CreatedAt.Format(time.RFC3339Nano))
						} else {
							externalResources15.CreatedAt = types.StringNull()
						}
						externalResources15.Name = types.StringPointerValue(externalResourcesItem7.Name)
						externalResources15.RemoteID = types.StringPointerValue(externalResourcesItem7.RemoteID)
						externalResources15.RemoteURL = types.StringPointerValue(externalResourcesItem7.RemoteURL)
						if externalResourcesItem7.UpdatedAt != nil {
							externalResources15.UpdatedAt = types.StringValue(externalResourcesItem7.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							externalResources15.UpdatedAt = types.StringNull()
						}
						if externalResourcesCount7+1 > len(ownedFunctionalities5.ExternalResources) {
							ownedFunctionalities5.ExternalResources = append(ownedFunctionalities5.ExternalResources, externalResources15)
						} else {
							ownedFunctionalities5.ExternalResources[externalResourcesCount7].ConnectionID = externalResources15.ConnectionID
							ownedFunctionalities5.ExternalResources[externalResourcesCount7].ConnectionName = externalResources15.ConnectionName
							ownedFunctionalities5.ExternalResources[externalResourcesCount7].ConnectionType = externalResources15.ConnectionType
							ownedFunctionalities5.ExternalResources[externalResourcesCount7].CreatedAt = externalResources15.CreatedAt
							ownedFunctionalities5.ExternalResources[externalResourcesCount7].Name = externalResources15.Name
							ownedFunctionalities5.ExternalResources[externalResourcesCount7].RemoteID = externalResources15.RemoteID
							ownedFunctionalities5.ExternalResources[externalResourcesCount7].RemoteURL = externalResources15.RemoteURL
							ownedFunctionalities5.ExternalResources[externalResourcesCount7].UpdatedAt = externalResources15.UpdatedAt
						}
					}
					ownedFunctionalities5.ID = types.StringPointerValue(ownedFunctionalitiesItem2.ID)
					if len(ownedFunctionalitiesItem2.Labels) > 0 {
						ownedFunctionalities5.Labels = make(map[string]types.String)
						for key7, value9 := range ownedFunctionalitiesItem2.Labels {
							ownedFunctionalities5.Labels[key7] = types.StringValue(value9)
						}
					}
					ownedFunctionalities5.Links = []tfTypes.LinksEntity{}
					for linksCount7, linksItem7 := range ownedFunctionalitiesItem2.Links {
						var links15 tfTypes.LinksEntity
						links15.HrefURL = types.StringPointerValue(linksItem7.HrefURL)
						links15.IconURL = types.StringPointerValue(linksItem7.IconURL)
						links15.ID = types.StringPointerValue(linksItem7.ID)
						links15.Name = types.StringPointerValue(linksItem7.Name)
						if linksCount7+1 > len(ownedFunctionalities5.Links) {
							ownedFunctionalities5.Links = append(ownedFunctionalities5.Links, links15)
						} else {
							ownedFunctionalities5.Links[linksCount7].HrefURL = links15.HrefURL
							ownedFunctionalities5.Links[linksCount7].IconURL = links15.IconURL
							ownedFunctionalities5.Links[linksCount7].ID = links15.ID
							ownedFunctionalities5.Links[linksCount7].Name = links15.Name
						}
					}
					ownedFunctionalities5.Name = types.StringPointerValue(ownedFunctionalitiesItem2.Name)
					if ownedFunctionalitiesItem2.Owner == nil {
						ownedFunctionalities5.Owner = nil
					} else {
						ownedFunctionalities5.Owner = &tfTypes.TeamEntity1{}
					}
					ownedFunctionalities5.Slug = types.StringPointerValue(ownedFunctionalitiesItem2.Slug)
					if ownedFunctionalitiesItem2.UpdatedAt != nil {
						ownedFunctionalities5.UpdatedAt = types.StringValue(ownedFunctionalitiesItem2.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						ownedFunctionalities5.UpdatedAt = types.StringNull()
					}
					if ownedFunctionalitiesItem2.UpdatedBy == nil {
						ownedFunctionalities5.UpdatedBy = nil
					} else {
						ownedFunctionalities5.UpdatedBy = &tfTypes.AuthorEntity{}
						ownedFunctionalities5.UpdatedBy.Email = types.StringPointerValue(ownedFunctionalitiesItem2.UpdatedBy.Email)
						ownedFunctionalities5.UpdatedBy.ID = types.StringPointerValue(ownedFunctionalitiesItem2.UpdatedBy.ID)
						ownedFunctionalities5.UpdatedBy.Name = types.StringPointerValue(ownedFunctionalitiesItem2.UpdatedBy.Name)
						ownedFunctionalities5.UpdatedBy.Source = types.StringPointerValue(ownedFunctionalitiesItem2.UpdatedBy.Source)
					}
					if ownedFunctionalitiesCount2+1 > len(teams1.OwnedFunctionalities) {
						teams1.OwnedFunctionalities = append(teams1.OwnedFunctionalities, ownedFunctionalities5)
					} else {
						teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].ActiveIncidents = ownedFunctionalities5.ActiveIncidents
						teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].AlertOnAdd = ownedFunctionalities5.AlertOnAdd
						teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].AutoAddRespondingTeam = ownedFunctionalities5.AutoAddRespondingTeam
						teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].CreatedAt = ownedFunctionalities5.CreatedAt
						teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].Description = ownedFunctionalities5.Description
						teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].ExternalResources = ownedFunctionalities5.ExternalResources
						teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].ID = ownedFunctionalities5.ID
						teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].Labels = ownedFunctionalities5.Labels
						teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].Links = ownedFunctionalities5.Links
						teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].Name = ownedFunctionalities5.Name
						teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].Owner = ownedFunctionalities5.Owner
						teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].Slug = ownedFunctionalities5.Slug
						teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].UpdatedAt = ownedFunctionalities5.UpdatedAt
						teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].UpdatedBy = ownedFunctionalities5.UpdatedBy
					}
				}
				teams1.OwnedRunbooks = []tfTypes.SlimRunbookEntity{}
				for ownedRunbooksCount2, ownedRunbooksItem2 := range teamsItem.OwnedRunbooks {
					var ownedRunbooks5 tfTypes.SlimRunbookEntity
					if ownedRunbooksItem2.AttachmentRule == nil {
						ownedRunbooks5.AttachmentRule = nil
					} else {
						ownedRunbooks5.AttachmentRule = &tfTypes.RulesRuleEntity{}
						if ownedRunbooksItem2.AttachmentRule.Logic == nil {
							ownedRunbooks5.AttachmentRule.Logic = nil
						} else {
							ownedRunbooks5.AttachmentRule.Logic = &tfTypes.TeamEntity1{}
						}
						if ownedRunbooksItem2.AttachmentRule.UserData == nil {
							ownedRunbooks5.AttachmentRule.UserData = nil
						} else {
							ownedRunbooks5.AttachmentRule.UserData = &tfTypes.FHTypesGenericEntity{}
							ownedRunbooks5.AttachmentRule.UserData.Label = types.StringPointerValue(ownedRunbooksItem2.AttachmentRule.UserData.Label)
							ownedRunbooks5.AttachmentRule.UserData.Type = types.StringPointerValue(ownedRunbooksItem2.AttachmentRule.UserData.Type)
							ownedRunbooks5.AttachmentRule.UserData.Value = types.StringPointerValue(ownedRunbooksItem2.AttachmentRule.UserData.Value)
						}
					}
					ownedRunbooks5.Categories = types.StringPointerValue(ownedRunbooksItem2.Categories)
					if ownedRunbooksItem2.CreatedAt != nil {
						ownedRunbooks5.CreatedAt = types.StringValue(ownedRunbooksItem2.CreatedAt.Format(time.RFC3339Nano))
					} else {
						ownedRunbooks5.CreatedAt = types.StringNull()
					}
					ownedRunbooks5.Description = types.StringPointerValue(ownedRunbooksItem2.Description)
					ownedRunbooks5.ID = types.StringPointerValue(ownedRunbooksItem2.ID)
					ownedRunbooks5.Name = types.StringPointerValue(ownedRunbooksItem2.Name)
					if ownedRunbooksItem2.Owner == nil {
						ownedRunbooks5.Owner = nil
					} else {
						ownedRunbooks5.Owner = &tfTypes.TeamEntity1{}
					}
					ownedRunbooks5.Summary = types.StringPointerValue(ownedRunbooksItem2.Summary)
					ownedRunbooks5.Type = types.StringPointerValue(ownedRunbooksItem2.Type)
					if ownedRunbooksItem2.UpdatedAt != nil {
						ownedRunbooks5.UpdatedAt = types.StringValue(ownedRunbooksItem2.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						ownedRunbooks5.UpdatedAt = types.StringNull()
					}
					if ownedRunbooksCount2+1 > len(teams1.OwnedRunbooks) {
						teams1.OwnedRunbooks = append(teams1.OwnedRunbooks, ownedRunbooks5)
					} else {
						teams1.OwnedRunbooks[ownedRunbooksCount2].AttachmentRule = ownedRunbooks5.AttachmentRule
						teams1.OwnedRunbooks[ownedRunbooksCount2].Categories = ownedRunbooks5.Categories
						teams1.OwnedRunbooks[ownedRunbooksCount2].CreatedAt = ownedRunbooks5.CreatedAt
						teams1.OwnedRunbooks[ownedRunbooksCount2].Description = ownedRunbooks5.Description
						teams1.OwnedRunbooks[ownedRunbooksCount2].ID = ownedRunbooks5.ID
						teams1.OwnedRunbooks[ownedRunbooksCount2].Name = ownedRunbooks5.Name
						teams1.OwnedRunbooks[ownedRunbooksCount2].Owner = ownedRunbooks5.Owner
						teams1.OwnedRunbooks[ownedRunbooksCount2].Summary = ownedRunbooks5.Summary
						teams1.OwnedRunbooks[ownedRunbooksCount2].Type = ownedRunbooks5.Type
						teams1.OwnedRunbooks[ownedRunbooksCount2].UpdatedAt = ownedRunbooks5.UpdatedAt
					}
				}
				teams1.SignalsIcalURL = types.StringPointerValue(teamsItem.SignalsIcalURL)
				if teamsItem.SlackChannel == nil {
					teams1.SlackChannel = nil
				} else {
					teams1.SlackChannel = &tfTypes.IntegrationsSlackSlackChannelEntity{}
					teams1.SlackChannel.ID = types.StringPointerValue(teamsItem.SlackChannel.ID)
					teams1.SlackChannel.Name = types.StringPointerValue(teamsItem.SlackChannel.Name)
					teams1.SlackChannel.SlackChannelID = types.StringPointerValue(teamsItem.SlackChannel.SlackChannelID)
				}
				teams1.Slug = types.StringPointerValue(teamsItem.Slug)
				if teamsItem.UpdatedAt != nil {
					teams1.UpdatedAt = types.StringValue(teamsItem.UpdatedAt.Format(time.RFC3339Nano))
				} else {
					teams1.UpdatedAt = types.StringNull()
				}
				if teamsCount+1 > len(r.ConnectedService.Teams) {
					r.ConnectedService.Teams = append(r.ConnectedService.Teams, teams1)
				} else {
					r.ConnectedService.Teams[teamsCount].CreatedAt = teams1.CreatedAt
					r.ConnectedService.Teams[teamsCount].CreatedBy = teams1.CreatedBy
					r.ConnectedService.Teams[teamsCount].Description = teams1.Description
					r.ConnectedService.Teams[teamsCount].Functionalities = teams1.Functionalities
					r.ConnectedService.Teams[teamsCount].ID = teams1.ID
					r.ConnectedService.Teams[teamsCount].Memberships = teams1.Memberships
					r.ConnectedService.Teams[teamsCount].MsTeamsChannel = teams1.MsTeamsChannel
					r.ConnectedService.Teams[teamsCount].Name = teams1.Name
					r.ConnectedService.Teams[teamsCount].OwnedFunctionalities = teams1.OwnedFunctionalities
					r.ConnectedService.Teams[teamsCount].OwnedRunbooks = teams1.OwnedRunbooks
					r.ConnectedService.Teams[teamsCount].SignalsIcalURL = teams1.SignalsIcalURL
					r.ConnectedService.Teams[teamsCount].SlackChannel = teams1.SlackChannel
					r.ConnectedService.Teams[teamsCount].Slug = teams1.Slug
					r.ConnectedService.Teams[teamsCount].UpdatedAt = teams1.UpdatedAt
				}
			}
			if resp.ConnectedService.UpdatedAt != nil {
				r.ConnectedService.UpdatedAt = types.StringValue(resp.ConnectedService.UpdatedAt.Format(time.RFC3339Nano))
			} else {
				r.ConnectedService.UpdatedAt = types.StringNull()
			}
			if resp.ConnectedService.UpdatedBy == nil {
				r.ConnectedService.UpdatedBy = nil
			} else {
				r.ConnectedService.UpdatedBy = &tfTypes.AuthorEntity{}
				r.ConnectedService.UpdatedBy.Email = types.StringPointerValue(resp.ConnectedService.UpdatedBy.Email)
				r.ConnectedService.UpdatedBy.ID = types.StringPointerValue(resp.ConnectedService.UpdatedBy.ID)
				r.ConnectedService.UpdatedBy.Name = types.StringPointerValue(resp.ConnectedService.UpdatedBy.Name)
				r.ConnectedService.UpdatedBy.Source = types.StringPointerValue(resp.ConnectedService.UpdatedBy.Source)
			}
		}
		if resp.CreatedAt != nil {
			r.CreatedAt = types.StringValue(resp.CreatedAt.Format(time.RFC3339Nano))
		} else {
			r.CreatedAt = types.StringNull()
		}
		r.ID = types.StringPointerValue(resp.ID)
		r.Notes = types.StringPointerValue(resp.Notes)
		if resp.Service == nil {
			r.Service = nil
		} else {
			r.Service = &tfTypes.ServiceEntity{}
			r.Service.ActiveIncidents = []types.String{}
			for _, v := range resp.Service.ActiveIncidents {
				r.Service.ActiveIncidents = append(r.Service.ActiveIncidents, types.StringValue(v))
			}
			r.Service.AlertOnAdd = types.BoolPointerValue(resp.Service.AlertOnAdd)
			r.Service.AllowedParams = []types.String{}
			for _, v := range resp.Service.AllowedParams {
				r.Service.AllowedParams = append(r.Service.AllowedParams, types.StringValue(v))
			}
			r.Service.AutoAddRespondingTeam = types.BoolPointerValue(resp.Service.AutoAddRespondingTeam)
			r.Service.Checklists = []tfTypes.Checklists{}
			if len(r.Service.Checklists) > len(resp.Service.Checklists) {
				r.Service.Checklists = r.Service.Checklists[:len(resp.Service.Checklists)]
			}
			for checklistsCount1, checklistsItem1 := range resp.Service.Checklists {
				var checklists3 tfTypes.Checklists
				checklists3.Checks = []tfTypes.ChecklistCheckEntity{}
				for checksCount1, checksItem1 := range checklistsItem1.Checks {
					var checks3 tfTypes.ChecklistCheckEntity
					checks3.Description = types.StringPointerValue(checksItem1.Description)
					checks3.ID = types.StringPointerValue(checksItem1.ID)
					checks3.Name = types.StringPointerValue(checksItem1.Name)
					checks3.Status = types.BoolPointerValue(checksItem1.Status)
					if checksCount1+1 > len(checklists3.Checks) {
						checklists3.Checks = append(checklists3.Checks, checks3)
					} else {
						checklists3.Checks[checksCount1].Description = checks3.Description
						checklists3.Checks[checksCount1].ID = checks3.ID
						checklists3.Checks[checksCount1].Name = checks3.Name
						checklists3.Checks[checksCount1].Status = checks3.Status
					}
				}
				checklists3.CreatedAt = types.StringPointerValue(checklistsItem1.CreatedAt)
				checklists3.Description = types.StringPointerValue(checklistsItem1.Description)
				checklists3.ID = types.StringPointerValue(checklistsItem1.ID)
				checklists3.Name = types.StringPointerValue(checklistsItem1.Name)
				if checklistsItem1.Owner == nil {
					checklists3.Owner = nil
				} else {
					checklists3.Owner = &tfTypes.TeamEntity{}
					if checklistsItem1.Owner.CreatedAt != nil {
						checklists3.Owner.CreatedAt = types.StringValue(checklistsItem1.Owner.CreatedAt.Format(time.RFC3339Nano))
					} else {
						checklists3.Owner.CreatedAt = types.StringNull()
					}
					if checklistsItem1.Owner.CreatedBy == nil {
						checklists3.Owner.CreatedBy = nil
					} else {
						checklists3.Owner.CreatedBy = &tfTypes.AuthorEntity{}
						checklists3.Owner.CreatedBy.Email = types.StringPointerValue(checklistsItem1.Owner.CreatedBy.Email)
						checklists3.Owner.CreatedBy.ID = types.StringPointerValue(checklistsItem1.Owner.CreatedBy.ID)
						checklists3.Owner.CreatedBy.Name = types.StringPointerValue(checklistsItem1.Owner.CreatedBy.Name)
						checklists3.Owner.CreatedBy.Source = types.StringPointerValue(checklistsItem1.Owner.CreatedBy.Source)
					}
					checklists3.Owner.Description = types.StringPointerValue(checklistsItem1.Owner.Description)
					checklists3.Owner.Functionalities = []tfTypes.FunctionalityEntity{}
					for functionalitiesCount4, functionalitiesItem4 := range checklistsItem1.Owner.Functionalities {
						var functionalities9 tfTypes.FunctionalityEntity
						functionalities9.ActiveIncidents = []types.String{}
						for _, v := range functionalitiesItem4.ActiveIncidents {
							functionalities9.ActiveIncidents = append(functionalities9.ActiveIncidents, types.StringValue(v))
						}
						functionalities9.AlertOnAdd = types.BoolPointerValue(functionalitiesItem4.AlertOnAdd)
						functionalities9.AutoAddRespondingTeam = types.BoolPointerValue(functionalitiesItem4.AutoAddRespondingTeam)
						if functionalitiesItem4.CreatedAt != nil {
							functionalities9.CreatedAt = types.StringValue(functionalitiesItem4.CreatedAt.Format(time.RFC3339Nano))
						} else {
							functionalities9.CreatedAt = types.StringNull()
						}
						functionalities9.Description = types.StringPointerValue(functionalitiesItem4.Description)
						functionalities9.ExternalResources = []tfTypes.ExternalResourceEntity{}
						for externalResourcesCount8, externalResourcesItem8 := range functionalitiesItem4.ExternalResources {
							var externalResources17 tfTypes.ExternalResourceEntity
							externalResources17.ConnectionID = types.StringPointerValue(externalResourcesItem8.ConnectionID)
							externalResources17.ConnectionName = types.StringPointerValue(externalResourcesItem8.ConnectionName)
							externalResources17.ConnectionType = types.StringPointerValue(externalResourcesItem8.ConnectionType)
							if externalResourcesItem8.CreatedAt != nil {
								externalResources17.CreatedAt = types.StringValue(externalResourcesItem8.CreatedAt.Format(time.RFC3339Nano))
							} else {
								externalResources17.CreatedAt = types.StringNull()
							}
							externalResources17.Name = types.StringPointerValue(externalResourcesItem8.Name)
							externalResources17.RemoteID = types.StringPointerValue(externalResourcesItem8.RemoteID)
							externalResources17.RemoteURL = types.StringPointerValue(externalResourcesItem8.RemoteURL)
							if externalResourcesItem8.UpdatedAt != nil {
								externalResources17.UpdatedAt = types.StringValue(externalResourcesItem8.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								externalResources17.UpdatedAt = types.StringNull()
							}
							if externalResourcesCount8+1 > len(functionalities9.ExternalResources) {
								functionalities9.ExternalResources = append(functionalities9.ExternalResources, externalResources17)
							} else {
								functionalities9.ExternalResources[externalResourcesCount8].ConnectionID = externalResources17.ConnectionID
								functionalities9.ExternalResources[externalResourcesCount8].ConnectionName = externalResources17.ConnectionName
								functionalities9.ExternalResources[externalResourcesCount8].ConnectionType = externalResources17.ConnectionType
								functionalities9.ExternalResources[externalResourcesCount8].CreatedAt = externalResources17.CreatedAt
								functionalities9.ExternalResources[externalResourcesCount8].Name = externalResources17.Name
								functionalities9.ExternalResources[externalResourcesCount8].RemoteID = externalResources17.RemoteID
								functionalities9.ExternalResources[externalResourcesCount8].RemoteURL = externalResources17.RemoteURL
								functionalities9.ExternalResources[externalResourcesCount8].UpdatedAt = externalResources17.UpdatedAt
							}
						}
						functionalities9.ID = types.StringPointerValue(functionalitiesItem4.ID)
						if len(functionalitiesItem4.Labels) > 0 {
							functionalities9.Labels = make(map[string]types.String)
							for key8, value11 := range functionalitiesItem4.Labels {
								functionalities9.Labels[key8] = types.StringValue(value11)
							}
						}
						functionalities9.Links = []tfTypes.LinksEntity{}
						for linksCount8, linksItem8 := range functionalitiesItem4.Links {
							var links17 tfTypes.LinksEntity
							links17.HrefURL = types.StringPointerValue(linksItem8.HrefURL)
							links17.IconURL = types.StringPointerValue(linksItem8.IconURL)
							links17.ID = types.StringPointerValue(linksItem8.ID)
							links17.Name = types.StringPointerValue(linksItem8.Name)
							if linksCount8+1 > len(functionalities9.Links) {
								functionalities9.Links = append(functionalities9.Links, links17)
							} else {
								functionalities9.Links[linksCount8].HrefURL = links17.HrefURL
								functionalities9.Links[linksCount8].IconURL = links17.IconURL
								functionalities9.Links[linksCount8].ID = links17.ID
								functionalities9.Links[linksCount8].Name = links17.Name
							}
						}
						functionalities9.Name = types.StringPointerValue(functionalitiesItem4.Name)
						if functionalitiesItem4.Owner == nil {
							functionalities9.Owner = nil
						} else {
							functionalities9.Owner = &tfTypes.TeamEntity1{}
						}
						functionalities9.Slug = types.StringPointerValue(functionalitiesItem4.Slug)
						if functionalitiesItem4.UpdatedAt != nil {
							functionalities9.UpdatedAt = types.StringValue(functionalitiesItem4.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							functionalities9.UpdatedAt = types.StringNull()
						}
						if functionalitiesItem4.UpdatedBy == nil {
							functionalities9.UpdatedBy = nil
						} else {
							functionalities9.UpdatedBy = &tfTypes.AuthorEntity{}
							functionalities9.UpdatedBy.Email = types.StringPointerValue(functionalitiesItem4.UpdatedBy.Email)
							functionalities9.UpdatedBy.ID = types.StringPointerValue(functionalitiesItem4.UpdatedBy.ID)
							functionalities9.UpdatedBy.Name = types.StringPointerValue(functionalitiesItem4.UpdatedBy.Name)
							functionalities9.UpdatedBy.Source = types.StringPointerValue(functionalitiesItem4.UpdatedBy.Source)
						}
						if functionalitiesCount4+1 > len(checklists3.Owner.Functionalities) {
							checklists3.Owner.Functionalities = append(checklists3.Owner.Functionalities, functionalities9)
						} else {
							checklists3.Owner.Functionalities[functionalitiesCount4].ActiveIncidents = functionalities9.ActiveIncidents
							checklists3.Owner.Functionalities[functionalitiesCount4].AlertOnAdd = functionalities9.AlertOnAdd
							checklists3.Owner.Functionalities[functionalitiesCount4].AutoAddRespondingTeam = functionalities9.AutoAddRespondingTeam
							checklists3.Owner.Functionalities[functionalitiesCount4].CreatedAt = functionalities9.CreatedAt
							checklists3.Owner.Functionalities[functionalitiesCount4].Description = functionalities9.Description
							checklists3.Owner.Functionalities[functionalitiesCount4].ExternalResources = functionalities9.ExternalResources
							checklists3.Owner.Functionalities[functionalitiesCount4].ID = functionalities9.ID
							checklists3.Owner.Functionalities[functionalitiesCount4].Labels = functionalities9.Labels
							checklists3.Owner.Functionalities[functionalitiesCount4].Links = functionalities9.Links
							checklists3.Owner.Functionalities[functionalitiesCount4].Name = functionalities9.Name
							checklists3.Owner.Functionalities[functionalitiesCount4].Owner = functionalities9.Owner
							checklists3.Owner.Functionalities[functionalitiesCount4].Slug = functionalities9.Slug
							checklists3.Owner.Functionalities[functionalitiesCount4].UpdatedAt = functionalities9.UpdatedAt
							checklists3.Owner.Functionalities[functionalitiesCount4].UpdatedBy = functionalities9.UpdatedBy
						}
					}
					checklists3.Owner.ID = types.StringPointerValue(checklistsItem1.Owner.ID)
					checklists3.Owner.Memberships = []tfTypes.MembershipEntity{}
					for membershipsCount3, membershipsItem3 := range checklistsItem1.Owner.Memberships {
						var memberships7 tfTypes.MembershipEntity
						if membershipsItem3.DefaultIncidentRole == nil {
							memberships7.DefaultIncidentRole = nil
						} else {
							memberships7.DefaultIncidentRole = &tfTypes.IncidentRoleEntity{}
							if membershipsItem3.DefaultIncidentRole.CreatedAt != nil {
								memberships7.DefaultIncidentRole.CreatedAt = types.StringValue(membershipsItem3.DefaultIncidentRole.CreatedAt.Format(time.RFC3339Nano))
							} else {
								memberships7.DefaultIncidentRole.CreatedAt = types.StringNull()
							}
							memberships7.DefaultIncidentRole.Description = types.StringPointerValue(membershipsItem3.DefaultIncidentRole.Description)
							if membershipsItem3.DefaultIncidentRole.DiscardedAt != nil {
								memberships7.DefaultIncidentRole.DiscardedAt = types.StringValue(membershipsItem3.DefaultIncidentRole.DiscardedAt.Format(time.RFC3339Nano))
							} else {
								memberships7.DefaultIncidentRole.DiscardedAt = types.StringNull()
							}
							memberships7.DefaultIncidentRole.ID = types.StringPointerValue(membershipsItem3.DefaultIncidentRole.ID)
							memberships7.DefaultIncidentRole.Name = types.StringPointerValue(membershipsItem3.DefaultIncidentRole.Name)
							memberships7.DefaultIncidentRole.Summary = types.StringPointerValue(membershipsItem3.DefaultIncidentRole.Summary)
							if membershipsItem3.DefaultIncidentRole.UpdatedAt != nil {
								memberships7.DefaultIncidentRole.UpdatedAt = types.StringValue(membershipsItem3.DefaultIncidentRole.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								memberships7.DefaultIncidentRole.UpdatedAt = types.StringNull()
							}
						}
						if membershipsItem3.Schedule == nil {
							memberships7.Schedule = nil
						} else {
							memberships7.Schedule = &tfTypes.ScheduleEntity{}
							memberships7.Schedule.Discarded = types.BoolPointerValue(membershipsItem3.Schedule.Discarded)
							memberships7.Schedule.ID = types.StringPointerValue(membershipsItem3.Schedule.ID)
							memberships7.Schedule.Integration = types.StringPointerValue(membershipsItem3.Schedule.Integration)
							memberships7.Schedule.Name = types.StringPointerValue(membershipsItem3.Schedule.Name)
						}
						if membershipsItem3.User == nil {
							memberships7.User = nil
						} else {
							memberships7.User = &tfTypes.UserEntity{}
							if membershipsItem3.User.CreatedAt != nil {
								memberships7.User.CreatedAt = types.StringValue(membershipsItem3.User.CreatedAt.Format(time.RFC3339Nano))
							} else {
								memberships7.User.CreatedAt = types.StringNull()
							}
							memberships7.User.Email = types.StringPointerValue(membershipsItem3.User.Email)
							memberships7.User.ID = types.StringPointerValue(membershipsItem3.User.ID)
							memberships7.User.Name = types.StringPointerValue(membershipsItem3.User.Name)
							memberships7.User.SignalsEnabledNotificationTypes = []types.String{}
							for _, v := range membershipsItem3.User.SignalsEnabledNotificationTypes {
								memberships7.User.SignalsEnabledNotificationTypes = append(memberships7.User.SignalsEnabledNotificationTypes, types.StringValue(v))
							}
							memberships7.User.SlackLinked = types.BoolPointerValue(membershipsItem3.User.SlackLinked)
							memberships7.User.SlackUserID = types.StringPointerValue(membershipsItem3.User.SlackUserID)
							if membershipsItem3.User.UpdatedAt != nil {
								memberships7.User.UpdatedAt = types.StringValue(membershipsItem3.User.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								memberships7.User.UpdatedAt = types.StringNull()
							}
						}
						if membershipsCount3+1 > len(checklists3.Owner.Memberships) {
							checklists3.Owner.Memberships = append(checklists3.Owner.Memberships, memberships7)
						} else {
							checklists3.Owner.Memberships[membershipsCount3].DefaultIncidentRole = memberships7.DefaultIncidentRole
							checklists3.Owner.Memberships[membershipsCount3].Schedule = memberships7.Schedule
							checklists3.Owner.Memberships[membershipsCount3].User = memberships7.User
						}
					}
					if checklistsItem1.Owner.MsTeamsChannel == nil {
						checklists3.Owner.MsTeamsChannel = nil
					} else {
						checklists3.Owner.MsTeamsChannel = &tfTypes.IntegrationsMicrosoftTeamsV2ChannelEntity{}
						checklists3.Owner.MsTeamsChannel.ChannelID = types.StringPointerValue(checklistsItem1.Owner.MsTeamsChannel.ChannelID)
						checklists3.Owner.MsTeamsChannel.ChannelName = types.StringPointerValue(checklistsItem1.Owner.MsTeamsChannel.ChannelName)
						checklists3.Owner.MsTeamsChannel.ChannelURL = types.StringPointerValue(checklistsItem1.Owner.MsTeamsChannel.ChannelURL)
						checklists3.Owner.MsTeamsChannel.ID = types.StringPointerValue(checklistsItem1.Owner.MsTeamsChannel.ID)
						checklists3.Owner.MsTeamsChannel.MsTeamID = types.StringPointerValue(checklistsItem1.Owner.MsTeamsChannel.MsTeamID)
						checklists3.Owner.MsTeamsChannel.Status = types.StringPointerValue(checklistsItem1.Owner.MsTeamsChannel.Status)
						checklists3.Owner.MsTeamsChannel.TeamName = types.StringPointerValue(checklistsItem1.Owner.MsTeamsChannel.TeamName)
					}
					checklists3.Owner.Name = types.StringPointerValue(checklistsItem1.Owner.Name)
					checklists3.Owner.OwnedFunctionalities = []tfTypes.FunctionalityEntity{}
					for ownedFunctionalitiesCount3, ownedFunctionalitiesItem3 := range checklistsItem1.Owner.OwnedFunctionalities {
						var ownedFunctionalities7 tfTypes.FunctionalityEntity
						ownedFunctionalities7.ActiveIncidents = []types.String{}
						for _, v := range ownedFunctionalitiesItem3.ActiveIncidents {
							ownedFunctionalities7.ActiveIncidents = append(ownedFunctionalities7.ActiveIncidents, types.StringValue(v))
						}
						ownedFunctionalities7.AlertOnAdd = types.BoolPointerValue(ownedFunctionalitiesItem3.AlertOnAdd)
						ownedFunctionalities7.AutoAddRespondingTeam = types.BoolPointerValue(ownedFunctionalitiesItem3.AutoAddRespondingTeam)
						if ownedFunctionalitiesItem3.CreatedAt != nil {
							ownedFunctionalities7.CreatedAt = types.StringValue(ownedFunctionalitiesItem3.CreatedAt.Format(time.RFC3339Nano))
						} else {
							ownedFunctionalities7.CreatedAt = types.StringNull()
						}
						ownedFunctionalities7.Description = types.StringPointerValue(ownedFunctionalitiesItem3.Description)
						ownedFunctionalities7.ExternalResources = []tfTypes.ExternalResourceEntity{}
						for externalResourcesCount9, externalResourcesItem9 := range ownedFunctionalitiesItem3.ExternalResources {
							var externalResources19 tfTypes.ExternalResourceEntity
							externalResources19.ConnectionID = types.StringPointerValue(externalResourcesItem9.ConnectionID)
							externalResources19.ConnectionName = types.StringPointerValue(externalResourcesItem9.ConnectionName)
							externalResources19.ConnectionType = types.StringPointerValue(externalResourcesItem9.ConnectionType)
							if externalResourcesItem9.CreatedAt != nil {
								externalResources19.CreatedAt = types.StringValue(externalResourcesItem9.CreatedAt.Format(time.RFC3339Nano))
							} else {
								externalResources19.CreatedAt = types.StringNull()
							}
							externalResources19.Name = types.StringPointerValue(externalResourcesItem9.Name)
							externalResources19.RemoteID = types.StringPointerValue(externalResourcesItem9.RemoteID)
							externalResources19.RemoteURL = types.StringPointerValue(externalResourcesItem9.RemoteURL)
							if externalResourcesItem9.UpdatedAt != nil {
								externalResources19.UpdatedAt = types.StringValue(externalResourcesItem9.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								externalResources19.UpdatedAt = types.StringNull()
							}
							if externalResourcesCount9+1 > len(ownedFunctionalities7.ExternalResources) {
								ownedFunctionalities7.ExternalResources = append(ownedFunctionalities7.ExternalResources, externalResources19)
							} else {
								ownedFunctionalities7.ExternalResources[externalResourcesCount9].ConnectionID = externalResources19.ConnectionID
								ownedFunctionalities7.ExternalResources[externalResourcesCount9].ConnectionName = externalResources19.ConnectionName
								ownedFunctionalities7.ExternalResources[externalResourcesCount9].ConnectionType = externalResources19.ConnectionType
								ownedFunctionalities7.ExternalResources[externalResourcesCount9].CreatedAt = externalResources19.CreatedAt
								ownedFunctionalities7.ExternalResources[externalResourcesCount9].Name = externalResources19.Name
								ownedFunctionalities7.ExternalResources[externalResourcesCount9].RemoteID = externalResources19.RemoteID
								ownedFunctionalities7.ExternalResources[externalResourcesCount9].RemoteURL = externalResources19.RemoteURL
								ownedFunctionalities7.ExternalResources[externalResourcesCount9].UpdatedAt = externalResources19.UpdatedAt
							}
						}
						ownedFunctionalities7.ID = types.StringPointerValue(ownedFunctionalitiesItem3.ID)
						if len(ownedFunctionalitiesItem3.Labels) > 0 {
							ownedFunctionalities7.Labels = make(map[string]types.String)
							for key9, value12 := range ownedFunctionalitiesItem3.Labels {
								ownedFunctionalities7.Labels[key9] = types.StringValue(value12)
							}
						}
						ownedFunctionalities7.Links = []tfTypes.LinksEntity{}
						for linksCount9, linksItem9 := range ownedFunctionalitiesItem3.Links {
							var links19 tfTypes.LinksEntity
							links19.HrefURL = types.StringPointerValue(linksItem9.HrefURL)
							links19.IconURL = types.StringPointerValue(linksItem9.IconURL)
							links19.ID = types.StringPointerValue(linksItem9.ID)
							links19.Name = types.StringPointerValue(linksItem9.Name)
							if linksCount9+1 > len(ownedFunctionalities7.Links) {
								ownedFunctionalities7.Links = append(ownedFunctionalities7.Links, links19)
							} else {
								ownedFunctionalities7.Links[linksCount9].HrefURL = links19.HrefURL
								ownedFunctionalities7.Links[linksCount9].IconURL = links19.IconURL
								ownedFunctionalities7.Links[linksCount9].ID = links19.ID
								ownedFunctionalities7.Links[linksCount9].Name = links19.Name
							}
						}
						ownedFunctionalities7.Name = types.StringPointerValue(ownedFunctionalitiesItem3.Name)
						if ownedFunctionalitiesItem3.Owner == nil {
							ownedFunctionalities7.Owner = nil
						} else {
							ownedFunctionalities7.Owner = &tfTypes.TeamEntity1{}
						}
						ownedFunctionalities7.Slug = types.StringPointerValue(ownedFunctionalitiesItem3.Slug)
						if ownedFunctionalitiesItem3.UpdatedAt != nil {
							ownedFunctionalities7.UpdatedAt = types.StringValue(ownedFunctionalitiesItem3.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							ownedFunctionalities7.UpdatedAt = types.StringNull()
						}
						if ownedFunctionalitiesItem3.UpdatedBy == nil {
							ownedFunctionalities7.UpdatedBy = nil
						} else {
							ownedFunctionalities7.UpdatedBy = &tfTypes.AuthorEntity{}
							ownedFunctionalities7.UpdatedBy.Email = types.StringPointerValue(ownedFunctionalitiesItem3.UpdatedBy.Email)
							ownedFunctionalities7.UpdatedBy.ID = types.StringPointerValue(ownedFunctionalitiesItem3.UpdatedBy.ID)
							ownedFunctionalities7.UpdatedBy.Name = types.StringPointerValue(ownedFunctionalitiesItem3.UpdatedBy.Name)
							ownedFunctionalities7.UpdatedBy.Source = types.StringPointerValue(ownedFunctionalitiesItem3.UpdatedBy.Source)
						}
						if ownedFunctionalitiesCount3+1 > len(checklists3.Owner.OwnedFunctionalities) {
							checklists3.Owner.OwnedFunctionalities = append(checklists3.Owner.OwnedFunctionalities, ownedFunctionalities7)
						} else {
							checklists3.Owner.OwnedFunctionalities[ownedFunctionalitiesCount3].ActiveIncidents = ownedFunctionalities7.ActiveIncidents
							checklists3.Owner.OwnedFunctionalities[ownedFunctionalitiesCount3].AlertOnAdd = ownedFunctionalities7.AlertOnAdd
							checklists3.Owner.OwnedFunctionalities[ownedFunctionalitiesCount3].AutoAddRespondingTeam = ownedFunctionalities7.AutoAddRespondingTeam
							checklists3.Owner.OwnedFunctionalities[ownedFunctionalitiesCount3].CreatedAt = ownedFunctionalities7.CreatedAt
							checklists3.Owner.OwnedFunctionalities[ownedFunctionalitiesCount3].Description = ownedFunctionalities7.Description
							checklists3.Owner.OwnedFunctionalities[ownedFunctionalitiesCount3].ExternalResources = ownedFunctionalities7.ExternalResources
							checklists3.Owner.OwnedFunctionalities[ownedFunctionalitiesCount3].ID = ownedFunctionalities7.ID
							checklists3.Owner.OwnedFunctionalities[ownedFunctionalitiesCount3].Labels = ownedFunctionalities7.Labels
							checklists3.Owner.OwnedFunctionalities[ownedFunctionalitiesCount3].Links = ownedFunctionalities7.Links
							checklists3.Owner.OwnedFunctionalities[ownedFunctionalitiesCount3].Name = ownedFunctionalities7.Name
							checklists3.Owner.OwnedFunctionalities[ownedFunctionalitiesCount3].Owner = ownedFunctionalities7.Owner
							checklists3.Owner.OwnedFunctionalities[ownedFunctionalitiesCount3].Slug = ownedFunctionalities7.Slug
							checklists3.Owner.OwnedFunctionalities[ownedFunctionalitiesCount3].UpdatedAt = ownedFunctionalities7.UpdatedAt
							checklists3.Owner.OwnedFunctionalities[ownedFunctionalitiesCount3].UpdatedBy = ownedFunctionalities7.UpdatedBy
						}
					}
					checklists3.Owner.OwnedRunbooks = []tfTypes.SlimRunbookEntity{}
					for ownedRunbooksCount3, ownedRunbooksItem3 := range checklistsItem1.Owner.OwnedRunbooks {
						var ownedRunbooks7 tfTypes.SlimRunbookEntity
						if ownedRunbooksItem3.AttachmentRule == nil {
							ownedRunbooks7.AttachmentRule = nil
						} else {
							ownedRunbooks7.AttachmentRule = &tfTypes.RulesRuleEntity{}
							if ownedRunbooksItem3.AttachmentRule.Logic == nil {
								ownedRunbooks7.AttachmentRule.Logic = nil
							} else {
								ownedRunbooks7.AttachmentRule.Logic = &tfTypes.TeamEntity1{}
							}
							if ownedRunbooksItem3.AttachmentRule.UserData == nil {
								ownedRunbooks7.AttachmentRule.UserData = nil
							} else {
								ownedRunbooks7.AttachmentRule.UserData = &tfTypes.FHTypesGenericEntity{}
								ownedRunbooks7.AttachmentRule.UserData.Label = types.StringPointerValue(ownedRunbooksItem3.AttachmentRule.UserData.Label)
								ownedRunbooks7.AttachmentRule.UserData.Type = types.StringPointerValue(ownedRunbooksItem3.AttachmentRule.UserData.Type)
								ownedRunbooks7.AttachmentRule.UserData.Value = types.StringPointerValue(ownedRunbooksItem3.AttachmentRule.UserData.Value)
							}
						}
						ownedRunbooks7.Categories = types.StringPointerValue(ownedRunbooksItem3.Categories)
						if ownedRunbooksItem3.CreatedAt != nil {
							ownedRunbooks7.CreatedAt = types.StringValue(ownedRunbooksItem3.CreatedAt.Format(time.RFC3339Nano))
						} else {
							ownedRunbooks7.CreatedAt = types.StringNull()
						}
						ownedRunbooks7.Description = types.StringPointerValue(ownedRunbooksItem3.Description)
						ownedRunbooks7.ID = types.StringPointerValue(ownedRunbooksItem3.ID)
						ownedRunbooks7.Name = types.StringPointerValue(ownedRunbooksItem3.Name)
						if ownedRunbooksItem3.Owner == nil {
							ownedRunbooks7.Owner = nil
						} else {
							ownedRunbooks7.Owner = &tfTypes.TeamEntity1{}
						}
						ownedRunbooks7.Summary = types.StringPointerValue(ownedRunbooksItem3.Summary)
						ownedRunbooks7.Type = types.StringPointerValue(ownedRunbooksItem3.Type)
						if ownedRunbooksItem3.UpdatedAt != nil {
							ownedRunbooks7.UpdatedAt = types.StringValue(ownedRunbooksItem3.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							ownedRunbooks7.UpdatedAt = types.StringNull()
						}
						if ownedRunbooksCount3+1 > len(checklists3.Owner.OwnedRunbooks) {
							checklists3.Owner.OwnedRunbooks = append(checklists3.Owner.OwnedRunbooks, ownedRunbooks7)
						} else {
							checklists3.Owner.OwnedRunbooks[ownedRunbooksCount3].AttachmentRule = ownedRunbooks7.AttachmentRule
							checklists3.Owner.OwnedRunbooks[ownedRunbooksCount3].Categories = ownedRunbooks7.Categories
							checklists3.Owner.OwnedRunbooks[ownedRunbooksCount3].CreatedAt = ownedRunbooks7.CreatedAt
							checklists3.Owner.OwnedRunbooks[ownedRunbooksCount3].Description = ownedRunbooks7.Description
							checklists3.Owner.OwnedRunbooks[ownedRunbooksCount3].ID = ownedRunbooks7.ID
							checklists3.Owner.OwnedRunbooks[ownedRunbooksCount3].Name = ownedRunbooks7.Name
							checklists3.Owner.OwnedRunbooks[ownedRunbooksCount3].Owner = ownedRunbooks7.Owner
							checklists3.Owner.OwnedRunbooks[ownedRunbooksCount3].Summary = ownedRunbooks7.Summary
							checklists3.Owner.OwnedRunbooks[ownedRunbooksCount3].Type = ownedRunbooks7.Type
							checklists3.Owner.OwnedRunbooks[ownedRunbooksCount3].UpdatedAt = ownedRunbooks7.UpdatedAt
						}
					}
					checklists3.Owner.SignalsIcalURL = types.StringPointerValue(checklistsItem1.Owner.SignalsIcalURL)
					if checklistsItem1.Owner.SlackChannel == nil {
						checklists3.Owner.SlackChannel = nil
					} else {
						checklists3.Owner.SlackChannel = &tfTypes.IntegrationsSlackSlackChannelEntity{}
						checklists3.Owner.SlackChannel.ID = types.StringPointerValue(checklistsItem1.Owner.SlackChannel.ID)
						checklists3.Owner.SlackChannel.Name = types.StringPointerValue(checklistsItem1.Owner.SlackChannel.Name)
						checklists3.Owner.SlackChannel.SlackChannelID = types.StringPointerValue(checklistsItem1.Owner.SlackChannel.SlackChannelID)
					}
					checklists3.Owner.Slug = types.StringPointerValue(checklistsItem1.Owner.Slug)
					if checklistsItem1.Owner.UpdatedAt != nil {
						checklists3.Owner.UpdatedAt = types.StringValue(checklistsItem1.Owner.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						checklists3.Owner.UpdatedAt = types.StringNull()
					}
				}
				if checklistsItem1.UpdatedAt != nil {
					checklists3.UpdatedAt = types.StringValue(checklistsItem1.UpdatedAt.Format(time.RFC3339Nano))
				} else {
					checklists3.UpdatedAt = types.StringNull()
				}
				if checklistsCount1+1 > len(r.Service.Checklists) {
					r.Service.Checklists = append(r.Service.Checklists, checklists3)
				} else {
					r.Service.Checklists[checklistsCount1].Checks = checklists3.Checks
					r.Service.Checklists[checklistsCount1].CreatedAt = checklists3.CreatedAt
					r.Service.Checklists[checklistsCount1].Description = checklists3.Description
					r.Service.Checklists[checklistsCount1].ID = checklists3.ID
					r.Service.Checklists[checklistsCount1].Name = checklists3.Name
					r.Service.Checklists[checklistsCount1].Owner = checklists3.Owner
					r.Service.Checklists[checklistsCount1].UpdatedAt = checklists3.UpdatedAt
				}
			}
			if resp.Service.CompletedChecks != nil {
				r.Service.CompletedChecks = types.Int64Value(int64(*resp.Service.CompletedChecks))
			} else {
				r.Service.CompletedChecks = types.Int64Null()
			}
			if resp.Service.CreatedAt != nil {
				r.Service.CreatedAt = types.StringValue(resp.Service.CreatedAt.Format(time.RFC3339Nano))
			} else {
				r.Service.CreatedAt = types.StringNull()
			}
			r.Service.Description = types.StringPointerValue(resp.Service.Description)
			r.Service.ExternalResources = []tfTypes.ExternalResourceEntity{}
			if len(r.Service.ExternalResources) > len(resp.Service.ExternalResources) {
				r.Service.ExternalResources = r.Service.ExternalResources[:len(resp.Service.ExternalResources)]
			}
			for externalResourcesCount10, externalResourcesItem10 := range resp.Service.ExternalResources {
				var externalResources21 tfTypes.ExternalResourceEntity
				externalResources21.ConnectionID = types.StringPointerValue(externalResourcesItem10.ConnectionID)
				externalResources21.ConnectionName = types.StringPointerValue(externalResourcesItem10.ConnectionName)
				externalResources21.ConnectionType = types.StringPointerValue(externalResourcesItem10.ConnectionType)
				if externalResourcesItem10.CreatedAt != nil {
					externalResources21.CreatedAt = types.StringValue(externalResourcesItem10.CreatedAt.Format(time.RFC3339Nano))
				} else {
					externalResources21.CreatedAt = types.StringNull()
				}
				externalResources21.Name = types.StringPointerValue(externalResourcesItem10.Name)
				externalResources21.RemoteID = types.StringPointerValue(externalResourcesItem10.RemoteID)
				externalResources21.RemoteURL = types.StringPointerValue(externalResourcesItem10.RemoteURL)
				if externalResourcesItem10.UpdatedAt != nil {
					externalResources21.UpdatedAt = types.StringValue(externalResourcesItem10.UpdatedAt.Format(time.RFC3339Nano))
				} else {
					externalResources21.UpdatedAt = types.StringNull()
				}
				if externalResourcesCount10+1 > len(r.Service.ExternalResources) {
					r.Service.ExternalResources = append(r.Service.ExternalResources, externalResources21)
				} else {
					r.Service.ExternalResources[externalResourcesCount10].ConnectionID = externalResources21.ConnectionID
					r.Service.ExternalResources[externalResourcesCount10].ConnectionName = externalResources21.ConnectionName
					r.Service.ExternalResources[externalResourcesCount10].ConnectionType = externalResources21.ConnectionType
					r.Service.ExternalResources[externalResourcesCount10].CreatedAt = externalResources21.CreatedAt
					r.Service.ExternalResources[externalResourcesCount10].Name = externalResources21.Name
					r.Service.ExternalResources[externalResourcesCount10].RemoteID = externalResources21.RemoteID
					r.Service.ExternalResources[externalResourcesCount10].RemoteURL = externalResources21.RemoteURL
					r.Service.ExternalResources[externalResourcesCount10].UpdatedAt = externalResources21.UpdatedAt
				}
			}
			r.Service.Functionalities = []tfTypes.FunctionalityEntity{}
			if len(r.Service.Functionalities) > len(resp.Service.Functionalities) {
				r.Service.Functionalities = r.Service.Functionalities[:len(resp.Service.Functionalities)]
			}
			for functionalitiesCount5, functionalitiesItem5 := range resp.Service.Functionalities {
				var functionalities11 tfTypes.FunctionalityEntity
				functionalities11.ActiveIncidents = []types.String{}
				for _, v := range functionalitiesItem5.ActiveIncidents {
					functionalities11.ActiveIncidents = append(functionalities11.ActiveIncidents, types.StringValue(v))
				}
				functionalities11.AlertOnAdd = types.BoolPointerValue(functionalitiesItem5.AlertOnAdd)
				functionalities11.AutoAddRespondingTeam = types.BoolPointerValue(functionalitiesItem5.AutoAddRespondingTeam)
				if functionalitiesItem5.CreatedAt != nil {
					functionalities11.CreatedAt = types.StringValue(functionalitiesItem5.CreatedAt.Format(time.RFC3339Nano))
				} else {
					functionalities11.CreatedAt = types.StringNull()
				}
				functionalities11.Description = types.StringPointerValue(functionalitiesItem5.Description)
				functionalities11.ExternalResources = []tfTypes.ExternalResourceEntity{}
				for externalResourcesCount11, externalResourcesItem11 := range functionalitiesItem5.ExternalResources {
					var externalResources23 tfTypes.ExternalResourceEntity
					externalResources23.ConnectionID = types.StringPointerValue(externalResourcesItem11.ConnectionID)
					externalResources23.ConnectionName = types.StringPointerValue(externalResourcesItem11.ConnectionName)
					externalResources23.ConnectionType = types.StringPointerValue(externalResourcesItem11.ConnectionType)
					if externalResourcesItem11.CreatedAt != nil {
						externalResources23.CreatedAt = types.StringValue(externalResourcesItem11.CreatedAt.Format(time.RFC3339Nano))
					} else {
						externalResources23.CreatedAt = types.StringNull()
					}
					externalResources23.Name = types.StringPointerValue(externalResourcesItem11.Name)
					externalResources23.RemoteID = types.StringPointerValue(externalResourcesItem11.RemoteID)
					externalResources23.RemoteURL = types.StringPointerValue(externalResourcesItem11.RemoteURL)
					if externalResourcesItem11.UpdatedAt != nil {
						externalResources23.UpdatedAt = types.StringValue(externalResourcesItem11.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						externalResources23.UpdatedAt = types.StringNull()
					}
					if externalResourcesCount11+1 > len(functionalities11.ExternalResources) {
						functionalities11.ExternalResources = append(functionalities11.ExternalResources, externalResources23)
					} else {
						functionalities11.ExternalResources[externalResourcesCount11].ConnectionID = externalResources23.ConnectionID
						functionalities11.ExternalResources[externalResourcesCount11].ConnectionName = externalResources23.ConnectionName
						functionalities11.ExternalResources[externalResourcesCount11].ConnectionType = externalResources23.ConnectionType
						functionalities11.ExternalResources[externalResourcesCount11].CreatedAt = externalResources23.CreatedAt
						functionalities11.ExternalResources[externalResourcesCount11].Name = externalResources23.Name
						functionalities11.ExternalResources[externalResourcesCount11].RemoteID = externalResources23.RemoteID
						functionalities11.ExternalResources[externalResourcesCount11].RemoteURL = externalResources23.RemoteURL
						functionalities11.ExternalResources[externalResourcesCount11].UpdatedAt = externalResources23.UpdatedAt
					}
				}
				functionalities11.ID = types.StringPointerValue(functionalitiesItem5.ID)
				if len(functionalitiesItem5.Labels) > 0 {
					functionalities11.Labels = make(map[string]types.String)
					for key10, value14 := range functionalitiesItem5.Labels {
						functionalities11.Labels[key10] = types.StringValue(value14)
					}
				}
				functionalities11.Links = []tfTypes.LinksEntity{}
				for linksCount10, linksItem10 := range functionalitiesItem5.Links {
					var links21 tfTypes.LinksEntity
					links21.HrefURL = types.StringPointerValue(linksItem10.HrefURL)
					links21.IconURL = types.StringPointerValue(linksItem10.IconURL)
					links21.ID = types.StringPointerValue(linksItem10.ID)
					links21.Name = types.StringPointerValue(linksItem10.Name)
					if linksCount10+1 > len(functionalities11.Links) {
						functionalities11.Links = append(functionalities11.Links, links21)
					} else {
						functionalities11.Links[linksCount10].HrefURL = links21.HrefURL
						functionalities11.Links[linksCount10].IconURL = links21.IconURL
						functionalities11.Links[linksCount10].ID = links21.ID
						functionalities11.Links[linksCount10].Name = links21.Name
					}
				}
				functionalities11.Name = types.StringPointerValue(functionalitiesItem5.Name)
				if functionalitiesItem5.Owner == nil {
					functionalities11.Owner = nil
				} else {
					functionalities11.Owner = &tfTypes.TeamEntity1{}
				}
				functionalities11.Slug = types.StringPointerValue(functionalitiesItem5.Slug)
				if functionalitiesItem5.UpdatedAt != nil {
					functionalities11.UpdatedAt = types.StringValue(functionalitiesItem5.UpdatedAt.Format(time.RFC3339Nano))
				} else {
					functionalities11.UpdatedAt = types.StringNull()
				}
				if functionalitiesItem5.UpdatedBy == nil {
					functionalities11.UpdatedBy = nil
				} else {
					functionalities11.UpdatedBy = &tfTypes.AuthorEntity{}
					functionalities11.UpdatedBy.Email = types.StringPointerValue(functionalitiesItem5.UpdatedBy.Email)
					functionalities11.UpdatedBy.ID = types.StringPointerValue(functionalitiesItem5.UpdatedBy.ID)
					functionalities11.UpdatedBy.Name = types.StringPointerValue(functionalitiesItem5.UpdatedBy.Name)
					functionalities11.UpdatedBy.Source = types.StringPointerValue(functionalitiesItem5.UpdatedBy.Source)
				}
				if functionalitiesCount5+1 > len(r.Service.Functionalities) {
					r.Service.Functionalities = append(r.Service.Functionalities, functionalities11)
				} else {
					r.Service.Functionalities[functionalitiesCount5].ActiveIncidents = functionalities11.ActiveIncidents
					r.Service.Functionalities[functionalitiesCount5].AlertOnAdd = functionalities11.AlertOnAdd
					r.Service.Functionalities[functionalitiesCount5].AutoAddRespondingTeam = functionalities11.AutoAddRespondingTeam
					r.Service.Functionalities[functionalitiesCount5].CreatedAt = functionalities11.CreatedAt
					r.Service.Functionalities[functionalitiesCount5].Description = functionalities11.Description
					r.Service.Functionalities[functionalitiesCount5].ExternalResources = functionalities11.ExternalResources
					r.Service.Functionalities[functionalitiesCount5].ID = functionalities11.ID
					r.Service.Functionalities[functionalitiesCount5].Labels = functionalities11.Labels
					r.Service.Functionalities[functionalitiesCount5].Links = functionalities11.Links
					r.Service.Functionalities[functionalitiesCount5].Name = functionalities11.Name
					r.Service.Functionalities[functionalitiesCount5].Owner = functionalities11.Owner
					r.Service.Functionalities[functionalitiesCount5].Slug = functionalities11.Slug
					r.Service.Functionalities[functionalitiesCount5].UpdatedAt = functionalities11.UpdatedAt
					r.Service.Functionalities[functionalitiesCount5].UpdatedBy = functionalities11.UpdatedBy
				}
			}
			r.Service.ID = types.StringPointerValue(resp.Service.ID)
			if len(resp.Service.Labels) > 0 {
				r.Service.Labels = make(map[string]types.String)
				for key11, value15 := range resp.Service.Labels {
					r.Service.Labels[key11] = types.StringValue(value15)
				}
			}
			if resp.Service.LastImport == nil {
				r.Service.LastImport = nil
			} else {
				r.Service.LastImport = &tfTypes.ImportsImportableResourceEntity{}
				r.Service.LastImport.ImportErrors = []tfTypes.ImportsImportErrorEntity{}
				if len(r.Service.LastImport.ImportErrors) > len(resp.Service.LastImport.ImportErrors) {
					r.Service.LastImport.ImportErrors = r.Service.LastImport.ImportErrors[:len(resp.Service.LastImport.ImportErrors)]
				}
				for importErrorsCount1, importErrorsItem1 := range resp.Service.LastImport.ImportErrors {
					var importErrors3 tfTypes.ImportsImportErrorEntity
					if importErrorsItem1.CreatedAt != nil {
						importErrors3.CreatedAt = types.StringValue(importErrorsItem1.CreatedAt.Format(time.RFC3339Nano))
					} else {
						importErrors3.CreatedAt = types.StringNull()
					}
					if importErrorsItem1.Data == nil {
						importErrors3.Data = nil
					} else {
						importErrors3.Data = &tfTypes.TeamEntity1{}
					}
					importErrors3.ID = types.StringPointerValue(importErrorsItem1.ID)
					importErrors3.Message = types.StringPointerValue(importErrorsItem1.Message)
					if importErrorsItem1.Resource == nil {
						importErrors3.Resource = nil
					} else {
						importErrors3.Resource = &tfTypes.ImportsImportErrorEntityResourceEntity{}
						importErrors3.Resource.Name = types.StringPointerValue(importErrorsItem1.Resource.Name)
						importErrors3.Resource.ResourceID = types.StringPointerValue(importErrorsItem1.Resource.ResourceID)
						importErrors3.Resource.ResourceType = types.StringPointerValue(importErrorsItem1.Resource.ResourceType)
					}
					if importErrorsCount1+1 > len(r.Service.LastImport.ImportErrors) {
						r.Service.LastImport.ImportErrors = append(r.Service.LastImport.ImportErrors, importErrors3)
					} else {
						r.Service.LastImport.ImportErrors[importErrorsCount1].CreatedAt = importErrors3.CreatedAt
						r.Service.LastImport.ImportErrors[importErrorsCount1].Data = importErrors3.Data
						r.Service.LastImport.ImportErrors[importErrorsCount1].ID = importErrors3.ID
						r.Service.LastImport.ImportErrors[importErrorsCount1].Message = importErrors3.Message
						r.Service.LastImport.ImportErrors[importErrorsCount1].Resource = importErrors3.Resource
					}
				}
				if resp.Service.LastImport.ImportedAt != nil {
					r.Service.LastImport.ImportedAt = types.StringValue(resp.Service.LastImport.ImportedAt.Format(time.RFC3339Nano))
				} else {
					r.Service.LastImport.ImportedAt = types.StringNull()
				}
				r.Service.LastImport.RemoteID = types.StringPointerValue(resp.Service.LastImport.RemoteID)
				if resp.Service.LastImport.State != nil {
					r.Service.LastImport.State = types.StringValue(string(*resp.Service.LastImport.State))
				} else {
					r.Service.LastImport.State = types.StringNull()
				}
			}
			r.Service.Links = []tfTypes.LinksEntity{}
			if len(r.Service.Links) > len(resp.Service.Links) {
				r.Service.Links = r.Service.Links[:len(resp.Service.Links)]
			}
			for linksCount11, linksItem11 := range resp.Service.Links {
				var links23 tfTypes.LinksEntity
				links23.HrefURL = types.StringPointerValue(linksItem11.HrefURL)
				links23.IconURL = types.StringPointerValue(linksItem11.IconURL)
				links23.ID = types.StringPointerValue(linksItem11.ID)
				links23.Name = types.StringPointerValue(linksItem11.Name)
				if linksCount11+1 > len(r.Service.Links) {
					r.Service.Links = append(r.Service.Links, links23)
				} else {
					r.Service.Links[linksCount11].HrefURL = links23.HrefURL
					r.Service.Links[linksCount11].IconURL = links23.IconURL
					r.Service.Links[linksCount11].ID = links23.ID
					r.Service.Links[linksCount11].Name = links23.Name
				}
			}
			r.Service.ManagedBy = types.StringPointerValue(resp.Service.ManagedBy)
			if resp.Service.ManagedBySettings == nil {
				r.Service.ManagedBySettings = nil
			} else {
				r.Service.ManagedBySettings = &tfTypes.TeamEntity1{}
			}
			r.Service.Name = types.StringPointerValue(resp.Service.Name)
			if resp.Service.Owner == nil {
				r.Service.Owner = nil
			} else {
				r.Service.Owner = &tfTypes.TeamEntity{}
				if resp.Service.Owner.CreatedAt != nil {
					r.Service.Owner.CreatedAt = types.StringValue(resp.Service.Owner.CreatedAt.Format(time.RFC3339Nano))
				} else {
					r.Service.Owner.CreatedAt = types.StringNull()
				}
				if resp.Service.Owner.CreatedBy == nil {
					r.Service.Owner.CreatedBy = nil
				} else {
					r.Service.Owner.CreatedBy = &tfTypes.AuthorEntity{}
					r.Service.Owner.CreatedBy.Email = types.StringPointerValue(resp.Service.Owner.CreatedBy.Email)
					r.Service.Owner.CreatedBy.ID = types.StringPointerValue(resp.Service.Owner.CreatedBy.ID)
					r.Service.Owner.CreatedBy.Name = types.StringPointerValue(resp.Service.Owner.CreatedBy.Name)
					r.Service.Owner.CreatedBy.Source = types.StringPointerValue(resp.Service.Owner.CreatedBy.Source)
				}
				r.Service.Owner.Description = types.StringPointerValue(resp.Service.Owner.Description)
				r.Service.Owner.Functionalities = []tfTypes.FunctionalityEntity{}
				if len(r.Service.Owner.Functionalities) > len(resp.Service.Owner.Functionalities) {
					r.Service.Owner.Functionalities = r.Service.Owner.Functionalities[:len(resp.Service.Owner.Functionalities)]
				}
				for functionalitiesCount6, functionalitiesItem6 := range resp.Service.Owner.Functionalities {
					var functionalities13 tfTypes.FunctionalityEntity
					functionalities13.ActiveIncidents = []types.String{}
					for _, v := range functionalitiesItem6.ActiveIncidents {
						functionalities13.ActiveIncidents = append(functionalities13.ActiveIncidents, types.StringValue(v))
					}
					functionalities13.AlertOnAdd = types.BoolPointerValue(functionalitiesItem6.AlertOnAdd)
					functionalities13.AutoAddRespondingTeam = types.BoolPointerValue(functionalitiesItem6.AutoAddRespondingTeam)
					if functionalitiesItem6.CreatedAt != nil {
						functionalities13.CreatedAt = types.StringValue(functionalitiesItem6.CreatedAt.Format(time.RFC3339Nano))
					} else {
						functionalities13.CreatedAt = types.StringNull()
					}
					functionalities13.Description = types.StringPointerValue(functionalitiesItem6.Description)
					functionalities13.ExternalResources = []tfTypes.ExternalResourceEntity{}
					for externalResourcesCount12, externalResourcesItem12 := range functionalitiesItem6.ExternalResources {
						var externalResources25 tfTypes.ExternalResourceEntity
						externalResources25.ConnectionID = types.StringPointerValue(externalResourcesItem12.ConnectionID)
						externalResources25.ConnectionName = types.StringPointerValue(externalResourcesItem12.ConnectionName)
						externalResources25.ConnectionType = types.StringPointerValue(externalResourcesItem12.ConnectionType)
						if externalResourcesItem12.CreatedAt != nil {
							externalResources25.CreatedAt = types.StringValue(externalResourcesItem12.CreatedAt.Format(time.RFC3339Nano))
						} else {
							externalResources25.CreatedAt = types.StringNull()
						}
						externalResources25.Name = types.StringPointerValue(externalResourcesItem12.Name)
						externalResources25.RemoteID = types.StringPointerValue(externalResourcesItem12.RemoteID)
						externalResources25.RemoteURL = types.StringPointerValue(externalResourcesItem12.RemoteURL)
						if externalResourcesItem12.UpdatedAt != nil {
							externalResources25.UpdatedAt = types.StringValue(externalResourcesItem12.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							externalResources25.UpdatedAt = types.StringNull()
						}
						if externalResourcesCount12+1 > len(functionalities13.ExternalResources) {
							functionalities13.ExternalResources = append(functionalities13.ExternalResources, externalResources25)
						} else {
							functionalities13.ExternalResources[externalResourcesCount12].ConnectionID = externalResources25.ConnectionID
							functionalities13.ExternalResources[externalResourcesCount12].ConnectionName = externalResources25.ConnectionName
							functionalities13.ExternalResources[externalResourcesCount12].ConnectionType = externalResources25.ConnectionType
							functionalities13.ExternalResources[externalResourcesCount12].CreatedAt = externalResources25.CreatedAt
							functionalities13.ExternalResources[externalResourcesCount12].Name = externalResources25.Name
							functionalities13.ExternalResources[externalResourcesCount12].RemoteID = externalResources25.RemoteID
							functionalities13.ExternalResources[externalResourcesCount12].RemoteURL = externalResources25.RemoteURL
							functionalities13.ExternalResources[externalResourcesCount12].UpdatedAt = externalResources25.UpdatedAt
						}
					}
					functionalities13.ID = types.StringPointerValue(functionalitiesItem6.ID)
					if len(functionalitiesItem6.Labels) > 0 {
						functionalities13.Labels = make(map[string]types.String)
						for key12, value16 := range functionalitiesItem6.Labels {
							functionalities13.Labels[key12] = types.StringValue(value16)
						}
					}
					functionalities13.Links = []tfTypes.LinksEntity{}
					for linksCount12, linksItem12 := range functionalitiesItem6.Links {
						var links25 tfTypes.LinksEntity
						links25.HrefURL = types.StringPointerValue(linksItem12.HrefURL)
						links25.IconURL = types.StringPointerValue(linksItem12.IconURL)
						links25.ID = types.StringPointerValue(linksItem12.ID)
						links25.Name = types.StringPointerValue(linksItem12.Name)
						if linksCount12+1 > len(functionalities13.Links) {
							functionalities13.Links = append(functionalities13.Links, links25)
						} else {
							functionalities13.Links[linksCount12].HrefURL = links25.HrefURL
							functionalities13.Links[linksCount12].IconURL = links25.IconURL
							functionalities13.Links[linksCount12].ID = links25.ID
							functionalities13.Links[linksCount12].Name = links25.Name
						}
					}
					functionalities13.Name = types.StringPointerValue(functionalitiesItem6.Name)
					if functionalitiesItem6.Owner == nil {
						functionalities13.Owner = nil
					} else {
						functionalities13.Owner = &tfTypes.TeamEntity1{}
					}
					functionalities13.Slug = types.StringPointerValue(functionalitiesItem6.Slug)
					if functionalitiesItem6.UpdatedAt != nil {
						functionalities13.UpdatedAt = types.StringValue(functionalitiesItem6.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						functionalities13.UpdatedAt = types.StringNull()
					}
					if functionalitiesItem6.UpdatedBy == nil {
						functionalities13.UpdatedBy = nil
					} else {
						functionalities13.UpdatedBy = &tfTypes.AuthorEntity{}
						functionalities13.UpdatedBy.Email = types.StringPointerValue(functionalitiesItem6.UpdatedBy.Email)
						functionalities13.UpdatedBy.ID = types.StringPointerValue(functionalitiesItem6.UpdatedBy.ID)
						functionalities13.UpdatedBy.Name = types.StringPointerValue(functionalitiesItem6.UpdatedBy.Name)
						functionalities13.UpdatedBy.Source = types.StringPointerValue(functionalitiesItem6.UpdatedBy.Source)
					}
					if functionalitiesCount6+1 > len(r.Service.Owner.Functionalities) {
						r.Service.Owner.Functionalities = append(r.Service.Owner.Functionalities, functionalities13)
					} else {
						r.Service.Owner.Functionalities[functionalitiesCount6].ActiveIncidents = functionalities13.ActiveIncidents
						r.Service.Owner.Functionalities[functionalitiesCount6].AlertOnAdd = functionalities13.AlertOnAdd
						r.Service.Owner.Functionalities[functionalitiesCount6].AutoAddRespondingTeam = functionalities13.AutoAddRespondingTeam
						r.Service.Owner.Functionalities[functionalitiesCount6].CreatedAt = functionalities13.CreatedAt
						r.Service.Owner.Functionalities[functionalitiesCount6].Description = functionalities13.Description
						r.Service.Owner.Functionalities[functionalitiesCount6].ExternalResources = functionalities13.ExternalResources
						r.Service.Owner.Functionalities[functionalitiesCount6].ID = functionalities13.ID
						r.Service.Owner.Functionalities[functionalitiesCount6].Labels = functionalities13.Labels
						r.Service.Owner.Functionalities[functionalitiesCount6].Links = functionalities13.Links
						r.Service.Owner.Functionalities[functionalitiesCount6].Name = functionalities13.Name
						r.Service.Owner.Functionalities[functionalitiesCount6].Owner = functionalities13.Owner
						r.Service.Owner.Functionalities[functionalitiesCount6].Slug = functionalities13.Slug
						r.Service.Owner.Functionalities[functionalitiesCount6].UpdatedAt = functionalities13.UpdatedAt
						r.Service.Owner.Functionalities[functionalitiesCount6].UpdatedBy = functionalities13.UpdatedBy
					}
				}
				r.Service.Owner.ID = types.StringPointerValue(resp.Service.Owner.ID)
				r.Service.Owner.Memberships = []tfTypes.MembershipEntity{}
				if len(r.Service.Owner.Memberships) > len(resp.Service.Owner.Memberships) {
					r.Service.Owner.Memberships = r.Service.Owner.Memberships[:len(resp.Service.Owner.Memberships)]
				}
				for membershipsCount4, membershipsItem4 := range resp.Service.Owner.Memberships {
					var memberships9 tfTypes.MembershipEntity
					if membershipsItem4.DefaultIncidentRole == nil {
						memberships9.DefaultIncidentRole = nil
					} else {
						memberships9.DefaultIncidentRole = &tfTypes.IncidentRoleEntity{}
						if membershipsItem4.DefaultIncidentRole.CreatedAt != nil {
							memberships9.DefaultIncidentRole.CreatedAt = types.StringValue(membershipsItem4.DefaultIncidentRole.CreatedAt.Format(time.RFC3339Nano))
						} else {
							memberships9.DefaultIncidentRole.CreatedAt = types.StringNull()
						}
						memberships9.DefaultIncidentRole.Description = types.StringPointerValue(membershipsItem4.DefaultIncidentRole.Description)
						if membershipsItem4.DefaultIncidentRole.DiscardedAt != nil {
							memberships9.DefaultIncidentRole.DiscardedAt = types.StringValue(membershipsItem4.DefaultIncidentRole.DiscardedAt.Format(time.RFC3339Nano))
						} else {
							memberships9.DefaultIncidentRole.DiscardedAt = types.StringNull()
						}
						memberships9.DefaultIncidentRole.ID = types.StringPointerValue(membershipsItem4.DefaultIncidentRole.ID)
						memberships9.DefaultIncidentRole.Name = types.StringPointerValue(membershipsItem4.DefaultIncidentRole.Name)
						memberships9.DefaultIncidentRole.Summary = types.StringPointerValue(membershipsItem4.DefaultIncidentRole.Summary)
						if membershipsItem4.DefaultIncidentRole.UpdatedAt != nil {
							memberships9.DefaultIncidentRole.UpdatedAt = types.StringValue(membershipsItem4.DefaultIncidentRole.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							memberships9.DefaultIncidentRole.UpdatedAt = types.StringNull()
						}
					}
					if membershipsItem4.Schedule == nil {
						memberships9.Schedule = nil
					} else {
						memberships9.Schedule = &tfTypes.ScheduleEntity{}
						memberships9.Schedule.Discarded = types.BoolPointerValue(membershipsItem4.Schedule.Discarded)
						memberships9.Schedule.ID = types.StringPointerValue(membershipsItem4.Schedule.ID)
						memberships9.Schedule.Integration = types.StringPointerValue(membershipsItem4.Schedule.Integration)
						memberships9.Schedule.Name = types.StringPointerValue(membershipsItem4.Schedule.Name)
					}
					if membershipsItem4.User == nil {
						memberships9.User = nil
					} else {
						memberships9.User = &tfTypes.UserEntity{}
						if membershipsItem4.User.CreatedAt != nil {
							memberships9.User.CreatedAt = types.StringValue(membershipsItem4.User.CreatedAt.Format(time.RFC3339Nano))
						} else {
							memberships9.User.CreatedAt = types.StringNull()
						}
						memberships9.User.Email = types.StringPointerValue(membershipsItem4.User.Email)
						memberships9.User.ID = types.StringPointerValue(membershipsItem4.User.ID)
						memberships9.User.Name = types.StringPointerValue(membershipsItem4.User.Name)
						memberships9.User.SignalsEnabledNotificationTypes = []types.String{}
						for _, v := range membershipsItem4.User.SignalsEnabledNotificationTypes {
							memberships9.User.SignalsEnabledNotificationTypes = append(memberships9.User.SignalsEnabledNotificationTypes, types.StringValue(v))
						}
						memberships9.User.SlackLinked = types.BoolPointerValue(membershipsItem4.User.SlackLinked)
						memberships9.User.SlackUserID = types.StringPointerValue(membershipsItem4.User.SlackUserID)
						if membershipsItem4.User.UpdatedAt != nil {
							memberships9.User.UpdatedAt = types.StringValue(membershipsItem4.User.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							memberships9.User.UpdatedAt = types.StringNull()
						}
					}
					if membershipsCount4+1 > len(r.Service.Owner.Memberships) {
						r.Service.Owner.Memberships = append(r.Service.Owner.Memberships, memberships9)
					} else {
						r.Service.Owner.Memberships[membershipsCount4].DefaultIncidentRole = memberships9.DefaultIncidentRole
						r.Service.Owner.Memberships[membershipsCount4].Schedule = memberships9.Schedule
						r.Service.Owner.Memberships[membershipsCount4].User = memberships9.User
					}
				}
				if resp.Service.Owner.MsTeamsChannel == nil {
					r.Service.Owner.MsTeamsChannel = nil
				} else {
					r.Service.Owner.MsTeamsChannel = &tfTypes.IntegrationsMicrosoftTeamsV2ChannelEntity{}
					r.Service.Owner.MsTeamsChannel.ChannelID = types.StringPointerValue(resp.Service.Owner.MsTeamsChannel.ChannelID)
					r.Service.Owner.MsTeamsChannel.ChannelName = types.StringPointerValue(resp.Service.Owner.MsTeamsChannel.ChannelName)
					r.Service.Owner.MsTeamsChannel.ChannelURL = types.StringPointerValue(resp.Service.Owner.MsTeamsChannel.ChannelURL)
					r.Service.Owner.MsTeamsChannel.ID = types.StringPointerValue(resp.Service.Owner.MsTeamsChannel.ID)
					r.Service.Owner.MsTeamsChannel.MsTeamID = types.StringPointerValue(resp.Service.Owner.MsTeamsChannel.MsTeamID)
					r.Service.Owner.MsTeamsChannel.Status = types.StringPointerValue(resp.Service.Owner.MsTeamsChannel.Status)
					r.Service.Owner.MsTeamsChannel.TeamName = types.StringPointerValue(resp.Service.Owner.MsTeamsChannel.TeamName)
				}
				r.Service.Owner.Name = types.StringPointerValue(resp.Service.Owner.Name)
				r.Service.Owner.OwnedFunctionalities = []tfTypes.FunctionalityEntity{}
				if len(r.Service.Owner.OwnedFunctionalities) > len(resp.Service.Owner.OwnedFunctionalities) {
					r.Service.Owner.OwnedFunctionalities = r.Service.Owner.OwnedFunctionalities[:len(resp.Service.Owner.OwnedFunctionalities)]
				}
				for ownedFunctionalitiesCount4, ownedFunctionalitiesItem4 := range resp.Service.Owner.OwnedFunctionalities {
					var ownedFunctionalities9 tfTypes.FunctionalityEntity
					ownedFunctionalities9.ActiveIncidents = []types.String{}
					for _, v := range ownedFunctionalitiesItem4.ActiveIncidents {
						ownedFunctionalities9.ActiveIncidents = append(ownedFunctionalities9.ActiveIncidents, types.StringValue(v))
					}
					ownedFunctionalities9.AlertOnAdd = types.BoolPointerValue(ownedFunctionalitiesItem4.AlertOnAdd)
					ownedFunctionalities9.AutoAddRespondingTeam = types.BoolPointerValue(ownedFunctionalitiesItem4.AutoAddRespondingTeam)
					if ownedFunctionalitiesItem4.CreatedAt != nil {
						ownedFunctionalities9.CreatedAt = types.StringValue(ownedFunctionalitiesItem4.CreatedAt.Format(time.RFC3339Nano))
					} else {
						ownedFunctionalities9.CreatedAt = types.StringNull()
					}
					ownedFunctionalities9.Description = types.StringPointerValue(ownedFunctionalitiesItem4.Description)
					ownedFunctionalities9.ExternalResources = []tfTypes.ExternalResourceEntity{}
					for externalResourcesCount13, externalResourcesItem13 := range ownedFunctionalitiesItem4.ExternalResources {
						var externalResources27 tfTypes.ExternalResourceEntity
						externalResources27.ConnectionID = types.StringPointerValue(externalResourcesItem13.ConnectionID)
						externalResources27.ConnectionName = types.StringPointerValue(externalResourcesItem13.ConnectionName)
						externalResources27.ConnectionType = types.StringPointerValue(externalResourcesItem13.ConnectionType)
						if externalResourcesItem13.CreatedAt != nil {
							externalResources27.CreatedAt = types.StringValue(externalResourcesItem13.CreatedAt.Format(time.RFC3339Nano))
						} else {
							externalResources27.CreatedAt = types.StringNull()
						}
						externalResources27.Name = types.StringPointerValue(externalResourcesItem13.Name)
						externalResources27.RemoteID = types.StringPointerValue(externalResourcesItem13.RemoteID)
						externalResources27.RemoteURL = types.StringPointerValue(externalResourcesItem13.RemoteURL)
						if externalResourcesItem13.UpdatedAt != nil {
							externalResources27.UpdatedAt = types.StringValue(externalResourcesItem13.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							externalResources27.UpdatedAt = types.StringNull()
						}
						if externalResourcesCount13+1 > len(ownedFunctionalities9.ExternalResources) {
							ownedFunctionalities9.ExternalResources = append(ownedFunctionalities9.ExternalResources, externalResources27)
						} else {
							ownedFunctionalities9.ExternalResources[externalResourcesCount13].ConnectionID = externalResources27.ConnectionID
							ownedFunctionalities9.ExternalResources[externalResourcesCount13].ConnectionName = externalResources27.ConnectionName
							ownedFunctionalities9.ExternalResources[externalResourcesCount13].ConnectionType = externalResources27.ConnectionType
							ownedFunctionalities9.ExternalResources[externalResourcesCount13].CreatedAt = externalResources27.CreatedAt
							ownedFunctionalities9.ExternalResources[externalResourcesCount13].Name = externalResources27.Name
							ownedFunctionalities9.ExternalResources[externalResourcesCount13].RemoteID = externalResources27.RemoteID
							ownedFunctionalities9.ExternalResources[externalResourcesCount13].RemoteURL = externalResources27.RemoteURL
							ownedFunctionalities9.ExternalResources[externalResourcesCount13].UpdatedAt = externalResources27.UpdatedAt
						}
					}
					ownedFunctionalities9.ID = types.StringPointerValue(ownedFunctionalitiesItem4.ID)
					if len(ownedFunctionalitiesItem4.Labels) > 0 {
						ownedFunctionalities9.Labels = make(map[string]types.String)
						for key13, value17 := range ownedFunctionalitiesItem4.Labels {
							ownedFunctionalities9.Labels[key13] = types.StringValue(value17)
						}
					}
					ownedFunctionalities9.Links = []tfTypes.LinksEntity{}
					for linksCount13, linksItem13 := range ownedFunctionalitiesItem4.Links {
						var links27 tfTypes.LinksEntity
						links27.HrefURL = types.StringPointerValue(linksItem13.HrefURL)
						links27.IconURL = types.StringPointerValue(linksItem13.IconURL)
						links27.ID = types.StringPointerValue(linksItem13.ID)
						links27.Name = types.StringPointerValue(linksItem13.Name)
						if linksCount13+1 > len(ownedFunctionalities9.Links) {
							ownedFunctionalities9.Links = append(ownedFunctionalities9.Links, links27)
						} else {
							ownedFunctionalities9.Links[linksCount13].HrefURL = links27.HrefURL
							ownedFunctionalities9.Links[linksCount13].IconURL = links27.IconURL
							ownedFunctionalities9.Links[linksCount13].ID = links27.ID
							ownedFunctionalities9.Links[linksCount13].Name = links27.Name
						}
					}
					ownedFunctionalities9.Name = types.StringPointerValue(ownedFunctionalitiesItem4.Name)
					if ownedFunctionalitiesItem4.Owner == nil {
						ownedFunctionalities9.Owner = nil
					} else {
						ownedFunctionalities9.Owner = &tfTypes.TeamEntity1{}
					}
					ownedFunctionalities9.Slug = types.StringPointerValue(ownedFunctionalitiesItem4.Slug)
					if ownedFunctionalitiesItem4.UpdatedAt != nil {
						ownedFunctionalities9.UpdatedAt = types.StringValue(ownedFunctionalitiesItem4.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						ownedFunctionalities9.UpdatedAt = types.StringNull()
					}
					if ownedFunctionalitiesItem4.UpdatedBy == nil {
						ownedFunctionalities9.UpdatedBy = nil
					} else {
						ownedFunctionalities9.UpdatedBy = &tfTypes.AuthorEntity{}
						ownedFunctionalities9.UpdatedBy.Email = types.StringPointerValue(ownedFunctionalitiesItem4.UpdatedBy.Email)
						ownedFunctionalities9.UpdatedBy.ID = types.StringPointerValue(ownedFunctionalitiesItem4.UpdatedBy.ID)
						ownedFunctionalities9.UpdatedBy.Name = types.StringPointerValue(ownedFunctionalitiesItem4.UpdatedBy.Name)
						ownedFunctionalities9.UpdatedBy.Source = types.StringPointerValue(ownedFunctionalitiesItem4.UpdatedBy.Source)
					}
					if ownedFunctionalitiesCount4+1 > len(r.Service.Owner.OwnedFunctionalities) {
						r.Service.Owner.OwnedFunctionalities = append(r.Service.Owner.OwnedFunctionalities, ownedFunctionalities9)
					} else {
						r.Service.Owner.OwnedFunctionalities[ownedFunctionalitiesCount4].ActiveIncidents = ownedFunctionalities9.ActiveIncidents
						r.Service.Owner.OwnedFunctionalities[ownedFunctionalitiesCount4].AlertOnAdd = ownedFunctionalities9.AlertOnAdd
						r.Service.Owner.OwnedFunctionalities[ownedFunctionalitiesCount4].AutoAddRespondingTeam = ownedFunctionalities9.AutoAddRespondingTeam
						r.Service.Owner.OwnedFunctionalities[ownedFunctionalitiesCount4].CreatedAt = ownedFunctionalities9.CreatedAt
						r.Service.Owner.OwnedFunctionalities[ownedFunctionalitiesCount4].Description = ownedFunctionalities9.Description
						r.Service.Owner.OwnedFunctionalities[ownedFunctionalitiesCount4].ExternalResources = ownedFunctionalities9.ExternalResources
						r.Service.Owner.OwnedFunctionalities[ownedFunctionalitiesCount4].ID = ownedFunctionalities9.ID
						r.Service.Owner.OwnedFunctionalities[ownedFunctionalitiesCount4].Labels = ownedFunctionalities9.Labels
						r.Service.Owner.OwnedFunctionalities[ownedFunctionalitiesCount4].Links = ownedFunctionalities9.Links
						r.Service.Owner.OwnedFunctionalities[ownedFunctionalitiesCount4].Name = ownedFunctionalities9.Name
						r.Service.Owner.OwnedFunctionalities[ownedFunctionalitiesCount4].Owner = ownedFunctionalities9.Owner
						r.Service.Owner.OwnedFunctionalities[ownedFunctionalitiesCount4].Slug = ownedFunctionalities9.Slug
						r.Service.Owner.OwnedFunctionalities[ownedFunctionalitiesCount4].UpdatedAt = ownedFunctionalities9.UpdatedAt
						r.Service.Owner.OwnedFunctionalities[ownedFunctionalitiesCount4].UpdatedBy = ownedFunctionalities9.UpdatedBy
					}
				}
				r.Service.Owner.OwnedRunbooks = []tfTypes.SlimRunbookEntity{}
				if len(r.Service.Owner.OwnedRunbooks) > len(resp.Service.Owner.OwnedRunbooks) {
					r.Service.Owner.OwnedRunbooks = r.Service.Owner.OwnedRunbooks[:len(resp.Service.Owner.OwnedRunbooks)]
				}
				for ownedRunbooksCount4, ownedRunbooksItem4 := range resp.Service.Owner.OwnedRunbooks {
					var ownedRunbooks9 tfTypes.SlimRunbookEntity
					if ownedRunbooksItem4.AttachmentRule == nil {
						ownedRunbooks9.AttachmentRule = nil
					} else {
						ownedRunbooks9.AttachmentRule = &tfTypes.RulesRuleEntity{}
						if ownedRunbooksItem4.AttachmentRule.Logic == nil {
							ownedRunbooks9.AttachmentRule.Logic = nil
						} else {
							ownedRunbooks9.AttachmentRule.Logic = &tfTypes.TeamEntity1{}
						}
						if ownedRunbooksItem4.AttachmentRule.UserData == nil {
							ownedRunbooks9.AttachmentRule.UserData = nil
						} else {
							ownedRunbooks9.AttachmentRule.UserData = &tfTypes.FHTypesGenericEntity{}
							ownedRunbooks9.AttachmentRule.UserData.Label = types.StringPointerValue(ownedRunbooksItem4.AttachmentRule.UserData.Label)
							ownedRunbooks9.AttachmentRule.UserData.Type = types.StringPointerValue(ownedRunbooksItem4.AttachmentRule.UserData.Type)
							ownedRunbooks9.AttachmentRule.UserData.Value = types.StringPointerValue(ownedRunbooksItem4.AttachmentRule.UserData.Value)
						}
					}
					ownedRunbooks9.Categories = types.StringPointerValue(ownedRunbooksItem4.Categories)
					if ownedRunbooksItem4.CreatedAt != nil {
						ownedRunbooks9.CreatedAt = types.StringValue(ownedRunbooksItem4.CreatedAt.Format(time.RFC3339Nano))
					} else {
						ownedRunbooks9.CreatedAt = types.StringNull()
					}
					ownedRunbooks9.Description = types.StringPointerValue(ownedRunbooksItem4.Description)
					ownedRunbooks9.ID = types.StringPointerValue(ownedRunbooksItem4.ID)
					ownedRunbooks9.Name = types.StringPointerValue(ownedRunbooksItem4.Name)
					if ownedRunbooksItem4.Owner == nil {
						ownedRunbooks9.Owner = nil
					} else {
						ownedRunbooks9.Owner = &tfTypes.TeamEntity1{}
					}
					ownedRunbooks9.Summary = types.StringPointerValue(ownedRunbooksItem4.Summary)
					ownedRunbooks9.Type = types.StringPointerValue(ownedRunbooksItem4.Type)
					if ownedRunbooksItem4.UpdatedAt != nil {
						ownedRunbooks9.UpdatedAt = types.StringValue(ownedRunbooksItem4.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						ownedRunbooks9.UpdatedAt = types.StringNull()
					}
					if ownedRunbooksCount4+1 > len(r.Service.Owner.OwnedRunbooks) {
						r.Service.Owner.OwnedRunbooks = append(r.Service.Owner.OwnedRunbooks, ownedRunbooks9)
					} else {
						r.Service.Owner.OwnedRunbooks[ownedRunbooksCount4].AttachmentRule = ownedRunbooks9.AttachmentRule
						r.Service.Owner.OwnedRunbooks[ownedRunbooksCount4].Categories = ownedRunbooks9.Categories
						r.Service.Owner.OwnedRunbooks[ownedRunbooksCount4].CreatedAt = ownedRunbooks9.CreatedAt
						r.Service.Owner.OwnedRunbooks[ownedRunbooksCount4].Description = ownedRunbooks9.Description
						r.Service.Owner.OwnedRunbooks[ownedRunbooksCount4].ID = ownedRunbooks9.ID
						r.Service.Owner.OwnedRunbooks[ownedRunbooksCount4].Name = ownedRunbooks9.Name
						r.Service.Owner.OwnedRunbooks[ownedRunbooksCount4].Owner = ownedRunbooks9.Owner
						r.Service.Owner.OwnedRunbooks[ownedRunbooksCount4].Summary = ownedRunbooks9.Summary
						r.Service.Owner.OwnedRunbooks[ownedRunbooksCount4].Type = ownedRunbooks9.Type
						r.Service.Owner.OwnedRunbooks[ownedRunbooksCount4].UpdatedAt = ownedRunbooks9.UpdatedAt
					}
				}
				r.Service.Owner.SignalsIcalURL = types.StringPointerValue(resp.Service.Owner.SignalsIcalURL)
				if resp.Service.Owner.SlackChannel == nil {
					r.Service.Owner.SlackChannel = nil
				} else {
					r.Service.Owner.SlackChannel = &tfTypes.IntegrationsSlackSlackChannelEntity{}
					r.Service.Owner.SlackChannel.ID = types.StringPointerValue(resp.Service.Owner.SlackChannel.ID)
					r.Service.Owner.SlackChannel.Name = types.StringPointerValue(resp.Service.Owner.SlackChannel.Name)
					r.Service.Owner.SlackChannel.SlackChannelID = types.StringPointerValue(resp.Service.Owner.SlackChannel.SlackChannelID)
				}
				r.Service.Owner.Slug = types.StringPointerValue(resp.Service.Owner.Slug)
				if resp.Service.Owner.UpdatedAt != nil {
					r.Service.Owner.UpdatedAt = types.StringValue(resp.Service.Owner.UpdatedAt.Format(time.RFC3339Nano))
				} else {
					r.Service.Owner.UpdatedAt = types.StringNull()
				}
			}
			if resp.Service.ServiceChecklistUpdatedAt != nil {
				r.Service.ServiceChecklistUpdatedAt = types.StringValue(resp.Service.ServiceChecklistUpdatedAt.Format(time.RFC3339Nano))
			} else {
				r.Service.ServiceChecklistUpdatedAt = types.StringNull()
			}
			if resp.Service.ServiceTier != nil {
				r.Service.ServiceTier = types.Int64Value(int64(*resp.Service.ServiceTier))
			} else {
				r.Service.ServiceTier = types.Int64Null()
			}
			r.Service.Slug = types.StringPointerValue(resp.Service.Slug)
			r.Service.Teams = []tfTypes.TeamEntity{}
			if len(r.Service.Teams) > len(resp.Service.Teams) {
				r.Service.Teams = r.Service.Teams[:len(resp.Service.Teams)]
			}
			for teamsCount1, teamsItem1 := range resp.Service.Teams {
				var teams3 tfTypes.TeamEntity
				if teamsItem1.CreatedAt != nil {
					teams3.CreatedAt = types.StringValue(teamsItem1.CreatedAt.Format(time.RFC3339Nano))
				} else {
					teams3.CreatedAt = types.StringNull()
				}
				if teamsItem1.CreatedBy == nil {
					teams3.CreatedBy = nil
				} else {
					teams3.CreatedBy = &tfTypes.AuthorEntity{}
					teams3.CreatedBy.Email = types.StringPointerValue(teamsItem1.CreatedBy.Email)
					teams3.CreatedBy.ID = types.StringPointerValue(teamsItem1.CreatedBy.ID)
					teams3.CreatedBy.Name = types.StringPointerValue(teamsItem1.CreatedBy.Name)
					teams3.CreatedBy.Source = types.StringPointerValue(teamsItem1.CreatedBy.Source)
				}
				teams3.Description = types.StringPointerValue(teamsItem1.Description)
				teams3.Functionalities = []tfTypes.FunctionalityEntity{}
				for functionalitiesCount7, functionalitiesItem7 := range teamsItem1.Functionalities {
					var functionalities15 tfTypes.FunctionalityEntity
					functionalities15.ActiveIncidents = []types.String{}
					for _, v := range functionalitiesItem7.ActiveIncidents {
						functionalities15.ActiveIncidents = append(functionalities15.ActiveIncidents, types.StringValue(v))
					}
					functionalities15.AlertOnAdd = types.BoolPointerValue(functionalitiesItem7.AlertOnAdd)
					functionalities15.AutoAddRespondingTeam = types.BoolPointerValue(functionalitiesItem7.AutoAddRespondingTeam)
					if functionalitiesItem7.CreatedAt != nil {
						functionalities15.CreatedAt = types.StringValue(functionalitiesItem7.CreatedAt.Format(time.RFC3339Nano))
					} else {
						functionalities15.CreatedAt = types.StringNull()
					}
					functionalities15.Description = types.StringPointerValue(functionalitiesItem7.Description)
					functionalities15.ExternalResources = []tfTypes.ExternalResourceEntity{}
					for externalResourcesCount14, externalResourcesItem14 := range functionalitiesItem7.ExternalResources {
						var externalResources29 tfTypes.ExternalResourceEntity
						externalResources29.ConnectionID = types.StringPointerValue(externalResourcesItem14.ConnectionID)
						externalResources29.ConnectionName = types.StringPointerValue(externalResourcesItem14.ConnectionName)
						externalResources29.ConnectionType = types.StringPointerValue(externalResourcesItem14.ConnectionType)
						if externalResourcesItem14.CreatedAt != nil {
							externalResources29.CreatedAt = types.StringValue(externalResourcesItem14.CreatedAt.Format(time.RFC3339Nano))
						} else {
							externalResources29.CreatedAt = types.StringNull()
						}
						externalResources29.Name = types.StringPointerValue(externalResourcesItem14.Name)
						externalResources29.RemoteID = types.StringPointerValue(externalResourcesItem14.RemoteID)
						externalResources29.RemoteURL = types.StringPointerValue(externalResourcesItem14.RemoteURL)
						if externalResourcesItem14.UpdatedAt != nil {
							externalResources29.UpdatedAt = types.StringValue(externalResourcesItem14.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							externalResources29.UpdatedAt = types.StringNull()
						}
						if externalResourcesCount14+1 > len(functionalities15.ExternalResources) {
							functionalities15.ExternalResources = append(functionalities15.ExternalResources, externalResources29)
						} else {
							functionalities15.ExternalResources[externalResourcesCount14].ConnectionID = externalResources29.ConnectionID
							functionalities15.ExternalResources[externalResourcesCount14].ConnectionName = externalResources29.ConnectionName
							functionalities15.ExternalResources[externalResourcesCount14].ConnectionType = externalResources29.ConnectionType
							functionalities15.ExternalResources[externalResourcesCount14].CreatedAt = externalResources29.CreatedAt
							functionalities15.ExternalResources[externalResourcesCount14].Name = externalResources29.Name
							functionalities15.ExternalResources[externalResourcesCount14].RemoteID = externalResources29.RemoteID
							functionalities15.ExternalResources[externalResourcesCount14].RemoteURL = externalResources29.RemoteURL
							functionalities15.ExternalResources[externalResourcesCount14].UpdatedAt = externalResources29.UpdatedAt
						}
					}
					functionalities15.ID = types.StringPointerValue(functionalitiesItem7.ID)
					if len(functionalitiesItem7.Labels) > 0 {
						functionalities15.Labels = make(map[string]types.String)
						for key14, value19 := range functionalitiesItem7.Labels {
							functionalities15.Labels[key14] = types.StringValue(value19)
						}
					}
					functionalities15.Links = []tfTypes.LinksEntity{}
					for linksCount14, linksItem14 := range functionalitiesItem7.Links {
						var links29 tfTypes.LinksEntity
						links29.HrefURL = types.StringPointerValue(linksItem14.HrefURL)
						links29.IconURL = types.StringPointerValue(linksItem14.IconURL)
						links29.ID = types.StringPointerValue(linksItem14.ID)
						links29.Name = types.StringPointerValue(linksItem14.Name)
						if linksCount14+1 > len(functionalities15.Links) {
							functionalities15.Links = append(functionalities15.Links, links29)
						} else {
							functionalities15.Links[linksCount14].HrefURL = links29.HrefURL
							functionalities15.Links[linksCount14].IconURL = links29.IconURL
							functionalities15.Links[linksCount14].ID = links29.ID
							functionalities15.Links[linksCount14].Name = links29.Name
						}
					}
					functionalities15.Name = types.StringPointerValue(functionalitiesItem7.Name)
					if functionalitiesItem7.Owner == nil {
						functionalities15.Owner = nil
					} else {
						functionalities15.Owner = &tfTypes.TeamEntity1{}
					}
					functionalities15.Slug = types.StringPointerValue(functionalitiesItem7.Slug)
					if functionalitiesItem7.UpdatedAt != nil {
						functionalities15.UpdatedAt = types.StringValue(functionalitiesItem7.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						functionalities15.UpdatedAt = types.StringNull()
					}
					if functionalitiesItem7.UpdatedBy == nil {
						functionalities15.UpdatedBy = nil
					} else {
						functionalities15.UpdatedBy = &tfTypes.AuthorEntity{}
						functionalities15.UpdatedBy.Email = types.StringPointerValue(functionalitiesItem7.UpdatedBy.Email)
						functionalities15.UpdatedBy.ID = types.StringPointerValue(functionalitiesItem7.UpdatedBy.ID)
						functionalities15.UpdatedBy.Name = types.StringPointerValue(functionalitiesItem7.UpdatedBy.Name)
						functionalities15.UpdatedBy.Source = types.StringPointerValue(functionalitiesItem7.UpdatedBy.Source)
					}
					if functionalitiesCount7+1 > len(teams3.Functionalities) {
						teams3.Functionalities = append(teams3.Functionalities, functionalities15)
					} else {
						teams3.Functionalities[functionalitiesCount7].ActiveIncidents = functionalities15.ActiveIncidents
						teams3.Functionalities[functionalitiesCount7].AlertOnAdd = functionalities15.AlertOnAdd
						teams3.Functionalities[functionalitiesCount7].AutoAddRespondingTeam = functionalities15.AutoAddRespondingTeam
						teams3.Functionalities[functionalitiesCount7].CreatedAt = functionalities15.CreatedAt
						teams3.Functionalities[functionalitiesCount7].Description = functionalities15.Description
						teams3.Functionalities[functionalitiesCount7].ExternalResources = functionalities15.ExternalResources
						teams3.Functionalities[functionalitiesCount7].ID = functionalities15.ID
						teams3.Functionalities[functionalitiesCount7].Labels = functionalities15.Labels
						teams3.Functionalities[functionalitiesCount7].Links = functionalities15.Links
						teams3.Functionalities[functionalitiesCount7].Name = functionalities15.Name
						teams3.Functionalities[functionalitiesCount7].Owner = functionalities15.Owner
						teams3.Functionalities[functionalitiesCount7].Slug = functionalities15.Slug
						teams3.Functionalities[functionalitiesCount7].UpdatedAt = functionalities15.UpdatedAt
						teams3.Functionalities[functionalitiesCount7].UpdatedBy = functionalities15.UpdatedBy
					}
				}
				teams3.ID = types.StringPointerValue(teamsItem1.ID)
				teams3.Memberships = []tfTypes.MembershipEntity{}
				for membershipsCount5, membershipsItem5 := range teamsItem1.Memberships {
					var memberships11 tfTypes.MembershipEntity
					if membershipsItem5.DefaultIncidentRole == nil {
						memberships11.DefaultIncidentRole = nil
					} else {
						memberships11.DefaultIncidentRole = &tfTypes.IncidentRoleEntity{}
						if membershipsItem5.DefaultIncidentRole.CreatedAt != nil {
							memberships11.DefaultIncidentRole.CreatedAt = types.StringValue(membershipsItem5.DefaultIncidentRole.CreatedAt.Format(time.RFC3339Nano))
						} else {
							memberships11.DefaultIncidentRole.CreatedAt = types.StringNull()
						}
						memberships11.DefaultIncidentRole.Description = types.StringPointerValue(membershipsItem5.DefaultIncidentRole.Description)
						if membershipsItem5.DefaultIncidentRole.DiscardedAt != nil {
							memberships11.DefaultIncidentRole.DiscardedAt = types.StringValue(membershipsItem5.DefaultIncidentRole.DiscardedAt.Format(time.RFC3339Nano))
						} else {
							memberships11.DefaultIncidentRole.DiscardedAt = types.StringNull()
						}
						memberships11.DefaultIncidentRole.ID = types.StringPointerValue(membershipsItem5.DefaultIncidentRole.ID)
						memberships11.DefaultIncidentRole.Name = types.StringPointerValue(membershipsItem5.DefaultIncidentRole.Name)
						memberships11.DefaultIncidentRole.Summary = types.StringPointerValue(membershipsItem5.DefaultIncidentRole.Summary)
						if membershipsItem5.DefaultIncidentRole.UpdatedAt != nil {
							memberships11.DefaultIncidentRole.UpdatedAt = types.StringValue(membershipsItem5.DefaultIncidentRole.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							memberships11.DefaultIncidentRole.UpdatedAt = types.StringNull()
						}
					}
					if membershipsItem5.Schedule == nil {
						memberships11.Schedule = nil
					} else {
						memberships11.Schedule = &tfTypes.ScheduleEntity{}
						memberships11.Schedule.Discarded = types.BoolPointerValue(membershipsItem5.Schedule.Discarded)
						memberships11.Schedule.ID = types.StringPointerValue(membershipsItem5.Schedule.ID)
						memberships11.Schedule.Integration = types.StringPointerValue(membershipsItem5.Schedule.Integration)
						memberships11.Schedule.Name = types.StringPointerValue(membershipsItem5.Schedule.Name)
					}
					if membershipsItem5.User == nil {
						memberships11.User = nil
					} else {
						memberships11.User = &tfTypes.UserEntity{}
						if membershipsItem5.User.CreatedAt != nil {
							memberships11.User.CreatedAt = types.StringValue(membershipsItem5.User.CreatedAt.Format(time.RFC3339Nano))
						} else {
							memberships11.User.CreatedAt = types.StringNull()
						}
						memberships11.User.Email = types.StringPointerValue(membershipsItem5.User.Email)
						memberships11.User.ID = types.StringPointerValue(membershipsItem5.User.ID)
						memberships11.User.Name = types.StringPointerValue(membershipsItem5.User.Name)
						memberships11.User.SignalsEnabledNotificationTypes = []types.String{}
						for _, v := range membershipsItem5.User.SignalsEnabledNotificationTypes {
							memberships11.User.SignalsEnabledNotificationTypes = append(memberships11.User.SignalsEnabledNotificationTypes, types.StringValue(v))
						}
						memberships11.User.SlackLinked = types.BoolPointerValue(membershipsItem5.User.SlackLinked)
						memberships11.User.SlackUserID = types.StringPointerValue(membershipsItem5.User.SlackUserID)
						if membershipsItem5.User.UpdatedAt != nil {
							memberships11.User.UpdatedAt = types.StringValue(membershipsItem5.User.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							memberships11.User.UpdatedAt = types.StringNull()
						}
					}
					if membershipsCount5+1 > len(teams3.Memberships) {
						teams3.Memberships = append(teams3.Memberships, memberships11)
					} else {
						teams3.Memberships[membershipsCount5].DefaultIncidentRole = memberships11.DefaultIncidentRole
						teams3.Memberships[membershipsCount5].Schedule = memberships11.Schedule
						teams3.Memberships[membershipsCount5].User = memberships11.User
					}
				}
				if teamsItem1.MsTeamsChannel == nil {
					teams3.MsTeamsChannel = nil
				} else {
					teams3.MsTeamsChannel = &tfTypes.IntegrationsMicrosoftTeamsV2ChannelEntity{}
					teams3.MsTeamsChannel.ChannelID = types.StringPointerValue(teamsItem1.MsTeamsChannel.ChannelID)
					teams3.MsTeamsChannel.ChannelName = types.StringPointerValue(teamsItem1.MsTeamsChannel.ChannelName)
					teams3.MsTeamsChannel.ChannelURL = types.StringPointerValue(teamsItem1.MsTeamsChannel.ChannelURL)
					teams3.MsTeamsChannel.ID = types.StringPointerValue(teamsItem1.MsTeamsChannel.ID)
					teams3.MsTeamsChannel.MsTeamID = types.StringPointerValue(teamsItem1.MsTeamsChannel.MsTeamID)
					teams3.MsTeamsChannel.Status = types.StringPointerValue(teamsItem1.MsTeamsChannel.Status)
					teams3.MsTeamsChannel.TeamName = types.StringPointerValue(teamsItem1.MsTeamsChannel.TeamName)
				}
				teams3.Name = types.StringPointerValue(teamsItem1.Name)
				teams3.OwnedFunctionalities = []tfTypes.FunctionalityEntity{}
				for ownedFunctionalitiesCount5, ownedFunctionalitiesItem5 := range teamsItem1.OwnedFunctionalities {
					var ownedFunctionalities11 tfTypes.FunctionalityEntity
					ownedFunctionalities11.ActiveIncidents = []types.String{}
					for _, v := range ownedFunctionalitiesItem5.ActiveIncidents {
						ownedFunctionalities11.ActiveIncidents = append(ownedFunctionalities11.ActiveIncidents, types.StringValue(v))
					}
					ownedFunctionalities11.AlertOnAdd = types.BoolPointerValue(ownedFunctionalitiesItem5.AlertOnAdd)
					ownedFunctionalities11.AutoAddRespondingTeam = types.BoolPointerValue(ownedFunctionalitiesItem5.AutoAddRespondingTeam)
					if ownedFunctionalitiesItem5.CreatedAt != nil {
						ownedFunctionalities11.CreatedAt = types.StringValue(ownedFunctionalitiesItem5.CreatedAt.Format(time.RFC3339Nano))
					} else {
						ownedFunctionalities11.CreatedAt = types.StringNull()
					}
					ownedFunctionalities11.Description = types.StringPointerValue(ownedFunctionalitiesItem5.Description)
					ownedFunctionalities11.ExternalResources = []tfTypes.ExternalResourceEntity{}
					for externalResourcesCount15, externalResourcesItem15 := range ownedFunctionalitiesItem5.ExternalResources {
						var externalResources31 tfTypes.ExternalResourceEntity
						externalResources31.ConnectionID = types.StringPointerValue(externalResourcesItem15.ConnectionID)
						externalResources31.ConnectionName = types.StringPointerValue(externalResourcesItem15.ConnectionName)
						externalResources31.ConnectionType = types.StringPointerValue(externalResourcesItem15.ConnectionType)
						if externalResourcesItem15.CreatedAt != nil {
							externalResources31.CreatedAt = types.StringValue(externalResourcesItem15.CreatedAt.Format(time.RFC3339Nano))
						} else {
							externalResources31.CreatedAt = types.StringNull()
						}
						externalResources31.Name = types.StringPointerValue(externalResourcesItem15.Name)
						externalResources31.RemoteID = types.StringPointerValue(externalResourcesItem15.RemoteID)
						externalResources31.RemoteURL = types.StringPointerValue(externalResourcesItem15.RemoteURL)
						if externalResourcesItem15.UpdatedAt != nil {
							externalResources31.UpdatedAt = types.StringValue(externalResourcesItem15.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							externalResources31.UpdatedAt = types.StringNull()
						}
						if externalResourcesCount15+1 > len(ownedFunctionalities11.ExternalResources) {
							ownedFunctionalities11.ExternalResources = append(ownedFunctionalities11.ExternalResources, externalResources31)
						} else {
							ownedFunctionalities11.ExternalResources[externalResourcesCount15].ConnectionID = externalResources31.ConnectionID
							ownedFunctionalities11.ExternalResources[externalResourcesCount15].ConnectionName = externalResources31.ConnectionName
							ownedFunctionalities11.ExternalResources[externalResourcesCount15].ConnectionType = externalResources31.ConnectionType
							ownedFunctionalities11.ExternalResources[externalResourcesCount15].CreatedAt = externalResources31.CreatedAt
							ownedFunctionalities11.ExternalResources[externalResourcesCount15].Name = externalResources31.Name
							ownedFunctionalities11.ExternalResources[externalResourcesCount15].RemoteID = externalResources31.RemoteID
							ownedFunctionalities11.ExternalResources[externalResourcesCount15].RemoteURL = externalResources31.RemoteURL
							ownedFunctionalities11.ExternalResources[externalResourcesCount15].UpdatedAt = externalResources31.UpdatedAt
						}
					}
					ownedFunctionalities11.ID = types.StringPointerValue(ownedFunctionalitiesItem5.ID)
					if len(ownedFunctionalitiesItem5.Labels) > 0 {
						ownedFunctionalities11.Labels = make(map[string]types.String)
						for key15, value20 := range ownedFunctionalitiesItem5.Labels {
							ownedFunctionalities11.Labels[key15] = types.StringValue(value20)
						}
					}
					ownedFunctionalities11.Links = []tfTypes.LinksEntity{}
					for linksCount15, linksItem15 := range ownedFunctionalitiesItem5.Links {
						var links31 tfTypes.LinksEntity
						links31.HrefURL = types.StringPointerValue(linksItem15.HrefURL)
						links31.IconURL = types.StringPointerValue(linksItem15.IconURL)
						links31.ID = types.StringPointerValue(linksItem15.ID)
						links31.Name = types.StringPointerValue(linksItem15.Name)
						if linksCount15+1 > len(ownedFunctionalities11.Links) {
							ownedFunctionalities11.Links = append(ownedFunctionalities11.Links, links31)
						} else {
							ownedFunctionalities11.Links[linksCount15].HrefURL = links31.HrefURL
							ownedFunctionalities11.Links[linksCount15].IconURL = links31.IconURL
							ownedFunctionalities11.Links[linksCount15].ID = links31.ID
							ownedFunctionalities11.Links[linksCount15].Name = links31.Name
						}
					}
					ownedFunctionalities11.Name = types.StringPointerValue(ownedFunctionalitiesItem5.Name)
					if ownedFunctionalitiesItem5.Owner == nil {
						ownedFunctionalities11.Owner = nil
					} else {
						ownedFunctionalities11.Owner = &tfTypes.TeamEntity1{}
					}
					ownedFunctionalities11.Slug = types.StringPointerValue(ownedFunctionalitiesItem5.Slug)
					if ownedFunctionalitiesItem5.UpdatedAt != nil {
						ownedFunctionalities11.UpdatedAt = types.StringValue(ownedFunctionalitiesItem5.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						ownedFunctionalities11.UpdatedAt = types.StringNull()
					}
					if ownedFunctionalitiesItem5.UpdatedBy == nil {
						ownedFunctionalities11.UpdatedBy = nil
					} else {
						ownedFunctionalities11.UpdatedBy = &tfTypes.AuthorEntity{}
						ownedFunctionalities11.UpdatedBy.Email = types.StringPointerValue(ownedFunctionalitiesItem5.UpdatedBy.Email)
						ownedFunctionalities11.UpdatedBy.ID = types.StringPointerValue(ownedFunctionalitiesItem5.UpdatedBy.ID)
						ownedFunctionalities11.UpdatedBy.Name = types.StringPointerValue(ownedFunctionalitiesItem5.UpdatedBy.Name)
						ownedFunctionalities11.UpdatedBy.Source = types.StringPointerValue(ownedFunctionalitiesItem5.UpdatedBy.Source)
					}
					if ownedFunctionalitiesCount5+1 > len(teams3.OwnedFunctionalities) {
						teams3.OwnedFunctionalities = append(teams3.OwnedFunctionalities, ownedFunctionalities11)
					} else {
						teams3.OwnedFunctionalities[ownedFunctionalitiesCount5].ActiveIncidents = ownedFunctionalities11.ActiveIncidents
						teams3.OwnedFunctionalities[ownedFunctionalitiesCount5].AlertOnAdd = ownedFunctionalities11.AlertOnAdd
						teams3.OwnedFunctionalities[ownedFunctionalitiesCount5].AutoAddRespondingTeam = ownedFunctionalities11.AutoAddRespondingTeam
						teams3.OwnedFunctionalities[ownedFunctionalitiesCount5].CreatedAt = ownedFunctionalities11.CreatedAt
						teams3.OwnedFunctionalities[ownedFunctionalitiesCount5].Description = ownedFunctionalities11.Description
						teams3.OwnedFunctionalities[ownedFunctionalitiesCount5].ExternalResources = ownedFunctionalities11.ExternalResources
						teams3.OwnedFunctionalities[ownedFunctionalitiesCount5].ID = ownedFunctionalities11.ID
						teams3.OwnedFunctionalities[ownedFunctionalitiesCount5].Labels = ownedFunctionalities11.Labels
						teams3.OwnedFunctionalities[ownedFunctionalitiesCount5].Links = ownedFunctionalities11.Links
						teams3.OwnedFunctionalities[ownedFunctionalitiesCount5].Name = ownedFunctionalities11.Name
						teams3.OwnedFunctionalities[ownedFunctionalitiesCount5].Owner = ownedFunctionalities11.Owner
						teams3.OwnedFunctionalities[ownedFunctionalitiesCount5].Slug = ownedFunctionalities11.Slug
						teams3.OwnedFunctionalities[ownedFunctionalitiesCount5].UpdatedAt = ownedFunctionalities11.UpdatedAt
						teams3.OwnedFunctionalities[ownedFunctionalitiesCount5].UpdatedBy = ownedFunctionalities11.UpdatedBy
					}
				}
				teams3.OwnedRunbooks = []tfTypes.SlimRunbookEntity{}
				for ownedRunbooksCount5, ownedRunbooksItem5 := range teamsItem1.OwnedRunbooks {
					var ownedRunbooks11 tfTypes.SlimRunbookEntity
					if ownedRunbooksItem5.AttachmentRule == nil {
						ownedRunbooks11.AttachmentRule = nil
					} else {
						ownedRunbooks11.AttachmentRule = &tfTypes.RulesRuleEntity{}
						if ownedRunbooksItem5.AttachmentRule.Logic == nil {
							ownedRunbooks11.AttachmentRule.Logic = nil
						} else {
							ownedRunbooks11.AttachmentRule.Logic = &tfTypes.TeamEntity1{}
						}
						if ownedRunbooksItem5.AttachmentRule.UserData == nil {
							ownedRunbooks11.AttachmentRule.UserData = nil
						} else {
							ownedRunbooks11.AttachmentRule.UserData = &tfTypes.FHTypesGenericEntity{}
							ownedRunbooks11.AttachmentRule.UserData.Label = types.StringPointerValue(ownedRunbooksItem5.AttachmentRule.UserData.Label)
							ownedRunbooks11.AttachmentRule.UserData.Type = types.StringPointerValue(ownedRunbooksItem5.AttachmentRule.UserData.Type)
							ownedRunbooks11.AttachmentRule.UserData.Value = types.StringPointerValue(ownedRunbooksItem5.AttachmentRule.UserData.Value)
						}
					}
					ownedRunbooks11.Categories = types.StringPointerValue(ownedRunbooksItem5.Categories)
					if ownedRunbooksItem5.CreatedAt != nil {
						ownedRunbooks11.CreatedAt = types.StringValue(ownedRunbooksItem5.CreatedAt.Format(time.RFC3339Nano))
					} else {
						ownedRunbooks11.CreatedAt = types.StringNull()
					}
					ownedRunbooks11.Description = types.StringPointerValue(ownedRunbooksItem5.Description)
					ownedRunbooks11.ID = types.StringPointerValue(ownedRunbooksItem5.ID)
					ownedRunbooks11.Name = types.StringPointerValue(ownedRunbooksItem5.Name)
					if ownedRunbooksItem5.Owner == nil {
						ownedRunbooks11.Owner = nil
					} else {
						ownedRunbooks11.Owner = &tfTypes.TeamEntity1{}
					}
					ownedRunbooks11.Summary = types.StringPointerValue(ownedRunbooksItem5.Summary)
					ownedRunbooks11.Type = types.StringPointerValue(ownedRunbooksItem5.Type)
					if ownedRunbooksItem5.UpdatedAt != nil {
						ownedRunbooks11.UpdatedAt = types.StringValue(ownedRunbooksItem5.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						ownedRunbooks11.UpdatedAt = types.StringNull()
					}
					if ownedRunbooksCount5+1 > len(teams3.OwnedRunbooks) {
						teams3.OwnedRunbooks = append(teams3.OwnedRunbooks, ownedRunbooks11)
					} else {
						teams3.OwnedRunbooks[ownedRunbooksCount5].AttachmentRule = ownedRunbooks11.AttachmentRule
						teams3.OwnedRunbooks[ownedRunbooksCount5].Categories = ownedRunbooks11.Categories
						teams3.OwnedRunbooks[ownedRunbooksCount5].CreatedAt = ownedRunbooks11.CreatedAt
						teams3.OwnedRunbooks[ownedRunbooksCount5].Description = ownedRunbooks11.Description
						teams3.OwnedRunbooks[ownedRunbooksCount5].ID = ownedRunbooks11.ID
						teams3.OwnedRunbooks[ownedRunbooksCount5].Name = ownedRunbooks11.Name
						teams3.OwnedRunbooks[ownedRunbooksCount5].Owner = ownedRunbooks11.Owner
						teams3.OwnedRunbooks[ownedRunbooksCount5].Summary = ownedRunbooks11.Summary
						teams3.OwnedRunbooks[ownedRunbooksCount5].Type = ownedRunbooks11.Type
						teams3.OwnedRunbooks[ownedRunbooksCount5].UpdatedAt = ownedRunbooks11.UpdatedAt
					}
				}
				teams3.SignalsIcalURL = types.StringPointerValue(teamsItem1.SignalsIcalURL)
				if teamsItem1.SlackChannel == nil {
					teams3.SlackChannel = nil
				} else {
					teams3.SlackChannel = &tfTypes.IntegrationsSlackSlackChannelEntity{}
					teams3.SlackChannel.ID = types.StringPointerValue(teamsItem1.SlackChannel.ID)
					teams3.SlackChannel.Name = types.StringPointerValue(teamsItem1.SlackChannel.Name)
					teams3.SlackChannel.SlackChannelID = types.StringPointerValue(teamsItem1.SlackChannel.SlackChannelID)
				}
				teams3.Slug = types.StringPointerValue(teamsItem1.Slug)
				if teamsItem1.UpdatedAt != nil {
					teams3.UpdatedAt = types.StringValue(teamsItem1.UpdatedAt.Format(time.RFC3339Nano))
				} else {
					teams3.UpdatedAt = types.StringNull()
				}
				if teamsCount1+1 > len(r.Service.Teams) {
					r.Service.Teams = append(r.Service.Teams, teams3)
				} else {
					r.Service.Teams[teamsCount1].CreatedAt = teams3.CreatedAt
					r.Service.Teams[teamsCount1].CreatedBy = teams3.CreatedBy
					r.Service.Teams[teamsCount1].Description = teams3.Description
					r.Service.Teams[teamsCount1].Functionalities = teams3.Functionalities
					r.Service.Teams[teamsCount1].ID = teams3.ID
					r.Service.Teams[teamsCount1].Memberships = teams3.Memberships
					r.Service.Teams[teamsCount1].MsTeamsChannel = teams3.MsTeamsChannel
					r.Service.Teams[teamsCount1].Name = teams3.Name
					r.Service.Teams[teamsCount1].OwnedFunctionalities = teams3.OwnedFunctionalities
					r.Service.Teams[teamsCount1].OwnedRunbooks = teams3.OwnedRunbooks
					r.Service.Teams[teamsCount1].SignalsIcalURL = teams3.SignalsIcalURL
					r.Service.Teams[teamsCount1].SlackChannel = teams3.SlackChannel
					r.Service.Teams[teamsCount1].Slug = teams3.Slug
					r.Service.Teams[teamsCount1].UpdatedAt = teams3.UpdatedAt
				}
			}
			if resp.Service.UpdatedAt != nil {
				r.Service.UpdatedAt = types.StringValue(resp.Service.UpdatedAt.Format(time.RFC3339Nano))
			} else {
				r.Service.UpdatedAt = types.StringNull()
			}
			if resp.Service.UpdatedBy == nil {
				r.Service.UpdatedBy = nil
			} else {
				r.Service.UpdatedBy = &tfTypes.AuthorEntity{}
				r.Service.UpdatedBy.Email = types.StringPointerValue(resp.Service.UpdatedBy.Email)
				r.Service.UpdatedBy.ID = types.StringPointerValue(resp.Service.UpdatedBy.ID)
				r.Service.UpdatedBy.Name = types.StringPointerValue(resp.Service.UpdatedBy.Name)
				r.Service.UpdatedBy.Source = types.StringPointerValue(resp.Service.UpdatedBy.Source)
			}
		}
		if resp.UpdatedAt != nil {
			r.UpdatedAt = types.StringValue(resp.UpdatedAt.Format(time.RFC3339Nano))
		} else {
			r.UpdatedAt = types.StringNull()
		}
	}
}
