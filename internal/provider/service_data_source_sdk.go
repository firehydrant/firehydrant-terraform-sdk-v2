// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/speakeasy/terraform-provider-firehydrant-terraform-sdk/internal/provider/types"
	"github.com/speakeasy/terraform-provider-firehydrant-terraform-sdk/internal/sdk/models/shared"
	"time"
)

func (r *ServiceDataSourceModel) RefreshFromSharedServiceEntity(resp *shared.ServiceEntity) {
	if resp != nil {
		r.ActiveIncidents = []types.String{}
		for _, v := range resp.ActiveIncidents {
			r.ActiveIncidents = append(r.ActiveIncidents, types.StringValue(v))
		}
		r.AlertOnAdd = types.BoolPointerValue(resp.AlertOnAdd)
		r.AllowedParams = []types.String{}
		for _, v := range resp.AllowedParams {
			r.AllowedParams = append(r.AllowedParams, types.StringValue(v))
		}
		r.AutoAddRespondingTeam = types.BoolPointerValue(resp.AutoAddRespondingTeam)
		r.Checklists = []tfTypes.Checklists{}
		if len(r.Checklists) > len(resp.Checklists) {
			r.Checklists = r.Checklists[:len(resp.Checklists)]
		}
		for checklistsCount, checklistsItem := range resp.Checklists {
			var checklists1 tfTypes.Checklists
			checklists1.Checks = []tfTypes.ChecklistCheckEntity{}
			for checksCount, checksItem := range checklistsItem.Checks {
				var checks1 tfTypes.ChecklistCheckEntity
				checks1.Description = types.StringPointerValue(checksItem.Description)
				checks1.ID = types.StringPointerValue(checksItem.ID)
				checks1.Name = types.StringPointerValue(checksItem.Name)
				checks1.Status = types.BoolPointerValue(checksItem.Status)
				if checksCount+1 > len(checklists1.Checks) {
					checklists1.Checks = append(checklists1.Checks, checks1)
				} else {
					checklists1.Checks[checksCount].Description = checks1.Description
					checklists1.Checks[checksCount].ID = checks1.ID
					checklists1.Checks[checksCount].Name = checks1.Name
					checklists1.Checks[checksCount].Status = checks1.Status
				}
			}
			checklists1.CreatedAt = types.StringPointerValue(checklistsItem.CreatedAt)
			checklists1.Description = types.StringPointerValue(checklistsItem.Description)
			checklists1.ID = types.StringPointerValue(checklistsItem.ID)
			checklists1.Name = types.StringPointerValue(checklistsItem.Name)
			if checklistsItem.Owner == nil {
				checklists1.Owner = nil
			} else {
				checklists1.Owner = &tfTypes.TeamEntity{}
				if checklistsItem.Owner.CreatedAt != nil {
					checklists1.Owner.CreatedAt = types.StringValue(checklistsItem.Owner.CreatedAt.Format(time.RFC3339Nano))
				} else {
					checklists1.Owner.CreatedAt = types.StringNull()
				}
				if checklistsItem.Owner.CreatedBy == nil {
					checklists1.Owner.CreatedBy = nil
				} else {
					checklists1.Owner.CreatedBy = &tfTypes.AuthorEntity{}
					checklists1.Owner.CreatedBy.Email = types.StringPointerValue(checklistsItem.Owner.CreatedBy.Email)
					checklists1.Owner.CreatedBy.ID = types.StringPointerValue(checklistsItem.Owner.CreatedBy.ID)
					checklists1.Owner.CreatedBy.Name = types.StringPointerValue(checklistsItem.Owner.CreatedBy.Name)
					checklists1.Owner.CreatedBy.Source = types.StringPointerValue(checklistsItem.Owner.CreatedBy.Source)
				}
				checklists1.Owner.Description = types.StringPointerValue(checklistsItem.Owner.Description)
				checklists1.Owner.Functionalities = []tfTypes.FunctionalityEntity{}
				for functionalitiesCount, functionalitiesItem := range checklistsItem.Owner.Functionalities {
					var functionalities1 tfTypes.FunctionalityEntity
					functionalities1.ActiveIncidents = []types.String{}
					for _, v := range functionalitiesItem.ActiveIncidents {
						functionalities1.ActiveIncidents = append(functionalities1.ActiveIncidents, types.StringValue(v))
					}
					functionalities1.AlertOnAdd = types.BoolPointerValue(functionalitiesItem.AlertOnAdd)
					functionalities1.AutoAddRespondingTeam = types.BoolPointerValue(functionalitiesItem.AutoAddRespondingTeam)
					if functionalitiesItem.CreatedAt != nil {
						functionalities1.CreatedAt = types.StringValue(functionalitiesItem.CreatedAt.Format(time.RFC3339Nano))
					} else {
						functionalities1.CreatedAt = types.StringNull()
					}
					functionalities1.Description = types.StringPointerValue(functionalitiesItem.Description)
					functionalities1.ExternalResources = []tfTypes.ExternalResourceEntity{}
					for externalResourcesCount, externalResourcesItem := range functionalitiesItem.ExternalResources {
						var externalResources1 tfTypes.ExternalResourceEntity
						externalResources1.ConnectionID = types.StringPointerValue(externalResourcesItem.ConnectionID)
						externalResources1.ConnectionName = types.StringPointerValue(externalResourcesItem.ConnectionName)
						externalResources1.ConnectionType = types.StringPointerValue(externalResourcesItem.ConnectionType)
						if externalResourcesItem.CreatedAt != nil {
							externalResources1.CreatedAt = types.StringValue(externalResourcesItem.CreatedAt.Format(time.RFC3339Nano))
						} else {
							externalResources1.CreatedAt = types.StringNull()
						}
						externalResources1.Name = types.StringPointerValue(externalResourcesItem.Name)
						externalResources1.RemoteID = types.StringPointerValue(externalResourcesItem.RemoteID)
						externalResources1.RemoteURL = types.StringPointerValue(externalResourcesItem.RemoteURL)
						if externalResourcesItem.UpdatedAt != nil {
							externalResources1.UpdatedAt = types.StringValue(externalResourcesItem.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							externalResources1.UpdatedAt = types.StringNull()
						}
						if externalResourcesCount+1 > len(functionalities1.ExternalResources) {
							functionalities1.ExternalResources = append(functionalities1.ExternalResources, externalResources1)
						} else {
							functionalities1.ExternalResources[externalResourcesCount].ConnectionID = externalResources1.ConnectionID
							functionalities1.ExternalResources[externalResourcesCount].ConnectionName = externalResources1.ConnectionName
							functionalities1.ExternalResources[externalResourcesCount].ConnectionType = externalResources1.ConnectionType
							functionalities1.ExternalResources[externalResourcesCount].CreatedAt = externalResources1.CreatedAt
							functionalities1.ExternalResources[externalResourcesCount].Name = externalResources1.Name
							functionalities1.ExternalResources[externalResourcesCount].RemoteID = externalResources1.RemoteID
							functionalities1.ExternalResources[externalResourcesCount].RemoteURL = externalResources1.RemoteURL
							functionalities1.ExternalResources[externalResourcesCount].UpdatedAt = externalResources1.UpdatedAt
						}
					}
					functionalities1.ID = types.StringPointerValue(functionalitiesItem.ID)
					if len(functionalitiesItem.Labels) > 0 {
						functionalities1.Labels = make(map[string]types.String)
						for key, value := range functionalitiesItem.Labels {
							functionalities1.Labels[key] = types.StringValue(value)
						}
					}
					functionalities1.Links = []tfTypes.LinksEntity{}
					for linksCount, linksItem := range functionalitiesItem.Links {
						var links1 tfTypes.LinksEntity
						links1.HrefURL = types.StringPointerValue(linksItem.HrefURL)
						links1.IconURL = types.StringPointerValue(linksItem.IconURL)
						links1.ID = types.StringPointerValue(linksItem.ID)
						links1.Name = types.StringPointerValue(linksItem.Name)
						if linksCount+1 > len(functionalities1.Links) {
							functionalities1.Links = append(functionalities1.Links, links1)
						} else {
							functionalities1.Links[linksCount].HrefURL = links1.HrefURL
							functionalities1.Links[linksCount].IconURL = links1.IconURL
							functionalities1.Links[linksCount].ID = links1.ID
							functionalities1.Links[linksCount].Name = links1.Name
						}
					}
					functionalities1.Name = types.StringPointerValue(functionalitiesItem.Name)
					if functionalitiesItem.Owner == nil {
						functionalities1.Owner = nil
					} else {
						functionalities1.Owner = &tfTypes.TeamEntity1{}
					}
					functionalities1.Slug = types.StringPointerValue(functionalitiesItem.Slug)
					if functionalitiesItem.UpdatedAt != nil {
						functionalities1.UpdatedAt = types.StringValue(functionalitiesItem.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						functionalities1.UpdatedAt = types.StringNull()
					}
					if functionalitiesItem.UpdatedBy == nil {
						functionalities1.UpdatedBy = nil
					} else {
						functionalities1.UpdatedBy = &tfTypes.AuthorEntity{}
						functionalities1.UpdatedBy.Email = types.StringPointerValue(functionalitiesItem.UpdatedBy.Email)
						functionalities1.UpdatedBy.ID = types.StringPointerValue(functionalitiesItem.UpdatedBy.ID)
						functionalities1.UpdatedBy.Name = types.StringPointerValue(functionalitiesItem.UpdatedBy.Name)
						functionalities1.UpdatedBy.Source = types.StringPointerValue(functionalitiesItem.UpdatedBy.Source)
					}
					if functionalitiesCount+1 > len(checklists1.Owner.Functionalities) {
						checklists1.Owner.Functionalities = append(checklists1.Owner.Functionalities, functionalities1)
					} else {
						checklists1.Owner.Functionalities[functionalitiesCount].ActiveIncidents = functionalities1.ActiveIncidents
						checklists1.Owner.Functionalities[functionalitiesCount].AlertOnAdd = functionalities1.AlertOnAdd
						checklists1.Owner.Functionalities[functionalitiesCount].AutoAddRespondingTeam = functionalities1.AutoAddRespondingTeam
						checklists1.Owner.Functionalities[functionalitiesCount].CreatedAt = functionalities1.CreatedAt
						checklists1.Owner.Functionalities[functionalitiesCount].Description = functionalities1.Description
						checklists1.Owner.Functionalities[functionalitiesCount].ExternalResources = functionalities1.ExternalResources
						checklists1.Owner.Functionalities[functionalitiesCount].ID = functionalities1.ID
						checklists1.Owner.Functionalities[functionalitiesCount].Labels = functionalities1.Labels
						checklists1.Owner.Functionalities[functionalitiesCount].Links = functionalities1.Links
						checklists1.Owner.Functionalities[functionalitiesCount].Name = functionalities1.Name
						checklists1.Owner.Functionalities[functionalitiesCount].Owner = functionalities1.Owner
						checklists1.Owner.Functionalities[functionalitiesCount].Slug = functionalities1.Slug
						checklists1.Owner.Functionalities[functionalitiesCount].UpdatedAt = functionalities1.UpdatedAt
						checklists1.Owner.Functionalities[functionalitiesCount].UpdatedBy = functionalities1.UpdatedBy
					}
				}
				checklists1.Owner.ID = types.StringPointerValue(checklistsItem.Owner.ID)
				checklists1.Owner.Memberships = []tfTypes.MembershipEntity{}
				for membershipsCount, membershipsItem := range checklistsItem.Owner.Memberships {
					var memberships1 tfTypes.MembershipEntity
					if membershipsItem.DefaultIncidentRole == nil {
						memberships1.DefaultIncidentRole = nil
					} else {
						memberships1.DefaultIncidentRole = &tfTypes.IncidentRoleEntity{}
						if membershipsItem.DefaultIncidentRole.CreatedAt != nil {
							memberships1.DefaultIncidentRole.CreatedAt = types.StringValue(membershipsItem.DefaultIncidentRole.CreatedAt.Format(time.RFC3339Nano))
						} else {
							memberships1.DefaultIncidentRole.CreatedAt = types.StringNull()
						}
						memberships1.DefaultIncidentRole.Description = types.StringPointerValue(membershipsItem.DefaultIncidentRole.Description)
						if membershipsItem.DefaultIncidentRole.DiscardedAt != nil {
							memberships1.DefaultIncidentRole.DiscardedAt = types.StringValue(membershipsItem.DefaultIncidentRole.DiscardedAt.Format(time.RFC3339Nano))
						} else {
							memberships1.DefaultIncidentRole.DiscardedAt = types.StringNull()
						}
						memberships1.DefaultIncidentRole.ID = types.StringPointerValue(membershipsItem.DefaultIncidentRole.ID)
						memberships1.DefaultIncidentRole.Name = types.StringPointerValue(membershipsItem.DefaultIncidentRole.Name)
						memberships1.DefaultIncidentRole.Summary = types.StringPointerValue(membershipsItem.DefaultIncidentRole.Summary)
						if membershipsItem.DefaultIncidentRole.UpdatedAt != nil {
							memberships1.DefaultIncidentRole.UpdatedAt = types.StringValue(membershipsItem.DefaultIncidentRole.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							memberships1.DefaultIncidentRole.UpdatedAt = types.StringNull()
						}
					}
					if membershipsItem.Schedule == nil {
						memberships1.Schedule = nil
					} else {
						memberships1.Schedule = &tfTypes.ScheduleEntity{}
						memberships1.Schedule.Discarded = types.BoolPointerValue(membershipsItem.Schedule.Discarded)
						memberships1.Schedule.ID = types.StringPointerValue(membershipsItem.Schedule.ID)
						memberships1.Schedule.Integration = types.StringPointerValue(membershipsItem.Schedule.Integration)
						memberships1.Schedule.Name = types.StringPointerValue(membershipsItem.Schedule.Name)
					}
					if membershipsItem.User == nil {
						memberships1.User = nil
					} else {
						memberships1.User = &tfTypes.UserEntity{}
						if membershipsItem.User.CreatedAt != nil {
							memberships1.User.CreatedAt = types.StringValue(membershipsItem.User.CreatedAt.Format(time.RFC3339Nano))
						} else {
							memberships1.User.CreatedAt = types.StringNull()
						}
						memberships1.User.Email = types.StringPointerValue(membershipsItem.User.Email)
						memberships1.User.ID = types.StringPointerValue(membershipsItem.User.ID)
						memberships1.User.Name = types.StringPointerValue(membershipsItem.User.Name)
						memberships1.User.SignalsEnabledNotificationTypes = []types.String{}
						for _, v := range membershipsItem.User.SignalsEnabledNotificationTypes {
							memberships1.User.SignalsEnabledNotificationTypes = append(memberships1.User.SignalsEnabledNotificationTypes, types.StringValue(v))
						}
						memberships1.User.SlackLinked = types.BoolPointerValue(membershipsItem.User.SlackLinked)
						memberships1.User.SlackUserID = types.StringPointerValue(membershipsItem.User.SlackUserID)
						if membershipsItem.User.UpdatedAt != nil {
							memberships1.User.UpdatedAt = types.StringValue(membershipsItem.User.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							memberships1.User.UpdatedAt = types.StringNull()
						}
					}
					if membershipsCount+1 > len(checklists1.Owner.Memberships) {
						checklists1.Owner.Memberships = append(checklists1.Owner.Memberships, memberships1)
					} else {
						checklists1.Owner.Memberships[membershipsCount].DefaultIncidentRole = memberships1.DefaultIncidentRole
						checklists1.Owner.Memberships[membershipsCount].Schedule = memberships1.Schedule
						checklists1.Owner.Memberships[membershipsCount].User = memberships1.User
					}
				}
				if checklistsItem.Owner.MsTeamsChannel == nil {
					checklists1.Owner.MsTeamsChannel = nil
				} else {
					checklists1.Owner.MsTeamsChannel = &tfTypes.IntegrationsMicrosoftTeamsV2ChannelEntity{}
					checklists1.Owner.MsTeamsChannel.ChannelID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.ChannelID)
					checklists1.Owner.MsTeamsChannel.ChannelName = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.ChannelName)
					checklists1.Owner.MsTeamsChannel.ChannelURL = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.ChannelURL)
					checklists1.Owner.MsTeamsChannel.ID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.ID)
					if checklistsItem.Owner.MsTeamsChannel.Incident == nil {
						checklists1.Owner.MsTeamsChannel.Incident = nil
					} else {
						checklists1.Owner.MsTeamsChannel.Incident = &tfTypes.IncidentEntity{}
						checklists1.Owner.MsTeamsChannel.Incident.Active = types.BoolPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Active)
						checklists1.Owner.MsTeamsChannel.Incident.AiIncidentSummary = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.AiIncidentSummary)
						checklists1.Owner.MsTeamsChannel.Incident.ChannelID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.ChannelID)
						checklists1.Owner.MsTeamsChannel.Incident.ChannelName = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.ChannelName)
						checklists1.Owner.MsTeamsChannel.Incident.ChannelReference = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.ChannelReference)
						checklists1.Owner.MsTeamsChannel.Incident.ChannelStatus = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.ChannelStatus)
						checklists1.Owner.MsTeamsChannel.Incident.ConferenceBridges = []tfTypes.IncidentsConferenceBridgeEntity{}
						for conferenceBridgesCount, conferenceBridgesItem := range checklistsItem.Owner.MsTeamsChannel.Incident.ConferenceBridges {
							var conferenceBridges1 tfTypes.IncidentsConferenceBridgeEntity
							conferenceBridges1.ID = types.StringPointerValue(conferenceBridgesItem.ID)
							if conferenceBridgesCount+1 > len(checklists1.Owner.MsTeamsChannel.Incident.ConferenceBridges) {
								checklists1.Owner.MsTeamsChannel.Incident.ConferenceBridges = append(checklists1.Owner.MsTeamsChannel.Incident.ConferenceBridges, conferenceBridges1)
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.ConferenceBridges[conferenceBridgesCount].ID = conferenceBridges1.ID
							}
						}
						if checklistsItem.Owner.MsTeamsChannel.Incident.ContextObject == nil {
							checklists1.Owner.MsTeamsChannel.Incident.ContextObject = nil
						} else {
							checklists1.Owner.MsTeamsChannel.Incident.ContextObject = &tfTypes.IncidentsContextObjectEntity{}
							checklists1.Owner.MsTeamsChannel.Incident.ContextObject.ContextDescription = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.ContextObject.ContextDescription)
							checklists1.Owner.MsTeamsChannel.Incident.ContextObject.ContextTag = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.ContextObject.ContextTag)
							checklists1.Owner.MsTeamsChannel.Incident.ContextObject.ObjectID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.ContextObject.ObjectID)
							checklists1.Owner.MsTeamsChannel.Incident.ContextObject.ObjectType = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.ContextObject.ObjectType)
						}
						checklists1.Owner.MsTeamsChannel.Incident.Conversations = []tfTypes.ConversationsAPIEntitiesReference{}
						for conversationsCount, conversationsItem := range checklistsItem.Owner.MsTeamsChannel.Incident.Conversations {
							var conversations1 tfTypes.ConversationsAPIEntitiesReference
							if conversationsItem.Channel == nil {
								conversations1.Channel = nil
							} else {
								conversations1.Channel = &tfTypes.ConversationsAPIEntitiesChannel{}
								conversations1.Channel.Name = types.StringPointerValue(conversationsItem.Channel.Name)
							}
							conversations1.CommentsURL = types.StringPointerValue(conversationsItem.CommentsURL)
							conversations1.Field = types.StringPointerValue(conversationsItem.Field)
							conversations1.ID = types.StringPointerValue(conversationsItem.ID)
							conversations1.ResourceClass = types.StringPointerValue(conversationsItem.ResourceClass)
							conversations1.ResourceID = types.StringPointerValue(conversationsItem.ResourceID)
							if conversationsCount+1 > len(checklists1.Owner.MsTeamsChannel.Incident.Conversations) {
								checklists1.Owner.MsTeamsChannel.Incident.Conversations = append(checklists1.Owner.MsTeamsChannel.Incident.Conversations, conversations1)
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.Conversations[conversationsCount].Channel = conversations1.Channel
								checklists1.Owner.MsTeamsChannel.Incident.Conversations[conversationsCount].CommentsURL = conversations1.CommentsURL
								checklists1.Owner.MsTeamsChannel.Incident.Conversations[conversationsCount].Field = conversations1.Field
								checklists1.Owner.MsTeamsChannel.Incident.Conversations[conversationsCount].ID = conversations1.ID
								checklists1.Owner.MsTeamsChannel.Incident.Conversations[conversationsCount].ResourceClass = conversations1.ResourceClass
								checklists1.Owner.MsTeamsChannel.Incident.Conversations[conversationsCount].ResourceID = conversations1.ResourceID
							}
						}
						if checklistsItem.Owner.MsTeamsChannel.Incident.CreatedAt != nil {
							checklists1.Owner.MsTeamsChannel.Incident.CreatedAt = types.StringValue(checklistsItem.Owner.MsTeamsChannel.Incident.CreatedAt.Format(time.RFC3339Nano))
						} else {
							checklists1.Owner.MsTeamsChannel.Incident.CreatedAt = types.StringNull()
						}
						if checklistsItem.Owner.MsTeamsChannel.Incident.CreatedBy == nil {
							checklists1.Owner.MsTeamsChannel.Incident.CreatedBy = nil
						} else {
							checklists1.Owner.MsTeamsChannel.Incident.CreatedBy = &tfTypes.AuthorEntity{}
							checklists1.Owner.MsTeamsChannel.Incident.CreatedBy.Email = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.CreatedBy.Email)
							checklists1.Owner.MsTeamsChannel.Incident.CreatedBy.ID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.CreatedBy.ID)
							checklists1.Owner.MsTeamsChannel.Incident.CreatedBy.Name = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.CreatedBy.Name)
							checklists1.Owner.MsTeamsChannel.Incident.CreatedBy.Source = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.CreatedBy.Source)
						}
						checklists1.Owner.MsTeamsChannel.Incident.CurrentMilestone = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.CurrentMilestone)
						checklists1.Owner.MsTeamsChannel.Incident.CustomFields = []tfTypes.CustomFieldsFieldValue{}
						for customFieldsCount, customFieldsItem := range checklistsItem.Owner.MsTeamsChannel.Incident.CustomFields {
							var customFields1 tfTypes.CustomFieldsFieldValue
							customFields1.Description = types.StringPointerValue(customFieldsItem.Description)
							customFields1.DisplayName = types.StringPointerValue(customFieldsItem.DisplayName)
							customFields1.FieldID = types.StringPointerValue(customFieldsItem.FieldID)
							customFields1.Name = types.StringPointerValue(customFieldsItem.Name)
							customFields1.Slug = types.StringPointerValue(customFieldsItem.Slug)
							customFields1.Value = types.StringPointerValue(customFieldsItem.Value)
							customFields1.ValueArray = types.StringPointerValue(customFieldsItem.ValueArray)
							customFields1.ValueString = types.StringPointerValue(customFieldsItem.ValueString)
							customFields1.ValueType = types.StringPointerValue(customFieldsItem.ValueType)
							if customFieldsCount+1 > len(checklists1.Owner.MsTeamsChannel.Incident.CustomFields) {
								checklists1.Owner.MsTeamsChannel.Incident.CustomFields = append(checklists1.Owner.MsTeamsChannel.Incident.CustomFields, customFields1)
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.CustomFields[customFieldsCount].Description = customFields1.Description
								checklists1.Owner.MsTeamsChannel.Incident.CustomFields[customFieldsCount].DisplayName = customFields1.DisplayName
								checklists1.Owner.MsTeamsChannel.Incident.CustomFields[customFieldsCount].FieldID = customFields1.FieldID
								checklists1.Owner.MsTeamsChannel.Incident.CustomFields[customFieldsCount].Name = customFields1.Name
								checklists1.Owner.MsTeamsChannel.Incident.CustomFields[customFieldsCount].Slug = customFields1.Slug
								checklists1.Owner.MsTeamsChannel.Incident.CustomFields[customFieldsCount].Value = customFields1.Value
								checklists1.Owner.MsTeamsChannel.Incident.CustomFields[customFieldsCount].ValueArray = customFields1.ValueArray
								checklists1.Owner.MsTeamsChannel.Incident.CustomFields[customFieldsCount].ValueString = customFields1.ValueString
								checklists1.Owner.MsTeamsChannel.Incident.CustomFields[customFieldsCount].ValueType = customFields1.ValueType
							}
						}
						checklists1.Owner.MsTeamsChannel.Incident.CustomerImpactSummary = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.CustomerImpactSummary)
						if checklistsItem.Owner.MsTeamsChannel.Incident.CustomersImpacted != nil {
							checklists1.Owner.MsTeamsChannel.Incident.CustomersImpacted = types.Int64Value(int64(*checklistsItem.Owner.MsTeamsChannel.Incident.CustomersImpacted))
						} else {
							checklists1.Owner.MsTeamsChannel.Incident.CustomersImpacted = types.Int64Null()
						}
						checklists1.Owner.MsTeamsChannel.Incident.Description = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Description)
						if checklistsItem.Owner.MsTeamsChannel.Incident.DiscardedAt != nil {
							checklists1.Owner.MsTeamsChannel.Incident.DiscardedAt = types.StringValue(checklistsItem.Owner.MsTeamsChannel.Incident.DiscardedAt.Format(time.RFC3339Nano))
						} else {
							checklists1.Owner.MsTeamsChannel.Incident.DiscardedAt = types.StringNull()
						}
						checklists1.Owner.MsTeamsChannel.Incident.Environments = []tfTypes.SuccinctEntity{}
						for environmentsCount, environmentsItem := range checklistsItem.Owner.MsTeamsChannel.Incident.Environments {
							var environments1 tfTypes.SuccinctEntity
							environments1.ID = types.StringPointerValue(environmentsItem.ID)
							environments1.Name = types.StringPointerValue(environmentsItem.Name)
							if environmentsCount+1 > len(checklists1.Owner.MsTeamsChannel.Incident.Environments) {
								checklists1.Owner.MsTeamsChannel.Incident.Environments = append(checklists1.Owner.MsTeamsChannel.Incident.Environments, environments1)
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.Environments[environmentsCount].ID = environments1.ID
								checklists1.Owner.MsTeamsChannel.Incident.Environments[environmentsCount].Name = environments1.Name
							}
						}
						checklists1.Owner.MsTeamsChannel.Incident.FieldRequirements = []tfTypes.IncidentEntityFieldRequirementEntity{}
						for fieldRequirementsCount, fieldRequirementsItem := range checklistsItem.Owner.MsTeamsChannel.Incident.FieldRequirements {
							var fieldRequirements1 tfTypes.IncidentEntityFieldRequirementEntity
							fieldRequirements1.FieldID = types.StringPointerValue(fieldRequirementsItem.FieldID)
							fieldRequirements1.RequiredAtMilestoneID = types.StringPointerValue(fieldRequirementsItem.RequiredAtMilestoneID)
							if fieldRequirementsCount+1 > len(checklists1.Owner.MsTeamsChannel.Incident.FieldRequirements) {
								checklists1.Owner.MsTeamsChannel.Incident.FieldRequirements = append(checklists1.Owner.MsTeamsChannel.Incident.FieldRequirements, fieldRequirements1)
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.FieldRequirements[fieldRequirementsCount].FieldID = fieldRequirements1.FieldID
								checklists1.Owner.MsTeamsChannel.Incident.FieldRequirements[fieldRequirementsCount].RequiredAtMilestoneID = fieldRequirements1.RequiredAtMilestoneID
							}
						}
						checklists1.Owner.MsTeamsChannel.Incident.Functionalities = []tfTypes.SuccinctEntity{}
						for functionalitiesCount1, functionalitiesItem1 := range checklistsItem.Owner.MsTeamsChannel.Incident.Functionalities {
							var functionalities3 tfTypes.SuccinctEntity
							functionalities3.ID = types.StringPointerValue(functionalitiesItem1.ID)
							functionalities3.Name = types.StringPointerValue(functionalitiesItem1.Name)
							if functionalitiesCount1+1 > len(checklists1.Owner.MsTeamsChannel.Incident.Functionalities) {
								checklists1.Owner.MsTeamsChannel.Incident.Functionalities = append(checklists1.Owner.MsTeamsChannel.Incident.Functionalities, functionalities3)
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.Functionalities[functionalitiesCount1].ID = functionalities3.ID
								checklists1.Owner.MsTeamsChannel.Incident.Functionalities[functionalitiesCount1].Name = functionalities3.Name
							}
						}
						checklists1.Owner.MsTeamsChannel.Incident.ID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.ID)
						checklists1.Owner.MsTeamsChannel.Incident.Impacts = []tfTypes.IncidentsImpactEntity{}
						for impactsCount, impactsItem := range checklistsItem.Owner.MsTeamsChannel.Incident.Impacts {
							var impacts1 tfTypes.IncidentsImpactEntity
							if impactsItem.Condition == nil {
								impacts1.Condition = nil
							} else {
								impacts1.Condition = &tfTypes.SeverityMatrixConditionEntity{}
								impacts1.Condition.ID = types.StringPointerValue(impactsItem.Condition.ID)
								impacts1.Condition.Name = types.StringPointerValue(impactsItem.Condition.Name)
								if impactsItem.Condition.Position != nil {
									impacts1.Condition.Position = types.Int64Value(int64(*impactsItem.Condition.Position))
								} else {
									impacts1.Condition.Position = types.Int64Null()
								}
							}
							impacts1.Conversations = []tfTypes.ConversationsAPIEntitiesReference{}
							for conversationsCount1, conversationsItem1 := range impactsItem.Conversations {
								var conversations3 tfTypes.ConversationsAPIEntitiesReference
								if conversationsItem1.Channel == nil {
									conversations3.Channel = nil
								} else {
									conversations3.Channel = &tfTypes.ConversationsAPIEntitiesChannel{}
									conversations3.Channel.Name = types.StringPointerValue(conversationsItem1.Channel.Name)
								}
								conversations3.CommentsURL = types.StringPointerValue(conversationsItem1.CommentsURL)
								conversations3.Field = types.StringPointerValue(conversationsItem1.Field)
								conversations3.ID = types.StringPointerValue(conversationsItem1.ID)
								conversations3.ResourceClass = types.StringPointerValue(conversationsItem1.ResourceClass)
								conversations3.ResourceID = types.StringPointerValue(conversationsItem1.ResourceID)
								if conversationsCount1+1 > len(impacts1.Conversations) {
									impacts1.Conversations = append(impacts1.Conversations, conversations3)
								} else {
									impacts1.Conversations[conversationsCount1].Channel = conversations3.Channel
									impacts1.Conversations[conversationsCount1].CommentsURL = conversations3.CommentsURL
									impacts1.Conversations[conversationsCount1].Field = conversations3.Field
									impacts1.Conversations[conversationsCount1].ID = conversations3.ID
									impacts1.Conversations[conversationsCount1].ResourceClass = conversations3.ResourceClass
									impacts1.Conversations[conversationsCount1].ResourceID = conversations3.ResourceID
								}
							}
							impacts1.ID = types.StringPointerValue(impactsItem.ID)
							if impactsItem.Impact == nil {
								impacts1.Impact = nil
							} else {
								impacts1.Impact = &tfTypes.SuccinctEntity{}
								impacts1.Impact.ID = types.StringPointerValue(impactsItem.Impact.ID)
								impacts1.Impact.Name = types.StringPointerValue(impactsItem.Impact.Name)
							}
							if impactsItem.Type != nil {
								impacts1.Type = types.StringValue(string(*impactsItem.Type))
							} else {
								impacts1.Type = types.StringNull()
							}
							if impactsCount+1 > len(checklists1.Owner.MsTeamsChannel.Incident.Impacts) {
								checklists1.Owner.MsTeamsChannel.Incident.Impacts = append(checklists1.Owner.MsTeamsChannel.Incident.Impacts, impacts1)
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.Impacts[impactsCount].Condition = impacts1.Condition
								checklists1.Owner.MsTeamsChannel.Incident.Impacts[impactsCount].Conversations = impacts1.Conversations
								checklists1.Owner.MsTeamsChannel.Incident.Impacts[impactsCount].ID = impacts1.ID
								checklists1.Owner.MsTeamsChannel.Incident.Impacts[impactsCount].Impact = impacts1.Impact
								checklists1.Owner.MsTeamsChannel.Incident.Impacts[impactsCount].Type = impacts1.Type
							}
						}
						checklists1.Owner.MsTeamsChannel.Incident.IncidentChannels = []tfTypes.IncidentsChannelEntity{}
						for incidentChannelsCount, incidentChannelsItem := range checklistsItem.Owner.MsTeamsChannel.Incident.IncidentChannels {
							var incidentChannels1 tfTypes.IncidentsChannelEntity
							incidentChannels1.IconURL = types.StringPointerValue(incidentChannelsItem.IconURL)
							incidentChannels1.ID = types.StringPointerValue(incidentChannelsItem.ID)
							incidentChannels1.Name = types.StringPointerValue(incidentChannelsItem.Name)
							incidentChannels1.Source = types.StringPointerValue(incidentChannelsItem.Source)
							incidentChannels1.SourceID = types.StringPointerValue(incidentChannelsItem.SourceID)
							incidentChannels1.SourceName = types.StringPointerValue(incidentChannelsItem.SourceName)
							incidentChannels1.Status = types.StringPointerValue(incidentChannelsItem.Status)
							incidentChannels1.URL = types.StringPointerValue(incidentChannelsItem.URL)
							if incidentChannelsCount+1 > len(checklists1.Owner.MsTeamsChannel.Incident.IncidentChannels) {
								checklists1.Owner.MsTeamsChannel.Incident.IncidentChannels = append(checklists1.Owner.MsTeamsChannel.Incident.IncidentChannels, incidentChannels1)
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount].IconURL = incidentChannels1.IconURL
								checklists1.Owner.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount].ID = incidentChannels1.ID
								checklists1.Owner.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount].Name = incidentChannels1.Name
								checklists1.Owner.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount].Source = incidentChannels1.Source
								checklists1.Owner.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount].SourceID = incidentChannels1.SourceID
								checklists1.Owner.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount].SourceName = incidentChannels1.SourceName
								checklists1.Owner.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount].Status = incidentChannels1.Status
								checklists1.Owner.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount].URL = incidentChannels1.URL
							}
						}
						checklists1.Owner.MsTeamsChannel.Incident.IncidentTickets = []tfTypes.TicketingTicketEntity{}
						for incidentTicketsCount, incidentTicketsItem := range checklistsItem.Owner.MsTeamsChannel.Incident.IncidentTickets {
							var incidentTickets1 tfTypes.TicketingTicketEntity
							incidentTickets1.Assignees = []tfTypes.AuthorEntity{}
							for assigneesCount, assigneesItem := range incidentTicketsItem.Assignees {
								var assignees1 tfTypes.AuthorEntity
								assignees1.Email = types.StringPointerValue(assigneesItem.Email)
								assignees1.ID = types.StringPointerValue(assigneesItem.ID)
								assignees1.Name = types.StringPointerValue(assigneesItem.Name)
								assignees1.Source = types.StringPointerValue(assigneesItem.Source)
								if assigneesCount+1 > len(incidentTickets1.Assignees) {
									incidentTickets1.Assignees = append(incidentTickets1.Assignees, assignees1)
								} else {
									incidentTickets1.Assignees[assigneesCount].Email = assignees1.Email
									incidentTickets1.Assignees[assigneesCount].ID = assignees1.ID
									incidentTickets1.Assignees[assigneesCount].Name = assignees1.Name
									incidentTickets1.Assignees[assigneesCount].Source = assignees1.Source
								}
							}
							if incidentTicketsItem.CreatedAt != nil {
								incidentTickets1.CreatedAt = types.StringValue(incidentTicketsItem.CreatedAt.Format(time.RFC3339Nano))
							} else {
								incidentTickets1.CreatedAt = types.StringNull()
							}
							if incidentTicketsItem.CreatedBy == nil {
								incidentTickets1.CreatedBy = nil
							} else {
								incidentTickets1.CreatedBy = &tfTypes.AuthorEntity{}
								incidentTickets1.CreatedBy.Email = types.StringPointerValue(incidentTicketsItem.CreatedBy.Email)
								incidentTickets1.CreatedBy.ID = types.StringPointerValue(incidentTicketsItem.CreatedBy.ID)
								incidentTickets1.CreatedBy.Name = types.StringPointerValue(incidentTicketsItem.CreatedBy.Name)
								incidentTickets1.CreatedBy.Source = types.StringPointerValue(incidentTicketsItem.CreatedBy.Source)
							}
							incidentTickets1.Description = types.StringPointerValue(incidentTicketsItem.Description)
							if incidentTicketsItem.DueAt != nil {
								incidentTickets1.DueAt = types.StringValue(incidentTicketsItem.DueAt.Format(time.RFC3339Nano))
							} else {
								incidentTickets1.DueAt = types.StringNull()
							}
							incidentTickets1.ID = types.StringPointerValue(incidentTicketsItem.ID)
							incidentTickets1.IncidentCurrentMilestone = types.StringPointerValue(incidentTicketsItem.IncidentCurrentMilestone)
							incidentTickets1.IncidentID = types.StringPointerValue(incidentTicketsItem.IncidentID)
							incidentTickets1.IncidentName = types.StringPointerValue(incidentTicketsItem.IncidentName)
							if incidentTicketsItem.Link == nil {
								incidentTickets1.Link = nil
							} else {
								incidentTickets1.Link = &tfTypes.AttachmentsLinkEntity{}
								incidentTickets1.Link.Deletable = types.BoolPointerValue(incidentTicketsItem.Link.Deletable)
								incidentTickets1.Link.DisplayText = types.StringPointerValue(incidentTicketsItem.Link.DisplayText)
								incidentTickets1.Link.Editable = types.BoolPointerValue(incidentTicketsItem.Link.Editable)
								incidentTickets1.Link.HrefURL = types.StringPointerValue(incidentTicketsItem.Link.HrefURL)
								incidentTickets1.Link.IconURL = types.StringPointerValue(incidentTicketsItem.Link.IconURL)
								incidentTickets1.Link.ID = types.StringPointerValue(incidentTicketsItem.Link.ID)
								incidentTickets1.Link.Type = types.StringPointerValue(incidentTicketsItem.Link.Type)
							}
							if incidentTicketsItem.Priority == nil {
								incidentTickets1.Priority = nil
							} else {
								incidentTickets1.Priority = &tfTypes.TicketingPriorityEntity{}
								if incidentTicketsItem.Priority.CreatedAt != nil {
									incidentTickets1.Priority.CreatedAt = types.StringValue(incidentTicketsItem.Priority.CreatedAt.Format(time.RFC3339Nano))
								} else {
									incidentTickets1.Priority.CreatedAt = types.StringNull()
								}
								incidentTickets1.Priority.ID = types.StringPointerValue(incidentTicketsItem.Priority.ID)
								incidentTickets1.Priority.Name = types.StringPointerValue(incidentTicketsItem.Priority.Name)
								if incidentTicketsItem.Priority.Position != nil {
									incidentTickets1.Priority.Position = types.Int64Value(int64(*incidentTicketsItem.Priority.Position))
								} else {
									incidentTickets1.Priority.Position = types.Int64Null()
								}
								if incidentTicketsItem.Priority.UpdatedAt != nil {
									incidentTickets1.Priority.UpdatedAt = types.StringValue(incidentTicketsItem.Priority.UpdatedAt.Format(time.RFC3339Nano))
								} else {
									incidentTickets1.Priority.UpdatedAt = types.StringNull()
								}
							}
							if incidentTicketsItem.State != nil {
								incidentTickets1.State = types.StringValue(string(*incidentTicketsItem.State))
							} else {
								incidentTickets1.State = types.StringNull()
							}
							incidentTickets1.Summary = types.StringPointerValue(incidentTicketsItem.Summary)
							incidentTickets1.TagList = []types.String{}
							for _, v := range incidentTicketsItem.TagList {
								incidentTickets1.TagList = append(incidentTickets1.TagList, types.StringValue(v))
							}
							incidentTickets1.TaskID = types.StringPointerValue(incidentTicketsItem.TaskID)
							if incidentTicketsItem.Type != nil {
								incidentTickets1.Type = types.StringValue(string(*incidentTicketsItem.Type))
							} else {
								incidentTickets1.Type = types.StringNull()
							}
							if incidentTicketsItem.UpdatedAt != nil {
								incidentTickets1.UpdatedAt = types.StringValue(incidentTicketsItem.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								incidentTickets1.UpdatedAt = types.StringNull()
							}
							if incidentTicketsCount+1 > len(checklists1.Owner.MsTeamsChannel.Incident.IncidentTickets) {
								checklists1.Owner.MsTeamsChannel.Incident.IncidentTickets = append(checklists1.Owner.MsTeamsChannel.Incident.IncidentTickets, incidentTickets1)
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount].Assignees = incidentTickets1.Assignees
								checklists1.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount].CreatedAt = incidentTickets1.CreatedAt
								checklists1.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount].CreatedBy = incidentTickets1.CreatedBy
								checklists1.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount].Description = incidentTickets1.Description
								checklists1.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount].DueAt = incidentTickets1.DueAt
								checklists1.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount].ID = incidentTickets1.ID
								checklists1.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount].IncidentCurrentMilestone = incidentTickets1.IncidentCurrentMilestone
								checklists1.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount].IncidentID = incidentTickets1.IncidentID
								checklists1.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount].IncidentName = incidentTickets1.IncidentName
								checklists1.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount].Link = incidentTickets1.Link
								checklists1.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount].Priority = incidentTickets1.Priority
								checklists1.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount].State = incidentTickets1.State
								checklists1.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount].Summary = incidentTickets1.Summary
								checklists1.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount].TagList = incidentTickets1.TagList
								checklists1.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount].TaskID = incidentTickets1.TaskID
								checklists1.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount].Type = incidentTickets1.Type
								checklists1.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount].UpdatedAt = incidentTickets1.UpdatedAt
							}
						}
						checklists1.Owner.MsTeamsChannel.Incident.IncidentURL = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.IncidentURL)
						if len(checklistsItem.Owner.MsTeamsChannel.Incident.Labels) > 0 {
							checklists1.Owner.MsTeamsChannel.Incident.Labels = make(map[string]types.String)
							for key1, value2 := range checklistsItem.Owner.MsTeamsChannel.Incident.Labels {
								checklists1.Owner.MsTeamsChannel.Incident.Labels[key1] = types.StringValue(value2)
							}
						}
						if checklistsItem.Owner.MsTeamsChannel.Incident.LastNote == nil {
							checklists1.Owner.MsTeamsChannel.Incident.LastNote = nil
						} else {
							checklists1.Owner.MsTeamsChannel.Incident.LastNote = &tfTypes.EventNoteEntity{}
							checklists1.Owner.MsTeamsChannel.Incident.LastNote.Body = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.LastNote.Body)
							checklists1.Owner.MsTeamsChannel.Incident.LastNote.Conversations = []tfTypes.ConversationsAPIEntitiesReference{}
							for conversationsCount2, conversationsItem2 := range checklistsItem.Owner.MsTeamsChannel.Incident.LastNote.Conversations {
								var conversations5 tfTypes.ConversationsAPIEntitiesReference
								if conversationsItem2.Channel == nil {
									conversations5.Channel = nil
								} else {
									conversations5.Channel = &tfTypes.ConversationsAPIEntitiesChannel{}
									conversations5.Channel.Name = types.StringPointerValue(conversationsItem2.Channel.Name)
								}
								conversations5.CommentsURL = types.StringPointerValue(conversationsItem2.CommentsURL)
								conversations5.Field = types.StringPointerValue(conversationsItem2.Field)
								conversations5.ID = types.StringPointerValue(conversationsItem2.ID)
								conversations5.ResourceClass = types.StringPointerValue(conversationsItem2.ResourceClass)
								conversations5.ResourceID = types.StringPointerValue(conversationsItem2.ResourceID)
								if conversationsCount2+1 > len(checklists1.Owner.MsTeamsChannel.Incident.LastNote.Conversations) {
									checklists1.Owner.MsTeamsChannel.Incident.LastNote.Conversations = append(checklists1.Owner.MsTeamsChannel.Incident.LastNote.Conversations, conversations5)
								} else {
									checklists1.Owner.MsTeamsChannel.Incident.LastNote.Conversations[conversationsCount2].Channel = conversations5.Channel
									checklists1.Owner.MsTeamsChannel.Incident.LastNote.Conversations[conversationsCount2].CommentsURL = conversations5.CommentsURL
									checklists1.Owner.MsTeamsChannel.Incident.LastNote.Conversations[conversationsCount2].Field = conversations5.Field
									checklists1.Owner.MsTeamsChannel.Incident.LastNote.Conversations[conversationsCount2].ID = conversations5.ID
									checklists1.Owner.MsTeamsChannel.Incident.LastNote.Conversations[conversationsCount2].ResourceClass = conversations5.ResourceClass
									checklists1.Owner.MsTeamsChannel.Incident.LastNote.Conversations[conversationsCount2].ResourceID = conversations5.ResourceID
								}
							}
							if checklistsItem.Owner.MsTeamsChannel.Incident.LastNote.CreatedAt != nil {
								checklists1.Owner.MsTeamsChannel.Incident.LastNote.CreatedAt = types.StringValue(checklistsItem.Owner.MsTeamsChannel.Incident.LastNote.CreatedAt.Format(time.RFC3339Nano))
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.LastNote.CreatedAt = types.StringNull()
							}
							checklists1.Owner.MsTeamsChannel.Incident.LastNote.ID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.LastNote.ID)
							checklists1.Owner.MsTeamsChannel.Incident.LastNote.StatusPages = []tfTypes.IncidentsStatusPageEntity{}
							for statusPagesCount, statusPagesItem := range checklistsItem.Owner.MsTeamsChannel.Incident.LastNote.StatusPages {
								var statusPages1 tfTypes.IncidentsStatusPageEntity
								statusPages1.DisplayName = types.StringPointerValue(statusPagesItem.DisplayName)
								statusPages1.ExternalID = types.StringPointerValue(statusPagesItem.ExternalID)
								statusPages1.ID = types.StringPointerValue(statusPagesItem.ID)
								if statusPagesItem.Integration == nil {
									statusPages1.Integration = nil
								} else {
									statusPages1.Integration = &tfTypes.IntegrationEntity{}
									if statusPagesItem.Integration.CreatedAt != nil {
										statusPages1.Integration.CreatedAt = types.StringValue(statusPagesItem.Integration.CreatedAt.Format(time.RFC3339Nano))
									} else {
										statusPages1.Integration.CreatedAt = types.StringNull()
									}
									statusPages1.Integration.DisplayName = types.StringPointerValue(statusPagesItem.Integration.DisplayName)
									statusPages1.Integration.ID = types.StringPointerValue(statusPagesItem.Integration.ID)
									statusPages1.Integration.IntegrationName = types.StringPointerValue(statusPagesItem.Integration.IntegrationName)
									statusPages1.Integration.IntegrationSlug = types.StringPointerValue(statusPagesItem.Integration.IntegrationSlug)
								}
								statusPages1.Name = types.StringPointerValue(statusPagesItem.Name)
								statusPages1.URL = types.StringPointerValue(statusPagesItem.URL)
								if statusPagesCount+1 > len(checklists1.Owner.MsTeamsChannel.Incident.LastNote.StatusPages) {
									checklists1.Owner.MsTeamsChannel.Incident.LastNote.StatusPages = append(checklists1.Owner.MsTeamsChannel.Incident.LastNote.StatusPages, statusPages1)
								} else {
									checklists1.Owner.MsTeamsChannel.Incident.LastNote.StatusPages[statusPagesCount].DisplayName = statusPages1.DisplayName
									checklists1.Owner.MsTeamsChannel.Incident.LastNote.StatusPages[statusPagesCount].ExternalID = statusPages1.ExternalID
									checklists1.Owner.MsTeamsChannel.Incident.LastNote.StatusPages[statusPagesCount].ID = statusPages1.ID
									checklists1.Owner.MsTeamsChannel.Incident.LastNote.StatusPages[statusPagesCount].Integration = statusPages1.Integration
									checklists1.Owner.MsTeamsChannel.Incident.LastNote.StatusPages[statusPagesCount].Name = statusPages1.Name
									checklists1.Owner.MsTeamsChannel.Incident.LastNote.StatusPages[statusPagesCount].URL = statusPages1.URL
								}
							}
						}
						checklists1.Owner.MsTeamsChannel.Incident.LastUpdate = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.LastUpdate)
						checklists1.Owner.MsTeamsChannel.Incident.LifecycleMeasurements = []tfTypes.IncidentsLifecycleMeasurementEntity{}
						for lifecycleMeasurementsCount, lifecycleMeasurementsItem := range checklistsItem.Owner.MsTeamsChannel.Incident.LifecycleMeasurements {
							var lifecycleMeasurements1 tfTypes.IncidentsLifecycleMeasurementEntity
							if lifecycleMeasurementsItem.CalculatedAt != nil {
								lifecycleMeasurements1.CalculatedAt = types.StringValue(lifecycleMeasurementsItem.CalculatedAt.Format(time.RFC3339Nano))
							} else {
								lifecycleMeasurements1.CalculatedAt = types.StringNull()
							}
							lifecycleMeasurements1.Description = types.StringPointerValue(lifecycleMeasurementsItem.Description)
							lifecycleMeasurements1.EndsAtMilestone = types.StringPointerValue(lifecycleMeasurementsItem.EndsAtMilestone)
							lifecycleMeasurements1.ID = types.StringPointerValue(lifecycleMeasurementsItem.ID)
							lifecycleMeasurements1.Name = types.StringPointerValue(lifecycleMeasurementsItem.Name)
							lifecycleMeasurements1.Slug = types.StringPointerValue(lifecycleMeasurementsItem.Slug)
							lifecycleMeasurements1.StartsAtMilestone = types.StringPointerValue(lifecycleMeasurementsItem.StartsAtMilestone)
							lifecycleMeasurements1.Value = types.StringPointerValue(lifecycleMeasurementsItem.Value)
							if lifecycleMeasurementsCount+1 > len(checklists1.Owner.MsTeamsChannel.Incident.LifecycleMeasurements) {
								checklists1.Owner.MsTeamsChannel.Incident.LifecycleMeasurements = append(checklists1.Owner.MsTeamsChannel.Incident.LifecycleMeasurements, lifecycleMeasurements1)
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount].CalculatedAt = lifecycleMeasurements1.CalculatedAt
								checklists1.Owner.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount].Description = lifecycleMeasurements1.Description
								checklists1.Owner.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount].EndsAtMilestone = lifecycleMeasurements1.EndsAtMilestone
								checklists1.Owner.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount].ID = lifecycleMeasurements1.ID
								checklists1.Owner.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount].Name = lifecycleMeasurements1.Name
								checklists1.Owner.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount].Slug = lifecycleMeasurements1.Slug
								checklists1.Owner.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount].StartsAtMilestone = lifecycleMeasurements1.StartsAtMilestone
								checklists1.Owner.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount].Value = lifecycleMeasurements1.Value
							}
						}
						checklists1.Owner.MsTeamsChannel.Incident.LifecyclePhases = []tfTypes.IncidentsLifecyclePhaseEntity{}
						for lifecyclePhasesCount, lifecyclePhasesItem := range checklistsItem.Owner.MsTeamsChannel.Incident.LifecyclePhases {
							var lifecyclePhases1 tfTypes.IncidentsLifecyclePhaseEntity
							lifecyclePhases1.Description = types.StringPointerValue(lifecyclePhasesItem.Description)
							lifecyclePhases1.ID = types.StringPointerValue(lifecyclePhasesItem.ID)
							lifecyclePhases1.Milestones = []tfTypes.IncidentsLifecycleMilestoneEntity{}
							for milestonesCount, milestonesItem := range lifecyclePhasesItem.Milestones {
								var milestones1 tfTypes.IncidentsLifecycleMilestoneEntity
								milestones1.Description = types.StringPointerValue(milestonesItem.Description)
								milestones1.Duration = types.StringPointerValue(milestonesItem.Duration)
								milestones1.ID = types.StringPointerValue(milestonesItem.ID)
								milestones1.Name = types.StringPointerValue(milestonesItem.Name)
								if milestonesItem.OccurredAt != nil {
									milestones1.OccurredAt = types.StringValue(milestonesItem.OccurredAt.Format(time.RFC3339Nano))
								} else {
									milestones1.OccurredAt = types.StringNull()
								}
								if milestonesItem.Position != nil {
									milestones1.Position = types.Int64Value(int64(*milestonesItem.Position))
								} else {
									milestones1.Position = types.Int64Null()
								}
								milestones1.Slug = types.StringPointerValue(milestonesItem.Slug)
								if milestonesItem.UpdatedAt != nil {
									milestones1.UpdatedAt = types.StringValue(milestonesItem.UpdatedAt.Format(time.RFC3339Nano))
								} else {
									milestones1.UpdatedAt = types.StringNull()
								}
								if milestonesItem.UpdatedBy == nil {
									milestones1.UpdatedBy = nil
								} else {
									milestones1.UpdatedBy = &tfTypes.AuthorEntity{}
									milestones1.UpdatedBy.Email = types.StringPointerValue(milestonesItem.UpdatedBy.Email)
									milestones1.UpdatedBy.ID = types.StringPointerValue(milestonesItem.UpdatedBy.ID)
									milestones1.UpdatedBy.Name = types.StringPointerValue(milestonesItem.UpdatedBy.Name)
									milestones1.UpdatedBy.Source = types.StringPointerValue(milestonesItem.UpdatedBy.Source)
								}
								if milestonesCount+1 > len(lifecyclePhases1.Milestones) {
									lifecyclePhases1.Milestones = append(lifecyclePhases1.Milestones, milestones1)
								} else {
									lifecyclePhases1.Milestones[milestonesCount].Description = milestones1.Description
									lifecyclePhases1.Milestones[milestonesCount].Duration = milestones1.Duration
									lifecyclePhases1.Milestones[milestonesCount].ID = milestones1.ID
									lifecyclePhases1.Milestones[milestonesCount].Name = milestones1.Name
									lifecyclePhases1.Milestones[milestonesCount].OccurredAt = milestones1.OccurredAt
									lifecyclePhases1.Milestones[milestonesCount].Position = milestones1.Position
									lifecyclePhases1.Milestones[milestonesCount].Slug = milestones1.Slug
									lifecyclePhases1.Milestones[milestonesCount].UpdatedAt = milestones1.UpdatedAt
									lifecyclePhases1.Milestones[milestonesCount].UpdatedBy = milestones1.UpdatedBy
								}
							}
							lifecyclePhases1.Name = types.StringPointerValue(lifecyclePhasesItem.Name)
							if lifecyclePhasesItem.Position != nil {
								lifecyclePhases1.Position = types.Int64Value(int64(*lifecyclePhasesItem.Position))
							} else {
								lifecyclePhases1.Position = types.Int64Null()
							}
							lifecyclePhases1.Type = types.StringPointerValue(lifecyclePhasesItem.Type)
							if lifecyclePhasesCount+1 > len(checklists1.Owner.MsTeamsChannel.Incident.LifecyclePhases) {
								checklists1.Owner.MsTeamsChannel.Incident.LifecyclePhases = append(checklists1.Owner.MsTeamsChannel.Incident.LifecyclePhases, lifecyclePhases1)
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.LifecyclePhases[lifecyclePhasesCount].Description = lifecyclePhases1.Description
								checklists1.Owner.MsTeamsChannel.Incident.LifecyclePhases[lifecyclePhasesCount].ID = lifecyclePhases1.ID
								checklists1.Owner.MsTeamsChannel.Incident.LifecyclePhases[lifecyclePhasesCount].Milestones = lifecyclePhases1.Milestones
								checklists1.Owner.MsTeamsChannel.Incident.LifecyclePhases[lifecyclePhasesCount].Name = lifecyclePhases1.Name
								checklists1.Owner.MsTeamsChannel.Incident.LifecyclePhases[lifecyclePhasesCount].Position = lifecyclePhases1.Position
								checklists1.Owner.MsTeamsChannel.Incident.LifecyclePhases[lifecyclePhasesCount].Type = lifecyclePhases1.Type
							}
						}
						checklists1.Owner.MsTeamsChannel.Incident.Milestones = []tfTypes.IncidentsMilestoneEntity{}
						for milestonesCount1, milestonesItem1 := range checklistsItem.Owner.MsTeamsChannel.Incident.Milestones {
							var milestones3 tfTypes.IncidentsMilestoneEntity
							if milestonesItem1.CreatedAt != nil {
								milestones3.CreatedAt = types.StringValue(milestonesItem1.CreatedAt.Format(time.RFC3339Nano))
							} else {
								milestones3.CreatedAt = types.StringNull()
							}
							milestones3.Duration = types.StringPointerValue(milestonesItem1.Duration)
							milestones3.ID = types.StringPointerValue(milestonesItem1.ID)
							if milestonesItem1.OccurredAt != nil {
								milestones3.OccurredAt = types.StringValue(milestonesItem1.OccurredAt.Format(time.RFC3339Nano))
							} else {
								milestones3.OccurredAt = types.StringNull()
							}
							milestones3.Type = types.StringPointerValue(milestonesItem1.Type)
							if milestonesItem1.UpdatedAt != nil {
								milestones3.UpdatedAt = types.StringValue(milestonesItem1.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								milestones3.UpdatedAt = types.StringNull()
							}
							if milestonesCount1+1 > len(checklists1.Owner.MsTeamsChannel.Incident.Milestones) {
								checklists1.Owner.MsTeamsChannel.Incident.Milestones = append(checklists1.Owner.MsTeamsChannel.Incident.Milestones, milestones3)
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.Milestones[milestonesCount1].CreatedAt = milestones3.CreatedAt
								checklists1.Owner.MsTeamsChannel.Incident.Milestones[milestonesCount1].Duration = milestones3.Duration
								checklists1.Owner.MsTeamsChannel.Incident.Milestones[milestonesCount1].ID = milestones3.ID
								checklists1.Owner.MsTeamsChannel.Incident.Milestones[milestonesCount1].OccurredAt = milestones3.OccurredAt
								checklists1.Owner.MsTeamsChannel.Incident.Milestones[milestonesCount1].Type = milestones3.Type
								checklists1.Owner.MsTeamsChannel.Incident.Milestones[milestonesCount1].UpdatedAt = milestones3.UpdatedAt
							}
						}
						if checklistsItem.Owner.MsTeamsChannel.Incident.MonetaryImpact != nil {
							checklists1.Owner.MsTeamsChannel.Incident.MonetaryImpact = types.Int64Value(int64(*checklistsItem.Owner.MsTeamsChannel.Incident.MonetaryImpact))
						} else {
							checklists1.Owner.MsTeamsChannel.Incident.MonetaryImpact = types.Int64Null()
						}
						if checklistsItem.Owner.MsTeamsChannel.Incident.MonetaryImpactCents != nil {
							checklists1.Owner.MsTeamsChannel.Incident.MonetaryImpactCents = types.Int64Value(int64(*checklistsItem.Owner.MsTeamsChannel.Incident.MonetaryImpactCents))
						} else {
							checklists1.Owner.MsTeamsChannel.Incident.MonetaryImpactCents = types.Int64Null()
						}
						checklists1.Owner.MsTeamsChannel.Incident.Name = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Name)
						if checklistsItem.Owner.MsTeamsChannel.Incident.Number != nil {
							checklists1.Owner.MsTeamsChannel.Incident.Number = types.Int64Value(int64(*checklistsItem.Owner.MsTeamsChannel.Incident.Number))
						} else {
							checklists1.Owner.MsTeamsChannel.Incident.Number = types.Int64Null()
						}
						if checklistsItem.Owner.MsTeamsChannel.Incident.Organization == nil {
							checklists1.Owner.MsTeamsChannel.Incident.Organization = nil
						} else {
							checklists1.Owner.MsTeamsChannel.Incident.Organization = &tfTypes.SuccinctEntity{}
							checklists1.Owner.MsTeamsChannel.Incident.Organization.ID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Organization.ID)
							checklists1.Owner.MsTeamsChannel.Incident.Organization.Name = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Organization.Name)
						}
						checklists1.Owner.MsTeamsChannel.Incident.OrganizationID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.OrganizationID)
						checklists1.Owner.MsTeamsChannel.Incident.Priority = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Priority)
						checklists1.Owner.MsTeamsChannel.Incident.PrivateID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.PrivateID)
						checklists1.Owner.MsTeamsChannel.Incident.PrivateStatusPageURL = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.PrivateStatusPageURL)
						checklists1.Owner.MsTeamsChannel.Incident.ReportID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.ReportID)
						checklists1.Owner.MsTeamsChannel.Incident.RoleAssignments = []tfTypes.IncidentsRoleAssignmentEntity{}
						for roleAssignmentsCount, roleAssignmentsItem := range checklistsItem.Owner.MsTeamsChannel.Incident.RoleAssignments {
							var roleAssignments1 tfTypes.IncidentsRoleAssignmentEntity
							if roleAssignmentsItem.CreatedAt != nil {
								roleAssignments1.CreatedAt = types.StringValue(roleAssignmentsItem.CreatedAt.Format(time.RFC3339Nano))
							} else {
								roleAssignments1.CreatedAt = types.StringNull()
							}
							roleAssignments1.ID = types.StringPointerValue(roleAssignmentsItem.ID)
							if roleAssignmentsItem.IncidentRole == nil {
								roleAssignments1.IncidentRole = nil
							} else {
								roleAssignments1.IncidentRole = &tfTypes.IncidentRoleEntity{}
								if roleAssignmentsItem.IncidentRole.CreatedAt != nil {
									roleAssignments1.IncidentRole.CreatedAt = types.StringValue(roleAssignmentsItem.IncidentRole.CreatedAt.Format(time.RFC3339Nano))
								} else {
									roleAssignments1.IncidentRole.CreatedAt = types.StringNull()
								}
								roleAssignments1.IncidentRole.Description = types.StringPointerValue(roleAssignmentsItem.IncidentRole.Description)
								if roleAssignmentsItem.IncidentRole.DiscardedAt != nil {
									roleAssignments1.IncidentRole.DiscardedAt = types.StringValue(roleAssignmentsItem.IncidentRole.DiscardedAt.Format(time.RFC3339Nano))
								} else {
									roleAssignments1.IncidentRole.DiscardedAt = types.StringNull()
								}
								roleAssignments1.IncidentRole.ID = types.StringPointerValue(roleAssignmentsItem.IncidentRole.ID)
								roleAssignments1.IncidentRole.Name = types.StringPointerValue(roleAssignmentsItem.IncidentRole.Name)
								roleAssignments1.IncidentRole.Summary = types.StringPointerValue(roleAssignmentsItem.IncidentRole.Summary)
								if roleAssignmentsItem.IncidentRole.UpdatedAt != nil {
									roleAssignments1.IncidentRole.UpdatedAt = types.StringValue(roleAssignmentsItem.IncidentRole.UpdatedAt.Format(time.RFC3339Nano))
								} else {
									roleAssignments1.IncidentRole.UpdatedAt = types.StringNull()
								}
							}
							if roleAssignmentsItem.Status != nil {
								roleAssignments1.Status = types.StringValue(string(*roleAssignmentsItem.Status))
							} else {
								roleAssignments1.Status = types.StringNull()
							}
							if roleAssignmentsItem.UpdatedAt != nil {
								roleAssignments1.UpdatedAt = types.StringValue(roleAssignmentsItem.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								roleAssignments1.UpdatedAt = types.StringNull()
							}
							if roleAssignmentsItem.User == nil {
								roleAssignments1.User = nil
							} else {
								roleAssignments1.User = &tfTypes.UserEntity{}
								if roleAssignmentsItem.User.CreatedAt != nil {
									roleAssignments1.User.CreatedAt = types.StringValue(roleAssignmentsItem.User.CreatedAt.Format(time.RFC3339Nano))
								} else {
									roleAssignments1.User.CreatedAt = types.StringNull()
								}
								roleAssignments1.User.Email = types.StringPointerValue(roleAssignmentsItem.User.Email)
								roleAssignments1.User.ID = types.StringPointerValue(roleAssignmentsItem.User.ID)
								roleAssignments1.User.Name = types.StringPointerValue(roleAssignmentsItem.User.Name)
								roleAssignments1.User.SignalsEnabledNotificationTypes = []types.String{}
								for _, v := range roleAssignmentsItem.User.SignalsEnabledNotificationTypes {
									roleAssignments1.User.SignalsEnabledNotificationTypes = append(roleAssignments1.User.SignalsEnabledNotificationTypes, types.StringValue(v))
								}
								roleAssignments1.User.SlackLinked = types.BoolPointerValue(roleAssignmentsItem.User.SlackLinked)
								roleAssignments1.User.SlackUserID = types.StringPointerValue(roleAssignmentsItem.User.SlackUserID)
								if roleAssignmentsItem.User.UpdatedAt != nil {
									roleAssignments1.User.UpdatedAt = types.StringValue(roleAssignmentsItem.User.UpdatedAt.Format(time.RFC3339Nano))
								} else {
									roleAssignments1.User.UpdatedAt = types.StringNull()
								}
							}
							if roleAssignmentsCount+1 > len(checklists1.Owner.MsTeamsChannel.Incident.RoleAssignments) {
								checklists1.Owner.MsTeamsChannel.Incident.RoleAssignments = append(checklists1.Owner.MsTeamsChannel.Incident.RoleAssignments, roleAssignments1)
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.RoleAssignments[roleAssignmentsCount].CreatedAt = roleAssignments1.CreatedAt
								checklists1.Owner.MsTeamsChannel.Incident.RoleAssignments[roleAssignmentsCount].ID = roleAssignments1.ID
								checklists1.Owner.MsTeamsChannel.Incident.RoleAssignments[roleAssignmentsCount].IncidentRole = roleAssignments1.IncidentRole
								checklists1.Owner.MsTeamsChannel.Incident.RoleAssignments[roleAssignmentsCount].Status = roleAssignments1.Status
								checklists1.Owner.MsTeamsChannel.Incident.RoleAssignments[roleAssignmentsCount].UpdatedAt = roleAssignments1.UpdatedAt
								checklists1.Owner.MsTeamsChannel.Incident.RoleAssignments[roleAssignmentsCount].User = roleAssignments1.User
							}
						}
						checklists1.Owner.MsTeamsChannel.Incident.Services = []tfTypes.SuccinctEntity{}
						for servicesCount, servicesItem := range checklistsItem.Owner.MsTeamsChannel.Incident.Services {
							var services1 tfTypes.SuccinctEntity
							services1.ID = types.StringPointerValue(servicesItem.ID)
							services1.Name = types.StringPointerValue(servicesItem.Name)
							if servicesCount+1 > len(checklists1.Owner.MsTeamsChannel.Incident.Services) {
								checklists1.Owner.MsTeamsChannel.Incident.Services = append(checklists1.Owner.MsTeamsChannel.Incident.Services, services1)
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.Services[servicesCount].ID = services1.ID
								checklists1.Owner.MsTeamsChannel.Incident.Services[servicesCount].Name = services1.Name
							}
						}
						checklists1.Owner.MsTeamsChannel.Incident.Severity = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Severity)
						checklists1.Owner.MsTeamsChannel.Incident.SeverityColor = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.SeverityColor)
						checklists1.Owner.MsTeamsChannel.Incident.SeverityCondition = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.SeverityCondition)
						if checklistsItem.Owner.MsTeamsChannel.Incident.SeverityConditionObject == nil {
							checklists1.Owner.MsTeamsChannel.Incident.SeverityConditionObject = nil
						} else {
							checklists1.Owner.MsTeamsChannel.Incident.SeverityConditionObject = &tfTypes.SeverityMatrixConditionEntity{}
							checklists1.Owner.MsTeamsChannel.Incident.SeverityConditionObject.ID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.SeverityConditionObject.ID)
							checklists1.Owner.MsTeamsChannel.Incident.SeverityConditionObject.Name = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.SeverityConditionObject.Name)
							if checklistsItem.Owner.MsTeamsChannel.Incident.SeverityConditionObject.Position != nil {
								checklists1.Owner.MsTeamsChannel.Incident.SeverityConditionObject.Position = types.Int64Value(int64(*checklistsItem.Owner.MsTeamsChannel.Incident.SeverityConditionObject.Position))
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.SeverityConditionObject.Position = types.Int64Null()
							}
						}
						checklists1.Owner.MsTeamsChannel.Incident.SeverityImpact = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.SeverityImpact)
						if checklistsItem.Owner.MsTeamsChannel.Incident.SeverityImpactObject == nil {
							checklists1.Owner.MsTeamsChannel.Incident.SeverityImpactObject = nil
						} else {
							checklists1.Owner.MsTeamsChannel.Incident.SeverityImpactObject = &tfTypes.SeverityMatrixImpactEntity{}
							checklists1.Owner.MsTeamsChannel.Incident.SeverityImpactObject.AffectsID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.SeverityImpactObject.AffectsID)
							checklists1.Owner.MsTeamsChannel.Incident.SeverityImpactObject.ID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.SeverityImpactObject.ID)
							checklists1.Owner.MsTeamsChannel.Incident.SeverityImpactObject.Name = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.SeverityImpactObject.Name)
							if checklistsItem.Owner.MsTeamsChannel.Incident.SeverityImpactObject.Position != nil {
								checklists1.Owner.MsTeamsChannel.Incident.SeverityImpactObject.Position = types.Int64Value(int64(*checklistsItem.Owner.MsTeamsChannel.Incident.SeverityImpactObject.Position))
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.SeverityImpactObject.Position = types.Int64Null()
							}
							checklists1.Owner.MsTeamsChannel.Incident.SeverityImpactObject.Type = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.SeverityImpactObject.Type)
						}
						if checklistsItem.Owner.MsTeamsChannel.Incident.StartedAt != nil {
							checklists1.Owner.MsTeamsChannel.Incident.StartedAt = types.StringValue(checklistsItem.Owner.MsTeamsChannel.Incident.StartedAt.Format(time.RFC3339Nano))
						} else {
							checklists1.Owner.MsTeamsChannel.Incident.StartedAt = types.StringNull()
						}
						checklists1.Owner.MsTeamsChannel.Incident.StatusPages = []tfTypes.IncidentsStatusPageEntity{}
						for statusPagesCount1, statusPagesItem1 := range checklistsItem.Owner.MsTeamsChannel.Incident.StatusPages {
							var statusPages3 tfTypes.IncidentsStatusPageEntity
							statusPages3.DisplayName = types.StringPointerValue(statusPagesItem1.DisplayName)
							statusPages3.ExternalID = types.StringPointerValue(statusPagesItem1.ExternalID)
							statusPages3.ID = types.StringPointerValue(statusPagesItem1.ID)
							if statusPagesItem1.Integration == nil {
								statusPages3.Integration = nil
							} else {
								statusPages3.Integration = &tfTypes.IntegrationEntity{}
								if statusPagesItem1.Integration.CreatedAt != nil {
									statusPages3.Integration.CreatedAt = types.StringValue(statusPagesItem1.Integration.CreatedAt.Format(time.RFC3339Nano))
								} else {
									statusPages3.Integration.CreatedAt = types.StringNull()
								}
								statusPages3.Integration.DisplayName = types.StringPointerValue(statusPagesItem1.Integration.DisplayName)
								statusPages3.Integration.ID = types.StringPointerValue(statusPagesItem1.Integration.ID)
								statusPages3.Integration.IntegrationName = types.StringPointerValue(statusPagesItem1.Integration.IntegrationName)
								statusPages3.Integration.IntegrationSlug = types.StringPointerValue(statusPagesItem1.Integration.IntegrationSlug)
							}
							statusPages3.Name = types.StringPointerValue(statusPagesItem1.Name)
							statusPages3.URL = types.StringPointerValue(statusPagesItem1.URL)
							if statusPagesCount1+1 > len(checklists1.Owner.MsTeamsChannel.Incident.StatusPages) {
								checklists1.Owner.MsTeamsChannel.Incident.StatusPages = append(checklists1.Owner.MsTeamsChannel.Incident.StatusPages, statusPages3)
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.StatusPages[statusPagesCount1].DisplayName = statusPages3.DisplayName
								checklists1.Owner.MsTeamsChannel.Incident.StatusPages[statusPagesCount1].ExternalID = statusPages3.ExternalID
								checklists1.Owner.MsTeamsChannel.Incident.StatusPages[statusPagesCount1].ID = statusPages3.ID
								checklists1.Owner.MsTeamsChannel.Incident.StatusPages[statusPagesCount1].Integration = statusPages3.Integration
								checklists1.Owner.MsTeamsChannel.Incident.StatusPages[statusPagesCount1].Name = statusPages3.Name
								checklists1.Owner.MsTeamsChannel.Incident.StatusPages[statusPagesCount1].URL = statusPages3.URL
							}
						}
						checklists1.Owner.MsTeamsChannel.Incident.Summary = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Summary)
						checklists1.Owner.MsTeamsChannel.Incident.TagList = []types.String{}
						for _, v := range checklistsItem.Owner.MsTeamsChannel.Incident.TagList {
							checklists1.Owner.MsTeamsChannel.Incident.TagList = append(checklists1.Owner.MsTeamsChannel.Incident.TagList, types.StringValue(v))
						}
						checklists1.Owner.MsTeamsChannel.Incident.TeamAssignments = []tfTypes.IncidentsTeamAssignmentEntity{}
						for teamAssignmentsCount, teamAssignmentsItem := range checklistsItem.Owner.MsTeamsChannel.Incident.TeamAssignments {
							var teamAssignments1 tfTypes.IncidentsTeamAssignmentEntity
							if teamAssignmentsItem.CreatedAt != nil {
								teamAssignments1.CreatedAt = types.StringValue(teamAssignmentsItem.CreatedAt.Format(time.RFC3339Nano))
							} else {
								teamAssignments1.CreatedAt = types.StringNull()
							}
							teamAssignments1.ID = types.StringPointerValue(teamAssignmentsItem.ID)
							teamAssignments1.Status = types.StringPointerValue(teamAssignmentsItem.Status)
							if teamAssignmentsItem.Team == nil {
								teamAssignments1.Team = nil
							} else {
								teamAssignments1.Team = &tfTypes.TeamEntity1{}
							}
							if teamAssignmentsItem.UpdatedAt != nil {
								teamAssignments1.UpdatedAt = types.StringValue(teamAssignmentsItem.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								teamAssignments1.UpdatedAt = types.StringNull()
							}
							if teamAssignmentsCount+1 > len(checklists1.Owner.MsTeamsChannel.Incident.TeamAssignments) {
								checklists1.Owner.MsTeamsChannel.Incident.TeamAssignments = append(checklists1.Owner.MsTeamsChannel.Incident.TeamAssignments, teamAssignments1)
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.TeamAssignments[teamAssignmentsCount].CreatedAt = teamAssignments1.CreatedAt
								checklists1.Owner.MsTeamsChannel.Incident.TeamAssignments[teamAssignmentsCount].ID = teamAssignments1.ID
								checklists1.Owner.MsTeamsChannel.Incident.TeamAssignments[teamAssignmentsCount].Status = teamAssignments1.Status
								checklists1.Owner.MsTeamsChannel.Incident.TeamAssignments[teamAssignmentsCount].Team = teamAssignments1.Team
								checklists1.Owner.MsTeamsChannel.Incident.TeamAssignments[teamAssignmentsCount].UpdatedAt = teamAssignments1.UpdatedAt
							}
						}
						if checklistsItem.Owner.MsTeamsChannel.Incident.Ticket == nil {
							checklists1.Owner.MsTeamsChannel.Incident.Ticket = nil
						} else {
							checklists1.Owner.MsTeamsChannel.Incident.Ticket = &tfTypes.TicketingTicketEntity{}
							checklists1.Owner.MsTeamsChannel.Incident.Ticket.Assignees = []tfTypes.AuthorEntity{}
							for assigneesCount1, assigneesItem1 := range checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.Assignees {
								var assignees3 tfTypes.AuthorEntity
								assignees3.Email = types.StringPointerValue(assigneesItem1.Email)
								assignees3.ID = types.StringPointerValue(assigneesItem1.ID)
								assignees3.Name = types.StringPointerValue(assigneesItem1.Name)
								assignees3.Source = types.StringPointerValue(assigneesItem1.Source)
								if assigneesCount1+1 > len(checklists1.Owner.MsTeamsChannel.Incident.Ticket.Assignees) {
									checklists1.Owner.MsTeamsChannel.Incident.Ticket.Assignees = append(checklists1.Owner.MsTeamsChannel.Incident.Ticket.Assignees, assignees3)
								} else {
									checklists1.Owner.MsTeamsChannel.Incident.Ticket.Assignees[assigneesCount1].Email = assignees3.Email
									checklists1.Owner.MsTeamsChannel.Incident.Ticket.Assignees[assigneesCount1].ID = assignees3.ID
									checklists1.Owner.MsTeamsChannel.Incident.Ticket.Assignees[assigneesCount1].Name = assignees3.Name
									checklists1.Owner.MsTeamsChannel.Incident.Ticket.Assignees[assigneesCount1].Source = assignees3.Source
								}
							}
							if checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.CreatedAt != nil {
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.CreatedAt = types.StringValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.CreatedAt.Format(time.RFC3339Nano))
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.CreatedAt = types.StringNull()
							}
							if checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.CreatedBy == nil {
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.CreatedBy = nil
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.CreatedBy = &tfTypes.AuthorEntity{}
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.CreatedBy.Email = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.CreatedBy.Email)
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.CreatedBy.ID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.CreatedBy.ID)
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.CreatedBy.Name = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.CreatedBy.Name)
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.CreatedBy.Source = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.CreatedBy.Source)
							}
							checklists1.Owner.MsTeamsChannel.Incident.Ticket.Description = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.Description)
							if checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.DueAt != nil {
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.DueAt = types.StringValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.DueAt.Format(time.RFC3339Nano))
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.DueAt = types.StringNull()
							}
							checklists1.Owner.MsTeamsChannel.Incident.Ticket.ID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.ID)
							checklists1.Owner.MsTeamsChannel.Incident.Ticket.IncidentCurrentMilestone = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.IncidentCurrentMilestone)
							checklists1.Owner.MsTeamsChannel.Incident.Ticket.IncidentID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.IncidentID)
							checklists1.Owner.MsTeamsChannel.Incident.Ticket.IncidentName = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.IncidentName)
							if checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.Link == nil {
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.Link = nil
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.Link = &tfTypes.AttachmentsLinkEntity{}
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.Link.Deletable = types.BoolPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.Link.Deletable)
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.Link.DisplayText = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.Link.DisplayText)
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.Link.Editable = types.BoolPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.Link.Editable)
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.Link.HrefURL = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.Link.HrefURL)
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.Link.IconURL = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.Link.IconURL)
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.Link.ID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.Link.ID)
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.Link.Type = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.Link.Type)
							}
							if checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.Priority == nil {
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.Priority = nil
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.Priority = &tfTypes.TicketingPriorityEntity{}
								if checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.Priority.CreatedAt != nil {
									checklists1.Owner.MsTeamsChannel.Incident.Ticket.Priority.CreatedAt = types.StringValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.Priority.CreatedAt.Format(time.RFC3339Nano))
								} else {
									checklists1.Owner.MsTeamsChannel.Incident.Ticket.Priority.CreatedAt = types.StringNull()
								}
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.Priority.ID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.Priority.ID)
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.Priority.Name = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.Priority.Name)
								if checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.Priority.Position != nil {
									checklists1.Owner.MsTeamsChannel.Incident.Ticket.Priority.Position = types.Int64Value(int64(*checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.Priority.Position))
								} else {
									checklists1.Owner.MsTeamsChannel.Incident.Ticket.Priority.Position = types.Int64Null()
								}
								if checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.Priority.UpdatedAt != nil {
									checklists1.Owner.MsTeamsChannel.Incident.Ticket.Priority.UpdatedAt = types.StringValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.Priority.UpdatedAt.Format(time.RFC3339Nano))
								} else {
									checklists1.Owner.MsTeamsChannel.Incident.Ticket.Priority.UpdatedAt = types.StringNull()
								}
							}
							if checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.State != nil {
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.State = types.StringValue(string(*checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.State))
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.State = types.StringNull()
							}
							checklists1.Owner.MsTeamsChannel.Incident.Ticket.Summary = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.Summary)
							checklists1.Owner.MsTeamsChannel.Incident.Ticket.TagList = []types.String{}
							for _, v := range checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.TagList {
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.TagList = append(checklists1.Owner.MsTeamsChannel.Incident.Ticket.TagList, types.StringValue(v))
							}
							checklists1.Owner.MsTeamsChannel.Incident.Ticket.TaskID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.TaskID)
							if checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.Type != nil {
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.Type = types.StringValue(string(*checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.Type))
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.Type = types.StringNull()
							}
							if checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.UpdatedAt != nil {
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.UpdatedAt = types.StringValue(checklistsItem.Owner.MsTeamsChannel.Incident.Ticket.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								checklists1.Owner.MsTeamsChannel.Incident.Ticket.UpdatedAt = types.StringNull()
							}
						}
					}
					checklists1.Owner.MsTeamsChannel.MsTeamID = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.MsTeamID)
					checklists1.Owner.MsTeamsChannel.Status = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.Status)
					checklists1.Owner.MsTeamsChannel.TeamName = types.StringPointerValue(checklistsItem.Owner.MsTeamsChannel.TeamName)
				}
				checklists1.Owner.Name = types.StringPointerValue(checklistsItem.Owner.Name)
				checklists1.Owner.OwnedFunctionalities = []tfTypes.FunctionalityEntity{}
				for ownedFunctionalitiesCount, ownedFunctionalitiesItem := range checklistsItem.Owner.OwnedFunctionalities {
					var ownedFunctionalities1 tfTypes.FunctionalityEntity
					ownedFunctionalities1.ActiveIncidents = []types.String{}
					for _, v := range ownedFunctionalitiesItem.ActiveIncidents {
						ownedFunctionalities1.ActiveIncidents = append(ownedFunctionalities1.ActiveIncidents, types.StringValue(v))
					}
					ownedFunctionalities1.AlertOnAdd = types.BoolPointerValue(ownedFunctionalitiesItem.AlertOnAdd)
					ownedFunctionalities1.AutoAddRespondingTeam = types.BoolPointerValue(ownedFunctionalitiesItem.AutoAddRespondingTeam)
					if ownedFunctionalitiesItem.CreatedAt != nil {
						ownedFunctionalities1.CreatedAt = types.StringValue(ownedFunctionalitiesItem.CreatedAt.Format(time.RFC3339Nano))
					} else {
						ownedFunctionalities1.CreatedAt = types.StringNull()
					}
					ownedFunctionalities1.Description = types.StringPointerValue(ownedFunctionalitiesItem.Description)
					ownedFunctionalities1.ExternalResources = []tfTypes.ExternalResourceEntity{}
					for externalResourcesCount1, externalResourcesItem1 := range ownedFunctionalitiesItem.ExternalResources {
						var externalResources3 tfTypes.ExternalResourceEntity
						externalResources3.ConnectionID = types.StringPointerValue(externalResourcesItem1.ConnectionID)
						externalResources3.ConnectionName = types.StringPointerValue(externalResourcesItem1.ConnectionName)
						externalResources3.ConnectionType = types.StringPointerValue(externalResourcesItem1.ConnectionType)
						if externalResourcesItem1.CreatedAt != nil {
							externalResources3.CreatedAt = types.StringValue(externalResourcesItem1.CreatedAt.Format(time.RFC3339Nano))
						} else {
							externalResources3.CreatedAt = types.StringNull()
						}
						externalResources3.Name = types.StringPointerValue(externalResourcesItem1.Name)
						externalResources3.RemoteID = types.StringPointerValue(externalResourcesItem1.RemoteID)
						externalResources3.RemoteURL = types.StringPointerValue(externalResourcesItem1.RemoteURL)
						if externalResourcesItem1.UpdatedAt != nil {
							externalResources3.UpdatedAt = types.StringValue(externalResourcesItem1.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							externalResources3.UpdatedAt = types.StringNull()
						}
						if externalResourcesCount1+1 > len(ownedFunctionalities1.ExternalResources) {
							ownedFunctionalities1.ExternalResources = append(ownedFunctionalities1.ExternalResources, externalResources3)
						} else {
							ownedFunctionalities1.ExternalResources[externalResourcesCount1].ConnectionID = externalResources3.ConnectionID
							ownedFunctionalities1.ExternalResources[externalResourcesCount1].ConnectionName = externalResources3.ConnectionName
							ownedFunctionalities1.ExternalResources[externalResourcesCount1].ConnectionType = externalResources3.ConnectionType
							ownedFunctionalities1.ExternalResources[externalResourcesCount1].CreatedAt = externalResources3.CreatedAt
							ownedFunctionalities1.ExternalResources[externalResourcesCount1].Name = externalResources3.Name
							ownedFunctionalities1.ExternalResources[externalResourcesCount1].RemoteID = externalResources3.RemoteID
							ownedFunctionalities1.ExternalResources[externalResourcesCount1].RemoteURL = externalResources3.RemoteURL
							ownedFunctionalities1.ExternalResources[externalResourcesCount1].UpdatedAt = externalResources3.UpdatedAt
						}
					}
					ownedFunctionalities1.ID = types.StringPointerValue(ownedFunctionalitiesItem.ID)
					if len(ownedFunctionalitiesItem.Labels) > 0 {
						ownedFunctionalities1.Labels = make(map[string]types.String)
						for key2, value4 := range ownedFunctionalitiesItem.Labels {
							ownedFunctionalities1.Labels[key2] = types.StringValue(value4)
						}
					}
					ownedFunctionalities1.Links = []tfTypes.LinksEntity{}
					for linksCount1, linksItem1 := range ownedFunctionalitiesItem.Links {
						var links3 tfTypes.LinksEntity
						links3.HrefURL = types.StringPointerValue(linksItem1.HrefURL)
						links3.IconURL = types.StringPointerValue(linksItem1.IconURL)
						links3.ID = types.StringPointerValue(linksItem1.ID)
						links3.Name = types.StringPointerValue(linksItem1.Name)
						if linksCount1+1 > len(ownedFunctionalities1.Links) {
							ownedFunctionalities1.Links = append(ownedFunctionalities1.Links, links3)
						} else {
							ownedFunctionalities1.Links[linksCount1].HrefURL = links3.HrefURL
							ownedFunctionalities1.Links[linksCount1].IconURL = links3.IconURL
							ownedFunctionalities1.Links[linksCount1].ID = links3.ID
							ownedFunctionalities1.Links[linksCount1].Name = links3.Name
						}
					}
					ownedFunctionalities1.Name = types.StringPointerValue(ownedFunctionalitiesItem.Name)
					if ownedFunctionalitiesItem.Owner == nil {
						ownedFunctionalities1.Owner = nil
					} else {
						ownedFunctionalities1.Owner = &tfTypes.TeamEntity1{}
					}
					ownedFunctionalities1.Slug = types.StringPointerValue(ownedFunctionalitiesItem.Slug)
					if ownedFunctionalitiesItem.UpdatedAt != nil {
						ownedFunctionalities1.UpdatedAt = types.StringValue(ownedFunctionalitiesItem.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						ownedFunctionalities1.UpdatedAt = types.StringNull()
					}
					if ownedFunctionalitiesItem.UpdatedBy == nil {
						ownedFunctionalities1.UpdatedBy = nil
					} else {
						ownedFunctionalities1.UpdatedBy = &tfTypes.AuthorEntity{}
						ownedFunctionalities1.UpdatedBy.Email = types.StringPointerValue(ownedFunctionalitiesItem.UpdatedBy.Email)
						ownedFunctionalities1.UpdatedBy.ID = types.StringPointerValue(ownedFunctionalitiesItem.UpdatedBy.ID)
						ownedFunctionalities1.UpdatedBy.Name = types.StringPointerValue(ownedFunctionalitiesItem.UpdatedBy.Name)
						ownedFunctionalities1.UpdatedBy.Source = types.StringPointerValue(ownedFunctionalitiesItem.UpdatedBy.Source)
					}
					if ownedFunctionalitiesCount+1 > len(checklists1.Owner.OwnedFunctionalities) {
						checklists1.Owner.OwnedFunctionalities = append(checklists1.Owner.OwnedFunctionalities, ownedFunctionalities1)
					} else {
						checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].ActiveIncidents = ownedFunctionalities1.ActiveIncidents
						checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].AlertOnAdd = ownedFunctionalities1.AlertOnAdd
						checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].AutoAddRespondingTeam = ownedFunctionalities1.AutoAddRespondingTeam
						checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].CreatedAt = ownedFunctionalities1.CreatedAt
						checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].Description = ownedFunctionalities1.Description
						checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].ExternalResources = ownedFunctionalities1.ExternalResources
						checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].ID = ownedFunctionalities1.ID
						checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].Labels = ownedFunctionalities1.Labels
						checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].Links = ownedFunctionalities1.Links
						checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].Name = ownedFunctionalities1.Name
						checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].Owner = ownedFunctionalities1.Owner
						checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].Slug = ownedFunctionalities1.Slug
						checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].UpdatedAt = ownedFunctionalities1.UpdatedAt
						checklists1.Owner.OwnedFunctionalities[ownedFunctionalitiesCount].UpdatedBy = ownedFunctionalities1.UpdatedBy
					}
				}
				checklists1.Owner.OwnedRunbooks = []tfTypes.SlimRunbookEntity{}
				for ownedRunbooksCount, ownedRunbooksItem := range checklistsItem.Owner.OwnedRunbooks {
					var ownedRunbooks1 tfTypes.SlimRunbookEntity
					if ownedRunbooksItem.AttachmentRule == nil {
						ownedRunbooks1.AttachmentRule = nil
					} else {
						ownedRunbooks1.AttachmentRule = &tfTypes.RulesRuleEntity{}
						if ownedRunbooksItem.AttachmentRule.Logic == nil {
							ownedRunbooks1.AttachmentRule.Logic = nil
						} else {
							ownedRunbooks1.AttachmentRule.Logic = &tfTypes.TeamEntity1{}
						}
						if ownedRunbooksItem.AttachmentRule.UserData == nil {
							ownedRunbooks1.AttachmentRule.UserData = nil
						} else {
							ownedRunbooks1.AttachmentRule.UserData = &tfTypes.FHTypesGenericEntity{}
							ownedRunbooks1.AttachmentRule.UserData.Label = types.StringPointerValue(ownedRunbooksItem.AttachmentRule.UserData.Label)
							ownedRunbooks1.AttachmentRule.UserData.Type = types.StringPointerValue(ownedRunbooksItem.AttachmentRule.UserData.Type)
							ownedRunbooks1.AttachmentRule.UserData.Value = types.StringPointerValue(ownedRunbooksItem.AttachmentRule.UserData.Value)
						}
					}
					ownedRunbooks1.Categories = types.StringPointerValue(ownedRunbooksItem.Categories)
					if ownedRunbooksItem.CreatedAt != nil {
						ownedRunbooks1.CreatedAt = types.StringValue(ownedRunbooksItem.CreatedAt.Format(time.RFC3339Nano))
					} else {
						ownedRunbooks1.CreatedAt = types.StringNull()
					}
					ownedRunbooks1.Description = types.StringPointerValue(ownedRunbooksItem.Description)
					ownedRunbooks1.ID = types.StringPointerValue(ownedRunbooksItem.ID)
					ownedRunbooks1.Name = types.StringPointerValue(ownedRunbooksItem.Name)
					if ownedRunbooksItem.Owner == nil {
						ownedRunbooks1.Owner = nil
					} else {
						ownedRunbooks1.Owner = &tfTypes.TeamEntity1{}
					}
					ownedRunbooks1.Summary = types.StringPointerValue(ownedRunbooksItem.Summary)
					ownedRunbooks1.Type = types.StringPointerValue(ownedRunbooksItem.Type)
					if ownedRunbooksItem.UpdatedAt != nil {
						ownedRunbooks1.UpdatedAt = types.StringValue(ownedRunbooksItem.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						ownedRunbooks1.UpdatedAt = types.StringNull()
					}
					if ownedRunbooksCount+1 > len(checklists1.Owner.OwnedRunbooks) {
						checklists1.Owner.OwnedRunbooks = append(checklists1.Owner.OwnedRunbooks, ownedRunbooks1)
					} else {
						checklists1.Owner.OwnedRunbooks[ownedRunbooksCount].AttachmentRule = ownedRunbooks1.AttachmentRule
						checklists1.Owner.OwnedRunbooks[ownedRunbooksCount].Categories = ownedRunbooks1.Categories
						checklists1.Owner.OwnedRunbooks[ownedRunbooksCount].CreatedAt = ownedRunbooks1.CreatedAt
						checklists1.Owner.OwnedRunbooks[ownedRunbooksCount].Description = ownedRunbooks1.Description
						checklists1.Owner.OwnedRunbooks[ownedRunbooksCount].ID = ownedRunbooks1.ID
						checklists1.Owner.OwnedRunbooks[ownedRunbooksCount].Name = ownedRunbooks1.Name
						checklists1.Owner.OwnedRunbooks[ownedRunbooksCount].Owner = ownedRunbooks1.Owner
						checklists1.Owner.OwnedRunbooks[ownedRunbooksCount].Summary = ownedRunbooks1.Summary
						checklists1.Owner.OwnedRunbooks[ownedRunbooksCount].Type = ownedRunbooks1.Type
						checklists1.Owner.OwnedRunbooks[ownedRunbooksCount].UpdatedAt = ownedRunbooks1.UpdatedAt
					}
				}
				checklists1.Owner.SignalsIcalURL = types.StringPointerValue(checklistsItem.Owner.SignalsIcalURL)
				if checklistsItem.Owner.SlackChannel == nil {
					checklists1.Owner.SlackChannel = nil
				} else {
					checklists1.Owner.SlackChannel = &tfTypes.IntegrationsSlackSlackChannelEntity{}
					checklists1.Owner.SlackChannel.ID = types.StringPointerValue(checklistsItem.Owner.SlackChannel.ID)
					checklists1.Owner.SlackChannel.Name = types.StringPointerValue(checklistsItem.Owner.SlackChannel.Name)
					checklists1.Owner.SlackChannel.SlackChannelID = types.StringPointerValue(checklistsItem.Owner.SlackChannel.SlackChannelID)
				}
				checklists1.Owner.Slug = types.StringPointerValue(checklistsItem.Owner.Slug)
				if checklistsItem.Owner.UpdatedAt != nil {
					checklists1.Owner.UpdatedAt = types.StringValue(checklistsItem.Owner.UpdatedAt.Format(time.RFC3339Nano))
				} else {
					checklists1.Owner.UpdatedAt = types.StringNull()
				}
			}
			if checklistsItem.UpdatedAt != nil {
				checklists1.UpdatedAt = types.StringValue(checklistsItem.UpdatedAt.Format(time.RFC3339Nano))
			} else {
				checklists1.UpdatedAt = types.StringNull()
			}
			if checklistsCount+1 > len(r.Checklists) {
				r.Checklists = append(r.Checklists, checklists1)
			} else {
				r.Checklists[checklistsCount].Checks = checklists1.Checks
				r.Checklists[checklistsCount].CreatedAt = checklists1.CreatedAt
				r.Checklists[checklistsCount].Description = checklists1.Description
				r.Checklists[checklistsCount].ID = checklists1.ID
				r.Checklists[checklistsCount].Name = checklists1.Name
				r.Checklists[checklistsCount].Owner = checklists1.Owner
				r.Checklists[checklistsCount].UpdatedAt = checklists1.UpdatedAt
			}
		}
		if resp.CompletedChecks != nil {
			r.CompletedChecks = types.Int64Value(int64(*resp.CompletedChecks))
		} else {
			r.CompletedChecks = types.Int64Null()
		}
		if resp.CreatedAt != nil {
			r.CreatedAt = types.StringValue(resp.CreatedAt.Format(time.RFC3339Nano))
		} else {
			r.CreatedAt = types.StringNull()
		}
		r.Description = types.StringPointerValue(resp.Description)
		r.ExternalResources = []tfTypes.ExternalResourceEntity{}
		if len(r.ExternalResources) > len(resp.ExternalResources) {
			r.ExternalResources = r.ExternalResources[:len(resp.ExternalResources)]
		}
		for externalResourcesCount2, externalResourcesItem2 := range resp.ExternalResources {
			var externalResources5 tfTypes.ExternalResourceEntity
			externalResources5.ConnectionID = types.StringPointerValue(externalResourcesItem2.ConnectionID)
			externalResources5.ConnectionName = types.StringPointerValue(externalResourcesItem2.ConnectionName)
			externalResources5.ConnectionType = types.StringPointerValue(externalResourcesItem2.ConnectionType)
			if externalResourcesItem2.CreatedAt != nil {
				externalResources5.CreatedAt = types.StringValue(externalResourcesItem2.CreatedAt.Format(time.RFC3339Nano))
			} else {
				externalResources5.CreatedAt = types.StringNull()
			}
			externalResources5.Name = types.StringPointerValue(externalResourcesItem2.Name)
			externalResources5.RemoteID = types.StringPointerValue(externalResourcesItem2.RemoteID)
			externalResources5.RemoteURL = types.StringPointerValue(externalResourcesItem2.RemoteURL)
			if externalResourcesItem2.UpdatedAt != nil {
				externalResources5.UpdatedAt = types.StringValue(externalResourcesItem2.UpdatedAt.Format(time.RFC3339Nano))
			} else {
				externalResources5.UpdatedAt = types.StringNull()
			}
			if externalResourcesCount2+1 > len(r.ExternalResources) {
				r.ExternalResources = append(r.ExternalResources, externalResources5)
			} else {
				r.ExternalResources[externalResourcesCount2].ConnectionID = externalResources5.ConnectionID
				r.ExternalResources[externalResourcesCount2].ConnectionName = externalResources5.ConnectionName
				r.ExternalResources[externalResourcesCount2].ConnectionType = externalResources5.ConnectionType
				r.ExternalResources[externalResourcesCount2].CreatedAt = externalResources5.CreatedAt
				r.ExternalResources[externalResourcesCount2].Name = externalResources5.Name
				r.ExternalResources[externalResourcesCount2].RemoteID = externalResources5.RemoteID
				r.ExternalResources[externalResourcesCount2].RemoteURL = externalResources5.RemoteURL
				r.ExternalResources[externalResourcesCount2].UpdatedAt = externalResources5.UpdatedAt
			}
		}
		r.Functionalities = []tfTypes.FunctionalityEntity{}
		if len(r.Functionalities) > len(resp.Functionalities) {
			r.Functionalities = r.Functionalities[:len(resp.Functionalities)]
		}
		for functionalitiesCount2, functionalitiesItem2 := range resp.Functionalities {
			var functionalities5 tfTypes.FunctionalityEntity
			functionalities5.ActiveIncidents = []types.String{}
			for _, v := range functionalitiesItem2.ActiveIncidents {
				functionalities5.ActiveIncidents = append(functionalities5.ActiveIncidents, types.StringValue(v))
			}
			functionalities5.AlertOnAdd = types.BoolPointerValue(functionalitiesItem2.AlertOnAdd)
			functionalities5.AutoAddRespondingTeam = types.BoolPointerValue(functionalitiesItem2.AutoAddRespondingTeam)
			if functionalitiesItem2.CreatedAt != nil {
				functionalities5.CreatedAt = types.StringValue(functionalitiesItem2.CreatedAt.Format(time.RFC3339Nano))
			} else {
				functionalities5.CreatedAt = types.StringNull()
			}
			functionalities5.Description = types.StringPointerValue(functionalitiesItem2.Description)
			functionalities5.ExternalResources = []tfTypes.ExternalResourceEntity{}
			for externalResourcesCount3, externalResourcesItem3 := range functionalitiesItem2.ExternalResources {
				var externalResources7 tfTypes.ExternalResourceEntity
				externalResources7.ConnectionID = types.StringPointerValue(externalResourcesItem3.ConnectionID)
				externalResources7.ConnectionName = types.StringPointerValue(externalResourcesItem3.ConnectionName)
				externalResources7.ConnectionType = types.StringPointerValue(externalResourcesItem3.ConnectionType)
				if externalResourcesItem3.CreatedAt != nil {
					externalResources7.CreatedAt = types.StringValue(externalResourcesItem3.CreatedAt.Format(time.RFC3339Nano))
				} else {
					externalResources7.CreatedAt = types.StringNull()
				}
				externalResources7.Name = types.StringPointerValue(externalResourcesItem3.Name)
				externalResources7.RemoteID = types.StringPointerValue(externalResourcesItem3.RemoteID)
				externalResources7.RemoteURL = types.StringPointerValue(externalResourcesItem3.RemoteURL)
				if externalResourcesItem3.UpdatedAt != nil {
					externalResources7.UpdatedAt = types.StringValue(externalResourcesItem3.UpdatedAt.Format(time.RFC3339Nano))
				} else {
					externalResources7.UpdatedAt = types.StringNull()
				}
				if externalResourcesCount3+1 > len(functionalities5.ExternalResources) {
					functionalities5.ExternalResources = append(functionalities5.ExternalResources, externalResources7)
				} else {
					functionalities5.ExternalResources[externalResourcesCount3].ConnectionID = externalResources7.ConnectionID
					functionalities5.ExternalResources[externalResourcesCount3].ConnectionName = externalResources7.ConnectionName
					functionalities5.ExternalResources[externalResourcesCount3].ConnectionType = externalResources7.ConnectionType
					functionalities5.ExternalResources[externalResourcesCount3].CreatedAt = externalResources7.CreatedAt
					functionalities5.ExternalResources[externalResourcesCount3].Name = externalResources7.Name
					functionalities5.ExternalResources[externalResourcesCount3].RemoteID = externalResources7.RemoteID
					functionalities5.ExternalResources[externalResourcesCount3].RemoteURL = externalResources7.RemoteURL
					functionalities5.ExternalResources[externalResourcesCount3].UpdatedAt = externalResources7.UpdatedAt
				}
			}
			functionalities5.ID = types.StringPointerValue(functionalitiesItem2.ID)
			if len(functionalitiesItem2.Labels) > 0 {
				functionalities5.Labels = make(map[string]types.String)
				for key3, value6 := range functionalitiesItem2.Labels {
					functionalities5.Labels[key3] = types.StringValue(value6)
				}
			}
			functionalities5.Links = []tfTypes.LinksEntity{}
			for linksCount2, linksItem2 := range functionalitiesItem2.Links {
				var links5 tfTypes.LinksEntity
				links5.HrefURL = types.StringPointerValue(linksItem2.HrefURL)
				links5.IconURL = types.StringPointerValue(linksItem2.IconURL)
				links5.ID = types.StringPointerValue(linksItem2.ID)
				links5.Name = types.StringPointerValue(linksItem2.Name)
				if linksCount2+1 > len(functionalities5.Links) {
					functionalities5.Links = append(functionalities5.Links, links5)
				} else {
					functionalities5.Links[linksCount2].HrefURL = links5.HrefURL
					functionalities5.Links[linksCount2].IconURL = links5.IconURL
					functionalities5.Links[linksCount2].ID = links5.ID
					functionalities5.Links[linksCount2].Name = links5.Name
				}
			}
			functionalities5.Name = types.StringPointerValue(functionalitiesItem2.Name)
			if functionalitiesItem2.Owner == nil {
				functionalities5.Owner = nil
			} else {
				functionalities5.Owner = &tfTypes.TeamEntity1{}
			}
			functionalities5.Slug = types.StringPointerValue(functionalitiesItem2.Slug)
			if functionalitiesItem2.UpdatedAt != nil {
				functionalities5.UpdatedAt = types.StringValue(functionalitiesItem2.UpdatedAt.Format(time.RFC3339Nano))
			} else {
				functionalities5.UpdatedAt = types.StringNull()
			}
			if functionalitiesItem2.UpdatedBy == nil {
				functionalities5.UpdatedBy = nil
			} else {
				functionalities5.UpdatedBy = &tfTypes.AuthorEntity{}
				functionalities5.UpdatedBy.Email = types.StringPointerValue(functionalitiesItem2.UpdatedBy.Email)
				functionalities5.UpdatedBy.ID = types.StringPointerValue(functionalitiesItem2.UpdatedBy.ID)
				functionalities5.UpdatedBy.Name = types.StringPointerValue(functionalitiesItem2.UpdatedBy.Name)
				functionalities5.UpdatedBy.Source = types.StringPointerValue(functionalitiesItem2.UpdatedBy.Source)
			}
			if functionalitiesCount2+1 > len(r.Functionalities) {
				r.Functionalities = append(r.Functionalities, functionalities5)
			} else {
				r.Functionalities[functionalitiesCount2].ActiveIncidents = functionalities5.ActiveIncidents
				r.Functionalities[functionalitiesCount2].AlertOnAdd = functionalities5.AlertOnAdd
				r.Functionalities[functionalitiesCount2].AutoAddRespondingTeam = functionalities5.AutoAddRespondingTeam
				r.Functionalities[functionalitiesCount2].CreatedAt = functionalities5.CreatedAt
				r.Functionalities[functionalitiesCount2].Description = functionalities5.Description
				r.Functionalities[functionalitiesCount2].ExternalResources = functionalities5.ExternalResources
				r.Functionalities[functionalitiesCount2].ID = functionalities5.ID
				r.Functionalities[functionalitiesCount2].Labels = functionalities5.Labels
				r.Functionalities[functionalitiesCount2].Links = functionalities5.Links
				r.Functionalities[functionalitiesCount2].Name = functionalities5.Name
				r.Functionalities[functionalitiesCount2].Owner = functionalities5.Owner
				r.Functionalities[functionalitiesCount2].Slug = functionalities5.Slug
				r.Functionalities[functionalitiesCount2].UpdatedAt = functionalities5.UpdatedAt
				r.Functionalities[functionalitiesCount2].UpdatedBy = functionalities5.UpdatedBy
			}
		}
		r.ID = types.StringPointerValue(resp.ID)
		if len(resp.Labels) > 0 {
			r.Labels = make(map[string]types.String)
			for key4, value7 := range resp.Labels {
				r.Labels[key4] = types.StringValue(value7)
			}
		}
		if resp.LastImport == nil {
			r.LastImport = nil
		} else {
			r.LastImport = &tfTypes.ImportsImportableResourceEntity{}
			r.LastImport.ImportErrors = []tfTypes.ImportsImportErrorEntity{}
			if len(r.LastImport.ImportErrors) > len(resp.LastImport.ImportErrors) {
				r.LastImport.ImportErrors = r.LastImport.ImportErrors[:len(resp.LastImport.ImportErrors)]
			}
			for importErrorsCount, importErrorsItem := range resp.LastImport.ImportErrors {
				var importErrors1 tfTypes.ImportsImportErrorEntity
				if importErrorsItem.CreatedAt != nil {
					importErrors1.CreatedAt = types.StringValue(importErrorsItem.CreatedAt.Format(time.RFC3339Nano))
				} else {
					importErrors1.CreatedAt = types.StringNull()
				}
				if importErrorsItem.Data == nil {
					importErrors1.Data = nil
				} else {
					importErrors1.Data = &tfTypes.TeamEntity1{}
				}
				importErrors1.ID = types.StringPointerValue(importErrorsItem.ID)
				importErrors1.Message = types.StringPointerValue(importErrorsItem.Message)
				if importErrorsItem.Resource == nil {
					importErrors1.Resource = nil
				} else {
					importErrors1.Resource = &tfTypes.ImportsImportErrorEntityResourceEntity{}
					importErrors1.Resource.Name = types.StringPointerValue(importErrorsItem.Resource.Name)
					importErrors1.Resource.ResourceID = types.StringPointerValue(importErrorsItem.Resource.ResourceID)
					importErrors1.Resource.ResourceType = types.StringPointerValue(importErrorsItem.Resource.ResourceType)
				}
				if importErrorsCount+1 > len(r.LastImport.ImportErrors) {
					r.LastImport.ImportErrors = append(r.LastImport.ImportErrors, importErrors1)
				} else {
					r.LastImport.ImportErrors[importErrorsCount].CreatedAt = importErrors1.CreatedAt
					r.LastImport.ImportErrors[importErrorsCount].Data = importErrors1.Data
					r.LastImport.ImportErrors[importErrorsCount].ID = importErrors1.ID
					r.LastImport.ImportErrors[importErrorsCount].Message = importErrors1.Message
					r.LastImport.ImportErrors[importErrorsCount].Resource = importErrors1.Resource
				}
			}
			if resp.LastImport.ImportedAt != nil {
				r.LastImport.ImportedAt = types.StringValue(resp.LastImport.ImportedAt.Format(time.RFC3339Nano))
			} else {
				r.LastImport.ImportedAt = types.StringNull()
			}
			r.LastImport.RemoteID = types.StringPointerValue(resp.LastImport.RemoteID)
			if resp.LastImport.State != nil {
				r.LastImport.State = types.StringValue(string(*resp.LastImport.State))
			} else {
				r.LastImport.State = types.StringNull()
			}
		}
		r.Links = []tfTypes.LinksEntity{}
		if len(r.Links) > len(resp.Links) {
			r.Links = r.Links[:len(resp.Links)]
		}
		for linksCount3, linksItem3 := range resp.Links {
			var links7 tfTypes.LinksEntity
			links7.HrefURL = types.StringPointerValue(linksItem3.HrefURL)
			links7.IconURL = types.StringPointerValue(linksItem3.IconURL)
			links7.ID = types.StringPointerValue(linksItem3.ID)
			links7.Name = types.StringPointerValue(linksItem3.Name)
			if linksCount3+1 > len(r.Links) {
				r.Links = append(r.Links, links7)
			} else {
				r.Links[linksCount3].HrefURL = links7.HrefURL
				r.Links[linksCount3].IconURL = links7.IconURL
				r.Links[linksCount3].ID = links7.ID
				r.Links[linksCount3].Name = links7.Name
			}
		}
		r.ManagedBy = types.StringPointerValue(resp.ManagedBy)
		if resp.ManagedBySettings == nil {
			r.ManagedBySettings = nil
		} else {
			r.ManagedBySettings = &tfTypes.TeamEntity1{}
		}
		r.Name = types.StringPointerValue(resp.Name)
		if resp.Owner == nil {
			r.Owner = nil
		} else {
			r.Owner = &tfTypes.TeamEntity{}
			if resp.Owner.CreatedAt != nil {
				r.Owner.CreatedAt = types.StringValue(resp.Owner.CreatedAt.Format(time.RFC3339Nano))
			} else {
				r.Owner.CreatedAt = types.StringNull()
			}
			if resp.Owner.CreatedBy == nil {
				r.Owner.CreatedBy = nil
			} else {
				r.Owner.CreatedBy = &tfTypes.AuthorEntity{}
				r.Owner.CreatedBy.Email = types.StringPointerValue(resp.Owner.CreatedBy.Email)
				r.Owner.CreatedBy.ID = types.StringPointerValue(resp.Owner.CreatedBy.ID)
				r.Owner.CreatedBy.Name = types.StringPointerValue(resp.Owner.CreatedBy.Name)
				r.Owner.CreatedBy.Source = types.StringPointerValue(resp.Owner.CreatedBy.Source)
			}
			r.Owner.Description = types.StringPointerValue(resp.Owner.Description)
			r.Owner.Functionalities = []tfTypes.FunctionalityEntity{}
			if len(r.Owner.Functionalities) > len(resp.Owner.Functionalities) {
				r.Owner.Functionalities = r.Owner.Functionalities[:len(resp.Owner.Functionalities)]
			}
			for functionalitiesCount3, functionalitiesItem3 := range resp.Owner.Functionalities {
				var functionalities7 tfTypes.FunctionalityEntity
				functionalities7.ActiveIncidents = []types.String{}
				for _, v := range functionalitiesItem3.ActiveIncidents {
					functionalities7.ActiveIncidents = append(functionalities7.ActiveIncidents, types.StringValue(v))
				}
				functionalities7.AlertOnAdd = types.BoolPointerValue(functionalitiesItem3.AlertOnAdd)
				functionalities7.AutoAddRespondingTeam = types.BoolPointerValue(functionalitiesItem3.AutoAddRespondingTeam)
				if functionalitiesItem3.CreatedAt != nil {
					functionalities7.CreatedAt = types.StringValue(functionalitiesItem3.CreatedAt.Format(time.RFC3339Nano))
				} else {
					functionalities7.CreatedAt = types.StringNull()
				}
				functionalities7.Description = types.StringPointerValue(functionalitiesItem3.Description)
				functionalities7.ExternalResources = []tfTypes.ExternalResourceEntity{}
				for externalResourcesCount4, externalResourcesItem4 := range functionalitiesItem3.ExternalResources {
					var externalResources9 tfTypes.ExternalResourceEntity
					externalResources9.ConnectionID = types.StringPointerValue(externalResourcesItem4.ConnectionID)
					externalResources9.ConnectionName = types.StringPointerValue(externalResourcesItem4.ConnectionName)
					externalResources9.ConnectionType = types.StringPointerValue(externalResourcesItem4.ConnectionType)
					if externalResourcesItem4.CreatedAt != nil {
						externalResources9.CreatedAt = types.StringValue(externalResourcesItem4.CreatedAt.Format(time.RFC3339Nano))
					} else {
						externalResources9.CreatedAt = types.StringNull()
					}
					externalResources9.Name = types.StringPointerValue(externalResourcesItem4.Name)
					externalResources9.RemoteID = types.StringPointerValue(externalResourcesItem4.RemoteID)
					externalResources9.RemoteURL = types.StringPointerValue(externalResourcesItem4.RemoteURL)
					if externalResourcesItem4.UpdatedAt != nil {
						externalResources9.UpdatedAt = types.StringValue(externalResourcesItem4.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						externalResources9.UpdatedAt = types.StringNull()
					}
					if externalResourcesCount4+1 > len(functionalities7.ExternalResources) {
						functionalities7.ExternalResources = append(functionalities7.ExternalResources, externalResources9)
					} else {
						functionalities7.ExternalResources[externalResourcesCount4].ConnectionID = externalResources9.ConnectionID
						functionalities7.ExternalResources[externalResourcesCount4].ConnectionName = externalResources9.ConnectionName
						functionalities7.ExternalResources[externalResourcesCount4].ConnectionType = externalResources9.ConnectionType
						functionalities7.ExternalResources[externalResourcesCount4].CreatedAt = externalResources9.CreatedAt
						functionalities7.ExternalResources[externalResourcesCount4].Name = externalResources9.Name
						functionalities7.ExternalResources[externalResourcesCount4].RemoteID = externalResources9.RemoteID
						functionalities7.ExternalResources[externalResourcesCount4].RemoteURL = externalResources9.RemoteURL
						functionalities7.ExternalResources[externalResourcesCount4].UpdatedAt = externalResources9.UpdatedAt
					}
				}
				functionalities7.ID = types.StringPointerValue(functionalitiesItem3.ID)
				if len(functionalitiesItem3.Labels) > 0 {
					functionalities7.Labels = make(map[string]types.String)
					for key5, value8 := range functionalitiesItem3.Labels {
						functionalities7.Labels[key5] = types.StringValue(value8)
					}
				}
				functionalities7.Links = []tfTypes.LinksEntity{}
				for linksCount4, linksItem4 := range functionalitiesItem3.Links {
					var links9 tfTypes.LinksEntity
					links9.HrefURL = types.StringPointerValue(linksItem4.HrefURL)
					links9.IconURL = types.StringPointerValue(linksItem4.IconURL)
					links9.ID = types.StringPointerValue(linksItem4.ID)
					links9.Name = types.StringPointerValue(linksItem4.Name)
					if linksCount4+1 > len(functionalities7.Links) {
						functionalities7.Links = append(functionalities7.Links, links9)
					} else {
						functionalities7.Links[linksCount4].HrefURL = links9.HrefURL
						functionalities7.Links[linksCount4].IconURL = links9.IconURL
						functionalities7.Links[linksCount4].ID = links9.ID
						functionalities7.Links[linksCount4].Name = links9.Name
					}
				}
				functionalities7.Name = types.StringPointerValue(functionalitiesItem3.Name)
				if functionalitiesItem3.Owner == nil {
					functionalities7.Owner = nil
				} else {
					functionalities7.Owner = &tfTypes.TeamEntity1{}
				}
				functionalities7.Slug = types.StringPointerValue(functionalitiesItem3.Slug)
				if functionalitiesItem3.UpdatedAt != nil {
					functionalities7.UpdatedAt = types.StringValue(functionalitiesItem3.UpdatedAt.Format(time.RFC3339Nano))
				} else {
					functionalities7.UpdatedAt = types.StringNull()
				}
				if functionalitiesItem3.UpdatedBy == nil {
					functionalities7.UpdatedBy = nil
				} else {
					functionalities7.UpdatedBy = &tfTypes.AuthorEntity{}
					functionalities7.UpdatedBy.Email = types.StringPointerValue(functionalitiesItem3.UpdatedBy.Email)
					functionalities7.UpdatedBy.ID = types.StringPointerValue(functionalitiesItem3.UpdatedBy.ID)
					functionalities7.UpdatedBy.Name = types.StringPointerValue(functionalitiesItem3.UpdatedBy.Name)
					functionalities7.UpdatedBy.Source = types.StringPointerValue(functionalitiesItem3.UpdatedBy.Source)
				}
				if functionalitiesCount3+1 > len(r.Owner.Functionalities) {
					r.Owner.Functionalities = append(r.Owner.Functionalities, functionalities7)
				} else {
					r.Owner.Functionalities[functionalitiesCount3].ActiveIncidents = functionalities7.ActiveIncidents
					r.Owner.Functionalities[functionalitiesCount3].AlertOnAdd = functionalities7.AlertOnAdd
					r.Owner.Functionalities[functionalitiesCount3].AutoAddRespondingTeam = functionalities7.AutoAddRespondingTeam
					r.Owner.Functionalities[functionalitiesCount3].CreatedAt = functionalities7.CreatedAt
					r.Owner.Functionalities[functionalitiesCount3].Description = functionalities7.Description
					r.Owner.Functionalities[functionalitiesCount3].ExternalResources = functionalities7.ExternalResources
					r.Owner.Functionalities[functionalitiesCount3].ID = functionalities7.ID
					r.Owner.Functionalities[functionalitiesCount3].Labels = functionalities7.Labels
					r.Owner.Functionalities[functionalitiesCount3].Links = functionalities7.Links
					r.Owner.Functionalities[functionalitiesCount3].Name = functionalities7.Name
					r.Owner.Functionalities[functionalitiesCount3].Owner = functionalities7.Owner
					r.Owner.Functionalities[functionalitiesCount3].Slug = functionalities7.Slug
					r.Owner.Functionalities[functionalitiesCount3].UpdatedAt = functionalities7.UpdatedAt
					r.Owner.Functionalities[functionalitiesCount3].UpdatedBy = functionalities7.UpdatedBy
				}
			}
			r.Owner.ID = types.StringPointerValue(resp.Owner.ID)
			r.Owner.Memberships = []tfTypes.MembershipEntity{}
			if len(r.Owner.Memberships) > len(resp.Owner.Memberships) {
				r.Owner.Memberships = r.Owner.Memberships[:len(resp.Owner.Memberships)]
			}
			for membershipsCount1, membershipsItem1 := range resp.Owner.Memberships {
				var memberships3 tfTypes.MembershipEntity
				if membershipsItem1.DefaultIncidentRole == nil {
					memberships3.DefaultIncidentRole = nil
				} else {
					memberships3.DefaultIncidentRole = &tfTypes.IncidentRoleEntity{}
					if membershipsItem1.DefaultIncidentRole.CreatedAt != nil {
						memberships3.DefaultIncidentRole.CreatedAt = types.StringValue(membershipsItem1.DefaultIncidentRole.CreatedAt.Format(time.RFC3339Nano))
					} else {
						memberships3.DefaultIncidentRole.CreatedAt = types.StringNull()
					}
					memberships3.DefaultIncidentRole.Description = types.StringPointerValue(membershipsItem1.DefaultIncidentRole.Description)
					if membershipsItem1.DefaultIncidentRole.DiscardedAt != nil {
						memberships3.DefaultIncidentRole.DiscardedAt = types.StringValue(membershipsItem1.DefaultIncidentRole.DiscardedAt.Format(time.RFC3339Nano))
					} else {
						memberships3.DefaultIncidentRole.DiscardedAt = types.StringNull()
					}
					memberships3.DefaultIncidentRole.ID = types.StringPointerValue(membershipsItem1.DefaultIncidentRole.ID)
					memberships3.DefaultIncidentRole.Name = types.StringPointerValue(membershipsItem1.DefaultIncidentRole.Name)
					memberships3.DefaultIncidentRole.Summary = types.StringPointerValue(membershipsItem1.DefaultIncidentRole.Summary)
					if membershipsItem1.DefaultIncidentRole.UpdatedAt != nil {
						memberships3.DefaultIncidentRole.UpdatedAt = types.StringValue(membershipsItem1.DefaultIncidentRole.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						memberships3.DefaultIncidentRole.UpdatedAt = types.StringNull()
					}
				}
				if membershipsItem1.Schedule == nil {
					memberships3.Schedule = nil
				} else {
					memberships3.Schedule = &tfTypes.ScheduleEntity{}
					memberships3.Schedule.Discarded = types.BoolPointerValue(membershipsItem1.Schedule.Discarded)
					memberships3.Schedule.ID = types.StringPointerValue(membershipsItem1.Schedule.ID)
					memberships3.Schedule.Integration = types.StringPointerValue(membershipsItem1.Schedule.Integration)
					memberships3.Schedule.Name = types.StringPointerValue(membershipsItem1.Schedule.Name)
				}
				if membershipsItem1.User == nil {
					memberships3.User = nil
				} else {
					memberships3.User = &tfTypes.UserEntity{}
					if membershipsItem1.User.CreatedAt != nil {
						memberships3.User.CreatedAt = types.StringValue(membershipsItem1.User.CreatedAt.Format(time.RFC3339Nano))
					} else {
						memberships3.User.CreatedAt = types.StringNull()
					}
					memberships3.User.Email = types.StringPointerValue(membershipsItem1.User.Email)
					memberships3.User.ID = types.StringPointerValue(membershipsItem1.User.ID)
					memberships3.User.Name = types.StringPointerValue(membershipsItem1.User.Name)
					memberships3.User.SignalsEnabledNotificationTypes = []types.String{}
					for _, v := range membershipsItem1.User.SignalsEnabledNotificationTypes {
						memberships3.User.SignalsEnabledNotificationTypes = append(memberships3.User.SignalsEnabledNotificationTypes, types.StringValue(v))
					}
					memberships3.User.SlackLinked = types.BoolPointerValue(membershipsItem1.User.SlackLinked)
					memberships3.User.SlackUserID = types.StringPointerValue(membershipsItem1.User.SlackUserID)
					if membershipsItem1.User.UpdatedAt != nil {
						memberships3.User.UpdatedAt = types.StringValue(membershipsItem1.User.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						memberships3.User.UpdatedAt = types.StringNull()
					}
				}
				if membershipsCount1+1 > len(r.Owner.Memberships) {
					r.Owner.Memberships = append(r.Owner.Memberships, memberships3)
				} else {
					r.Owner.Memberships[membershipsCount1].DefaultIncidentRole = memberships3.DefaultIncidentRole
					r.Owner.Memberships[membershipsCount1].Schedule = memberships3.Schedule
					r.Owner.Memberships[membershipsCount1].User = memberships3.User
				}
			}
			if resp.Owner.MsTeamsChannel == nil {
				r.Owner.MsTeamsChannel = nil
			} else {
				r.Owner.MsTeamsChannel = &tfTypes.IntegrationsMicrosoftTeamsV2ChannelEntity{}
				r.Owner.MsTeamsChannel.ChannelID = types.StringPointerValue(resp.Owner.MsTeamsChannel.ChannelID)
				r.Owner.MsTeamsChannel.ChannelName = types.StringPointerValue(resp.Owner.MsTeamsChannel.ChannelName)
				r.Owner.MsTeamsChannel.ChannelURL = types.StringPointerValue(resp.Owner.MsTeamsChannel.ChannelURL)
				r.Owner.MsTeamsChannel.ID = types.StringPointerValue(resp.Owner.MsTeamsChannel.ID)
				if resp.Owner.MsTeamsChannel.Incident == nil {
					r.Owner.MsTeamsChannel.Incident = nil
				} else {
					r.Owner.MsTeamsChannel.Incident = &tfTypes.IncidentEntity{}
					r.Owner.MsTeamsChannel.Incident.Active = types.BoolPointerValue(resp.Owner.MsTeamsChannel.Incident.Active)
					r.Owner.MsTeamsChannel.Incident.AiIncidentSummary = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.AiIncidentSummary)
					r.Owner.MsTeamsChannel.Incident.ChannelID = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.ChannelID)
					r.Owner.MsTeamsChannel.Incident.ChannelName = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.ChannelName)
					r.Owner.MsTeamsChannel.Incident.ChannelReference = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.ChannelReference)
					r.Owner.MsTeamsChannel.Incident.ChannelStatus = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.ChannelStatus)
					r.Owner.MsTeamsChannel.Incident.ConferenceBridges = []tfTypes.IncidentsConferenceBridgeEntity{}
					if len(r.Owner.MsTeamsChannel.Incident.ConferenceBridges) > len(resp.Owner.MsTeamsChannel.Incident.ConferenceBridges) {
						r.Owner.MsTeamsChannel.Incident.ConferenceBridges = r.Owner.MsTeamsChannel.Incident.ConferenceBridges[:len(resp.Owner.MsTeamsChannel.Incident.ConferenceBridges)]
					}
					for conferenceBridgesCount1, conferenceBridgesItem1 := range resp.Owner.MsTeamsChannel.Incident.ConferenceBridges {
						var conferenceBridges3 tfTypes.IncidentsConferenceBridgeEntity
						conferenceBridges3.ID = types.StringPointerValue(conferenceBridgesItem1.ID)
						if conferenceBridgesCount1+1 > len(r.Owner.MsTeamsChannel.Incident.ConferenceBridges) {
							r.Owner.MsTeamsChannel.Incident.ConferenceBridges = append(r.Owner.MsTeamsChannel.Incident.ConferenceBridges, conferenceBridges3)
						} else {
							r.Owner.MsTeamsChannel.Incident.ConferenceBridges[conferenceBridgesCount1].ID = conferenceBridges3.ID
						}
					}
					if resp.Owner.MsTeamsChannel.Incident.ContextObject == nil {
						r.Owner.MsTeamsChannel.Incident.ContextObject = nil
					} else {
						r.Owner.MsTeamsChannel.Incident.ContextObject = &tfTypes.IncidentsContextObjectEntity{}
						r.Owner.MsTeamsChannel.Incident.ContextObject.ContextDescription = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.ContextObject.ContextDescription)
						r.Owner.MsTeamsChannel.Incident.ContextObject.ContextTag = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.ContextObject.ContextTag)
						r.Owner.MsTeamsChannel.Incident.ContextObject.ObjectID = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.ContextObject.ObjectID)
						r.Owner.MsTeamsChannel.Incident.ContextObject.ObjectType = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.ContextObject.ObjectType)
					}
					r.Owner.MsTeamsChannel.Incident.Conversations = []tfTypes.ConversationsAPIEntitiesReference{}
					if len(r.Owner.MsTeamsChannel.Incident.Conversations) > len(resp.Owner.MsTeamsChannel.Incident.Conversations) {
						r.Owner.MsTeamsChannel.Incident.Conversations = r.Owner.MsTeamsChannel.Incident.Conversations[:len(resp.Owner.MsTeamsChannel.Incident.Conversations)]
					}
					for conversationsCount3, conversationsItem3 := range resp.Owner.MsTeamsChannel.Incident.Conversations {
						var conversations7 tfTypes.ConversationsAPIEntitiesReference
						if conversationsItem3.Channel == nil {
							conversations7.Channel = nil
						} else {
							conversations7.Channel = &tfTypes.ConversationsAPIEntitiesChannel{}
							conversations7.Channel.Name = types.StringPointerValue(conversationsItem3.Channel.Name)
						}
						conversations7.CommentsURL = types.StringPointerValue(conversationsItem3.CommentsURL)
						conversations7.Field = types.StringPointerValue(conversationsItem3.Field)
						conversations7.ID = types.StringPointerValue(conversationsItem3.ID)
						conversations7.ResourceClass = types.StringPointerValue(conversationsItem3.ResourceClass)
						conversations7.ResourceID = types.StringPointerValue(conversationsItem3.ResourceID)
						if conversationsCount3+1 > len(r.Owner.MsTeamsChannel.Incident.Conversations) {
							r.Owner.MsTeamsChannel.Incident.Conversations = append(r.Owner.MsTeamsChannel.Incident.Conversations, conversations7)
						} else {
							r.Owner.MsTeamsChannel.Incident.Conversations[conversationsCount3].Channel = conversations7.Channel
							r.Owner.MsTeamsChannel.Incident.Conversations[conversationsCount3].CommentsURL = conversations7.CommentsURL
							r.Owner.MsTeamsChannel.Incident.Conversations[conversationsCount3].Field = conversations7.Field
							r.Owner.MsTeamsChannel.Incident.Conversations[conversationsCount3].ID = conversations7.ID
							r.Owner.MsTeamsChannel.Incident.Conversations[conversationsCount3].ResourceClass = conversations7.ResourceClass
							r.Owner.MsTeamsChannel.Incident.Conversations[conversationsCount3].ResourceID = conversations7.ResourceID
						}
					}
					if resp.Owner.MsTeamsChannel.Incident.CreatedAt != nil {
						r.Owner.MsTeamsChannel.Incident.CreatedAt = types.StringValue(resp.Owner.MsTeamsChannel.Incident.CreatedAt.Format(time.RFC3339Nano))
					} else {
						r.Owner.MsTeamsChannel.Incident.CreatedAt = types.StringNull()
					}
					if resp.Owner.MsTeamsChannel.Incident.CreatedBy == nil {
						r.Owner.MsTeamsChannel.Incident.CreatedBy = nil
					} else {
						r.Owner.MsTeamsChannel.Incident.CreatedBy = &tfTypes.AuthorEntity{}
						r.Owner.MsTeamsChannel.Incident.CreatedBy.Email = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.CreatedBy.Email)
						r.Owner.MsTeamsChannel.Incident.CreatedBy.ID = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.CreatedBy.ID)
						r.Owner.MsTeamsChannel.Incident.CreatedBy.Name = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.CreatedBy.Name)
						r.Owner.MsTeamsChannel.Incident.CreatedBy.Source = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.CreatedBy.Source)
					}
					r.Owner.MsTeamsChannel.Incident.CurrentMilestone = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.CurrentMilestone)
					r.Owner.MsTeamsChannel.Incident.CustomFields = []tfTypes.CustomFieldsFieldValue{}
					if len(r.Owner.MsTeamsChannel.Incident.CustomFields) > len(resp.Owner.MsTeamsChannel.Incident.CustomFields) {
						r.Owner.MsTeamsChannel.Incident.CustomFields = r.Owner.MsTeamsChannel.Incident.CustomFields[:len(resp.Owner.MsTeamsChannel.Incident.CustomFields)]
					}
					for customFieldsCount1, customFieldsItem1 := range resp.Owner.MsTeamsChannel.Incident.CustomFields {
						var customFields3 tfTypes.CustomFieldsFieldValue
						customFields3.Description = types.StringPointerValue(customFieldsItem1.Description)
						customFields3.DisplayName = types.StringPointerValue(customFieldsItem1.DisplayName)
						customFields3.FieldID = types.StringPointerValue(customFieldsItem1.FieldID)
						customFields3.Name = types.StringPointerValue(customFieldsItem1.Name)
						customFields3.Slug = types.StringPointerValue(customFieldsItem1.Slug)
						customFields3.Value = types.StringPointerValue(customFieldsItem1.Value)
						customFields3.ValueArray = types.StringPointerValue(customFieldsItem1.ValueArray)
						customFields3.ValueString = types.StringPointerValue(customFieldsItem1.ValueString)
						customFields3.ValueType = types.StringPointerValue(customFieldsItem1.ValueType)
						if customFieldsCount1+1 > len(r.Owner.MsTeamsChannel.Incident.CustomFields) {
							r.Owner.MsTeamsChannel.Incident.CustomFields = append(r.Owner.MsTeamsChannel.Incident.CustomFields, customFields3)
						} else {
							r.Owner.MsTeamsChannel.Incident.CustomFields[customFieldsCount1].Description = customFields3.Description
							r.Owner.MsTeamsChannel.Incident.CustomFields[customFieldsCount1].DisplayName = customFields3.DisplayName
							r.Owner.MsTeamsChannel.Incident.CustomFields[customFieldsCount1].FieldID = customFields3.FieldID
							r.Owner.MsTeamsChannel.Incident.CustomFields[customFieldsCount1].Name = customFields3.Name
							r.Owner.MsTeamsChannel.Incident.CustomFields[customFieldsCount1].Slug = customFields3.Slug
							r.Owner.MsTeamsChannel.Incident.CustomFields[customFieldsCount1].Value = customFields3.Value
							r.Owner.MsTeamsChannel.Incident.CustomFields[customFieldsCount1].ValueArray = customFields3.ValueArray
							r.Owner.MsTeamsChannel.Incident.CustomFields[customFieldsCount1].ValueString = customFields3.ValueString
							r.Owner.MsTeamsChannel.Incident.CustomFields[customFieldsCount1].ValueType = customFields3.ValueType
						}
					}
					r.Owner.MsTeamsChannel.Incident.CustomerImpactSummary = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.CustomerImpactSummary)
					if resp.Owner.MsTeamsChannel.Incident.CustomersImpacted != nil {
						r.Owner.MsTeamsChannel.Incident.CustomersImpacted = types.Int64Value(int64(*resp.Owner.MsTeamsChannel.Incident.CustomersImpacted))
					} else {
						r.Owner.MsTeamsChannel.Incident.CustomersImpacted = types.Int64Null()
					}
					r.Owner.MsTeamsChannel.Incident.Description = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Description)
					if resp.Owner.MsTeamsChannel.Incident.DiscardedAt != nil {
						r.Owner.MsTeamsChannel.Incident.DiscardedAt = types.StringValue(resp.Owner.MsTeamsChannel.Incident.DiscardedAt.Format(time.RFC3339Nano))
					} else {
						r.Owner.MsTeamsChannel.Incident.DiscardedAt = types.StringNull()
					}
					r.Owner.MsTeamsChannel.Incident.Environments = []tfTypes.SuccinctEntity{}
					if len(r.Owner.MsTeamsChannel.Incident.Environments) > len(resp.Owner.MsTeamsChannel.Incident.Environments) {
						r.Owner.MsTeamsChannel.Incident.Environments = r.Owner.MsTeamsChannel.Incident.Environments[:len(resp.Owner.MsTeamsChannel.Incident.Environments)]
					}
					for environmentsCount1, environmentsItem1 := range resp.Owner.MsTeamsChannel.Incident.Environments {
						var environments3 tfTypes.SuccinctEntity
						environments3.ID = types.StringPointerValue(environmentsItem1.ID)
						environments3.Name = types.StringPointerValue(environmentsItem1.Name)
						if environmentsCount1+1 > len(r.Owner.MsTeamsChannel.Incident.Environments) {
							r.Owner.MsTeamsChannel.Incident.Environments = append(r.Owner.MsTeamsChannel.Incident.Environments, environments3)
						} else {
							r.Owner.MsTeamsChannel.Incident.Environments[environmentsCount1].ID = environments3.ID
							r.Owner.MsTeamsChannel.Incident.Environments[environmentsCount1].Name = environments3.Name
						}
					}
					r.Owner.MsTeamsChannel.Incident.FieldRequirements = []tfTypes.IncidentEntityFieldRequirementEntity{}
					if len(r.Owner.MsTeamsChannel.Incident.FieldRequirements) > len(resp.Owner.MsTeamsChannel.Incident.FieldRequirements) {
						r.Owner.MsTeamsChannel.Incident.FieldRequirements = r.Owner.MsTeamsChannel.Incident.FieldRequirements[:len(resp.Owner.MsTeamsChannel.Incident.FieldRequirements)]
					}
					for fieldRequirementsCount1, fieldRequirementsItem1 := range resp.Owner.MsTeamsChannel.Incident.FieldRequirements {
						var fieldRequirements3 tfTypes.IncidentEntityFieldRequirementEntity
						fieldRequirements3.FieldID = types.StringPointerValue(fieldRequirementsItem1.FieldID)
						fieldRequirements3.RequiredAtMilestoneID = types.StringPointerValue(fieldRequirementsItem1.RequiredAtMilestoneID)
						if fieldRequirementsCount1+1 > len(r.Owner.MsTeamsChannel.Incident.FieldRequirements) {
							r.Owner.MsTeamsChannel.Incident.FieldRequirements = append(r.Owner.MsTeamsChannel.Incident.FieldRequirements, fieldRequirements3)
						} else {
							r.Owner.MsTeamsChannel.Incident.FieldRequirements[fieldRequirementsCount1].FieldID = fieldRequirements3.FieldID
							r.Owner.MsTeamsChannel.Incident.FieldRequirements[fieldRequirementsCount1].RequiredAtMilestoneID = fieldRequirements3.RequiredAtMilestoneID
						}
					}
					r.Owner.MsTeamsChannel.Incident.Functionalities = []tfTypes.SuccinctEntity{}
					if len(r.Owner.MsTeamsChannel.Incident.Functionalities) > len(resp.Owner.MsTeamsChannel.Incident.Functionalities) {
						r.Owner.MsTeamsChannel.Incident.Functionalities = r.Owner.MsTeamsChannel.Incident.Functionalities[:len(resp.Owner.MsTeamsChannel.Incident.Functionalities)]
					}
					for functionalitiesCount4, functionalitiesItem4 := range resp.Owner.MsTeamsChannel.Incident.Functionalities {
						var functionalities9 tfTypes.SuccinctEntity
						functionalities9.ID = types.StringPointerValue(functionalitiesItem4.ID)
						functionalities9.Name = types.StringPointerValue(functionalitiesItem4.Name)
						if functionalitiesCount4+1 > len(r.Owner.MsTeamsChannel.Incident.Functionalities) {
							r.Owner.MsTeamsChannel.Incident.Functionalities = append(r.Owner.MsTeamsChannel.Incident.Functionalities, functionalities9)
						} else {
							r.Owner.MsTeamsChannel.Incident.Functionalities[functionalitiesCount4].ID = functionalities9.ID
							r.Owner.MsTeamsChannel.Incident.Functionalities[functionalitiesCount4].Name = functionalities9.Name
						}
					}
					r.Owner.MsTeamsChannel.Incident.ID = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.ID)
					r.Owner.MsTeamsChannel.Incident.Impacts = []tfTypes.IncidentsImpactEntity{}
					if len(r.Owner.MsTeamsChannel.Incident.Impacts) > len(resp.Owner.MsTeamsChannel.Incident.Impacts) {
						r.Owner.MsTeamsChannel.Incident.Impacts = r.Owner.MsTeamsChannel.Incident.Impacts[:len(resp.Owner.MsTeamsChannel.Incident.Impacts)]
					}
					for impactsCount1, impactsItem1 := range resp.Owner.MsTeamsChannel.Incident.Impacts {
						var impacts3 tfTypes.IncidentsImpactEntity
						if impactsItem1.Condition == nil {
							impacts3.Condition = nil
						} else {
							impacts3.Condition = &tfTypes.SeverityMatrixConditionEntity{}
							impacts3.Condition.ID = types.StringPointerValue(impactsItem1.Condition.ID)
							impacts3.Condition.Name = types.StringPointerValue(impactsItem1.Condition.Name)
							if impactsItem1.Condition.Position != nil {
								impacts3.Condition.Position = types.Int64Value(int64(*impactsItem1.Condition.Position))
							} else {
								impacts3.Condition.Position = types.Int64Null()
							}
						}
						impacts3.Conversations = []tfTypes.ConversationsAPIEntitiesReference{}
						for conversationsCount4, conversationsItem4 := range impactsItem1.Conversations {
							var conversations9 tfTypes.ConversationsAPIEntitiesReference
							if conversationsItem4.Channel == nil {
								conversations9.Channel = nil
							} else {
								conversations9.Channel = &tfTypes.ConversationsAPIEntitiesChannel{}
								conversations9.Channel.Name = types.StringPointerValue(conversationsItem4.Channel.Name)
							}
							conversations9.CommentsURL = types.StringPointerValue(conversationsItem4.CommentsURL)
							conversations9.Field = types.StringPointerValue(conversationsItem4.Field)
							conversations9.ID = types.StringPointerValue(conversationsItem4.ID)
							conversations9.ResourceClass = types.StringPointerValue(conversationsItem4.ResourceClass)
							conversations9.ResourceID = types.StringPointerValue(conversationsItem4.ResourceID)
							if conversationsCount4+1 > len(impacts3.Conversations) {
								impacts3.Conversations = append(impacts3.Conversations, conversations9)
							} else {
								impacts3.Conversations[conversationsCount4].Channel = conversations9.Channel
								impacts3.Conversations[conversationsCount4].CommentsURL = conversations9.CommentsURL
								impacts3.Conversations[conversationsCount4].Field = conversations9.Field
								impacts3.Conversations[conversationsCount4].ID = conversations9.ID
								impacts3.Conversations[conversationsCount4].ResourceClass = conversations9.ResourceClass
								impacts3.Conversations[conversationsCount4].ResourceID = conversations9.ResourceID
							}
						}
						impacts3.ID = types.StringPointerValue(impactsItem1.ID)
						if impactsItem1.Impact == nil {
							impacts3.Impact = nil
						} else {
							impacts3.Impact = &tfTypes.SuccinctEntity{}
							impacts3.Impact.ID = types.StringPointerValue(impactsItem1.Impact.ID)
							impacts3.Impact.Name = types.StringPointerValue(impactsItem1.Impact.Name)
						}
						if impactsItem1.Type != nil {
							impacts3.Type = types.StringValue(string(*impactsItem1.Type))
						} else {
							impacts3.Type = types.StringNull()
						}
						if impactsCount1+1 > len(r.Owner.MsTeamsChannel.Incident.Impacts) {
							r.Owner.MsTeamsChannel.Incident.Impacts = append(r.Owner.MsTeamsChannel.Incident.Impacts, impacts3)
						} else {
							r.Owner.MsTeamsChannel.Incident.Impacts[impactsCount1].Condition = impacts3.Condition
							r.Owner.MsTeamsChannel.Incident.Impacts[impactsCount1].Conversations = impacts3.Conversations
							r.Owner.MsTeamsChannel.Incident.Impacts[impactsCount1].ID = impacts3.ID
							r.Owner.MsTeamsChannel.Incident.Impacts[impactsCount1].Impact = impacts3.Impact
							r.Owner.MsTeamsChannel.Incident.Impacts[impactsCount1].Type = impacts3.Type
						}
					}
					r.Owner.MsTeamsChannel.Incident.IncidentChannels = []tfTypes.IncidentsChannelEntity{}
					if len(r.Owner.MsTeamsChannel.Incident.IncidentChannels) > len(resp.Owner.MsTeamsChannel.Incident.IncidentChannels) {
						r.Owner.MsTeamsChannel.Incident.IncidentChannels = r.Owner.MsTeamsChannel.Incident.IncidentChannels[:len(resp.Owner.MsTeamsChannel.Incident.IncidentChannels)]
					}
					for incidentChannelsCount1, incidentChannelsItem1 := range resp.Owner.MsTeamsChannel.Incident.IncidentChannels {
						var incidentChannels3 tfTypes.IncidentsChannelEntity
						incidentChannels3.IconURL = types.StringPointerValue(incidentChannelsItem1.IconURL)
						incidentChannels3.ID = types.StringPointerValue(incidentChannelsItem1.ID)
						incidentChannels3.Name = types.StringPointerValue(incidentChannelsItem1.Name)
						incidentChannels3.Source = types.StringPointerValue(incidentChannelsItem1.Source)
						incidentChannels3.SourceID = types.StringPointerValue(incidentChannelsItem1.SourceID)
						incidentChannels3.SourceName = types.StringPointerValue(incidentChannelsItem1.SourceName)
						incidentChannels3.Status = types.StringPointerValue(incidentChannelsItem1.Status)
						incidentChannels3.URL = types.StringPointerValue(incidentChannelsItem1.URL)
						if incidentChannelsCount1+1 > len(r.Owner.MsTeamsChannel.Incident.IncidentChannels) {
							r.Owner.MsTeamsChannel.Incident.IncidentChannels = append(r.Owner.MsTeamsChannel.Incident.IncidentChannels, incidentChannels3)
						} else {
							r.Owner.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount1].IconURL = incidentChannels3.IconURL
							r.Owner.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount1].ID = incidentChannels3.ID
							r.Owner.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount1].Name = incidentChannels3.Name
							r.Owner.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount1].Source = incidentChannels3.Source
							r.Owner.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount1].SourceID = incidentChannels3.SourceID
							r.Owner.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount1].SourceName = incidentChannels3.SourceName
							r.Owner.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount1].Status = incidentChannels3.Status
							r.Owner.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount1].URL = incidentChannels3.URL
						}
					}
					r.Owner.MsTeamsChannel.Incident.IncidentTickets = []tfTypes.TicketingTicketEntity{}
					if len(r.Owner.MsTeamsChannel.Incident.IncidentTickets) > len(resp.Owner.MsTeamsChannel.Incident.IncidentTickets) {
						r.Owner.MsTeamsChannel.Incident.IncidentTickets = r.Owner.MsTeamsChannel.Incident.IncidentTickets[:len(resp.Owner.MsTeamsChannel.Incident.IncidentTickets)]
					}
					for incidentTicketsCount1, incidentTicketsItem1 := range resp.Owner.MsTeamsChannel.Incident.IncidentTickets {
						var incidentTickets3 tfTypes.TicketingTicketEntity
						incidentTickets3.Assignees = []tfTypes.AuthorEntity{}
						for assigneesCount2, assigneesItem2 := range incidentTicketsItem1.Assignees {
							var assignees5 tfTypes.AuthorEntity
							assignees5.Email = types.StringPointerValue(assigneesItem2.Email)
							assignees5.ID = types.StringPointerValue(assigneesItem2.ID)
							assignees5.Name = types.StringPointerValue(assigneesItem2.Name)
							assignees5.Source = types.StringPointerValue(assigneesItem2.Source)
							if assigneesCount2+1 > len(incidentTickets3.Assignees) {
								incidentTickets3.Assignees = append(incidentTickets3.Assignees, assignees5)
							} else {
								incidentTickets3.Assignees[assigneesCount2].Email = assignees5.Email
								incidentTickets3.Assignees[assigneesCount2].ID = assignees5.ID
								incidentTickets3.Assignees[assigneesCount2].Name = assignees5.Name
								incidentTickets3.Assignees[assigneesCount2].Source = assignees5.Source
							}
						}
						if incidentTicketsItem1.CreatedAt != nil {
							incidentTickets3.CreatedAt = types.StringValue(incidentTicketsItem1.CreatedAt.Format(time.RFC3339Nano))
						} else {
							incidentTickets3.CreatedAt = types.StringNull()
						}
						if incidentTicketsItem1.CreatedBy == nil {
							incidentTickets3.CreatedBy = nil
						} else {
							incidentTickets3.CreatedBy = &tfTypes.AuthorEntity{}
							incidentTickets3.CreatedBy.Email = types.StringPointerValue(incidentTicketsItem1.CreatedBy.Email)
							incidentTickets3.CreatedBy.ID = types.StringPointerValue(incidentTicketsItem1.CreatedBy.ID)
							incidentTickets3.CreatedBy.Name = types.StringPointerValue(incidentTicketsItem1.CreatedBy.Name)
							incidentTickets3.CreatedBy.Source = types.StringPointerValue(incidentTicketsItem1.CreatedBy.Source)
						}
						incidentTickets3.Description = types.StringPointerValue(incidentTicketsItem1.Description)
						if incidentTicketsItem1.DueAt != nil {
							incidentTickets3.DueAt = types.StringValue(incidentTicketsItem1.DueAt.Format(time.RFC3339Nano))
						} else {
							incidentTickets3.DueAt = types.StringNull()
						}
						incidentTickets3.ID = types.StringPointerValue(incidentTicketsItem1.ID)
						incidentTickets3.IncidentCurrentMilestone = types.StringPointerValue(incidentTicketsItem1.IncidentCurrentMilestone)
						incidentTickets3.IncidentID = types.StringPointerValue(incidentTicketsItem1.IncidentID)
						incidentTickets3.IncidentName = types.StringPointerValue(incidentTicketsItem1.IncidentName)
						if incidentTicketsItem1.Link == nil {
							incidentTickets3.Link = nil
						} else {
							incidentTickets3.Link = &tfTypes.AttachmentsLinkEntity{}
							incidentTickets3.Link.Deletable = types.BoolPointerValue(incidentTicketsItem1.Link.Deletable)
							incidentTickets3.Link.DisplayText = types.StringPointerValue(incidentTicketsItem1.Link.DisplayText)
							incidentTickets3.Link.Editable = types.BoolPointerValue(incidentTicketsItem1.Link.Editable)
							incidentTickets3.Link.HrefURL = types.StringPointerValue(incidentTicketsItem1.Link.HrefURL)
							incidentTickets3.Link.IconURL = types.StringPointerValue(incidentTicketsItem1.Link.IconURL)
							incidentTickets3.Link.ID = types.StringPointerValue(incidentTicketsItem1.Link.ID)
							incidentTickets3.Link.Type = types.StringPointerValue(incidentTicketsItem1.Link.Type)
						}
						if incidentTicketsItem1.Priority == nil {
							incidentTickets3.Priority = nil
						} else {
							incidentTickets3.Priority = &tfTypes.TicketingPriorityEntity{}
							if incidentTicketsItem1.Priority.CreatedAt != nil {
								incidentTickets3.Priority.CreatedAt = types.StringValue(incidentTicketsItem1.Priority.CreatedAt.Format(time.RFC3339Nano))
							} else {
								incidentTickets3.Priority.CreatedAt = types.StringNull()
							}
							incidentTickets3.Priority.ID = types.StringPointerValue(incidentTicketsItem1.Priority.ID)
							incidentTickets3.Priority.Name = types.StringPointerValue(incidentTicketsItem1.Priority.Name)
							if incidentTicketsItem1.Priority.Position != nil {
								incidentTickets3.Priority.Position = types.Int64Value(int64(*incidentTicketsItem1.Priority.Position))
							} else {
								incidentTickets3.Priority.Position = types.Int64Null()
							}
							if incidentTicketsItem1.Priority.UpdatedAt != nil {
								incidentTickets3.Priority.UpdatedAt = types.StringValue(incidentTicketsItem1.Priority.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								incidentTickets3.Priority.UpdatedAt = types.StringNull()
							}
						}
						if incidentTicketsItem1.State != nil {
							incidentTickets3.State = types.StringValue(string(*incidentTicketsItem1.State))
						} else {
							incidentTickets3.State = types.StringNull()
						}
						incidentTickets3.Summary = types.StringPointerValue(incidentTicketsItem1.Summary)
						incidentTickets3.TagList = []types.String{}
						for _, v := range incidentTicketsItem1.TagList {
							incidentTickets3.TagList = append(incidentTickets3.TagList, types.StringValue(v))
						}
						incidentTickets3.TaskID = types.StringPointerValue(incidentTicketsItem1.TaskID)
						if incidentTicketsItem1.Type != nil {
							incidentTickets3.Type = types.StringValue(string(*incidentTicketsItem1.Type))
						} else {
							incidentTickets3.Type = types.StringNull()
						}
						if incidentTicketsItem1.UpdatedAt != nil {
							incidentTickets3.UpdatedAt = types.StringValue(incidentTicketsItem1.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							incidentTickets3.UpdatedAt = types.StringNull()
						}
						if incidentTicketsCount1+1 > len(r.Owner.MsTeamsChannel.Incident.IncidentTickets) {
							r.Owner.MsTeamsChannel.Incident.IncidentTickets = append(r.Owner.MsTeamsChannel.Incident.IncidentTickets, incidentTickets3)
						} else {
							r.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount1].Assignees = incidentTickets3.Assignees
							r.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount1].CreatedAt = incidentTickets3.CreatedAt
							r.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount1].CreatedBy = incidentTickets3.CreatedBy
							r.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount1].Description = incidentTickets3.Description
							r.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount1].DueAt = incidentTickets3.DueAt
							r.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount1].ID = incidentTickets3.ID
							r.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount1].IncidentCurrentMilestone = incidentTickets3.IncidentCurrentMilestone
							r.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount1].IncidentID = incidentTickets3.IncidentID
							r.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount1].IncidentName = incidentTickets3.IncidentName
							r.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount1].Link = incidentTickets3.Link
							r.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount1].Priority = incidentTickets3.Priority
							r.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount1].State = incidentTickets3.State
							r.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount1].Summary = incidentTickets3.Summary
							r.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount1].TagList = incidentTickets3.TagList
							r.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount1].TaskID = incidentTickets3.TaskID
							r.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount1].Type = incidentTickets3.Type
							r.Owner.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount1].UpdatedAt = incidentTickets3.UpdatedAt
						}
					}
					r.Owner.MsTeamsChannel.Incident.IncidentURL = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.IncidentURL)
					if len(resp.Owner.MsTeamsChannel.Incident.Labels) > 0 {
						r.Owner.MsTeamsChannel.Incident.Labels = make(map[string]types.String)
						for key6, value10 := range resp.Owner.MsTeamsChannel.Incident.Labels {
							r.Owner.MsTeamsChannel.Incident.Labels[key6] = types.StringValue(value10)
						}
					}
					if resp.Owner.MsTeamsChannel.Incident.LastNote == nil {
						r.Owner.MsTeamsChannel.Incident.LastNote = nil
					} else {
						r.Owner.MsTeamsChannel.Incident.LastNote = &tfTypes.EventNoteEntity{}
						r.Owner.MsTeamsChannel.Incident.LastNote.Body = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.LastNote.Body)
						r.Owner.MsTeamsChannel.Incident.LastNote.Conversations = []tfTypes.ConversationsAPIEntitiesReference{}
						if len(r.Owner.MsTeamsChannel.Incident.LastNote.Conversations) > len(resp.Owner.MsTeamsChannel.Incident.LastNote.Conversations) {
							r.Owner.MsTeamsChannel.Incident.LastNote.Conversations = r.Owner.MsTeamsChannel.Incident.LastNote.Conversations[:len(resp.Owner.MsTeamsChannel.Incident.LastNote.Conversations)]
						}
						for conversationsCount5, conversationsItem5 := range resp.Owner.MsTeamsChannel.Incident.LastNote.Conversations {
							var conversations11 tfTypes.ConversationsAPIEntitiesReference
							if conversationsItem5.Channel == nil {
								conversations11.Channel = nil
							} else {
								conversations11.Channel = &tfTypes.ConversationsAPIEntitiesChannel{}
								conversations11.Channel.Name = types.StringPointerValue(conversationsItem5.Channel.Name)
							}
							conversations11.CommentsURL = types.StringPointerValue(conversationsItem5.CommentsURL)
							conversations11.Field = types.StringPointerValue(conversationsItem5.Field)
							conversations11.ID = types.StringPointerValue(conversationsItem5.ID)
							conversations11.ResourceClass = types.StringPointerValue(conversationsItem5.ResourceClass)
							conversations11.ResourceID = types.StringPointerValue(conversationsItem5.ResourceID)
							if conversationsCount5+1 > len(r.Owner.MsTeamsChannel.Incident.LastNote.Conversations) {
								r.Owner.MsTeamsChannel.Incident.LastNote.Conversations = append(r.Owner.MsTeamsChannel.Incident.LastNote.Conversations, conversations11)
							} else {
								r.Owner.MsTeamsChannel.Incident.LastNote.Conversations[conversationsCount5].Channel = conversations11.Channel
								r.Owner.MsTeamsChannel.Incident.LastNote.Conversations[conversationsCount5].CommentsURL = conversations11.CommentsURL
								r.Owner.MsTeamsChannel.Incident.LastNote.Conversations[conversationsCount5].Field = conversations11.Field
								r.Owner.MsTeamsChannel.Incident.LastNote.Conversations[conversationsCount5].ID = conversations11.ID
								r.Owner.MsTeamsChannel.Incident.LastNote.Conversations[conversationsCount5].ResourceClass = conversations11.ResourceClass
								r.Owner.MsTeamsChannel.Incident.LastNote.Conversations[conversationsCount5].ResourceID = conversations11.ResourceID
							}
						}
						if resp.Owner.MsTeamsChannel.Incident.LastNote.CreatedAt != nil {
							r.Owner.MsTeamsChannel.Incident.LastNote.CreatedAt = types.StringValue(resp.Owner.MsTeamsChannel.Incident.LastNote.CreatedAt.Format(time.RFC3339Nano))
						} else {
							r.Owner.MsTeamsChannel.Incident.LastNote.CreatedAt = types.StringNull()
						}
						r.Owner.MsTeamsChannel.Incident.LastNote.ID = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.LastNote.ID)
						r.Owner.MsTeamsChannel.Incident.LastNote.StatusPages = []tfTypes.IncidentsStatusPageEntity{}
						if len(r.Owner.MsTeamsChannel.Incident.LastNote.StatusPages) > len(resp.Owner.MsTeamsChannel.Incident.LastNote.StatusPages) {
							r.Owner.MsTeamsChannel.Incident.LastNote.StatusPages = r.Owner.MsTeamsChannel.Incident.LastNote.StatusPages[:len(resp.Owner.MsTeamsChannel.Incident.LastNote.StatusPages)]
						}
						for statusPagesCount2, statusPagesItem2 := range resp.Owner.MsTeamsChannel.Incident.LastNote.StatusPages {
							var statusPages5 tfTypes.IncidentsStatusPageEntity
							statusPages5.DisplayName = types.StringPointerValue(statusPagesItem2.DisplayName)
							statusPages5.ExternalID = types.StringPointerValue(statusPagesItem2.ExternalID)
							statusPages5.ID = types.StringPointerValue(statusPagesItem2.ID)
							if statusPagesItem2.Integration == nil {
								statusPages5.Integration = nil
							} else {
								statusPages5.Integration = &tfTypes.IntegrationEntity{}
								if statusPagesItem2.Integration.CreatedAt != nil {
									statusPages5.Integration.CreatedAt = types.StringValue(statusPagesItem2.Integration.CreatedAt.Format(time.RFC3339Nano))
								} else {
									statusPages5.Integration.CreatedAt = types.StringNull()
								}
								statusPages5.Integration.DisplayName = types.StringPointerValue(statusPagesItem2.Integration.DisplayName)
								statusPages5.Integration.ID = types.StringPointerValue(statusPagesItem2.Integration.ID)
								statusPages5.Integration.IntegrationName = types.StringPointerValue(statusPagesItem2.Integration.IntegrationName)
								statusPages5.Integration.IntegrationSlug = types.StringPointerValue(statusPagesItem2.Integration.IntegrationSlug)
							}
							statusPages5.Name = types.StringPointerValue(statusPagesItem2.Name)
							statusPages5.URL = types.StringPointerValue(statusPagesItem2.URL)
							if statusPagesCount2+1 > len(r.Owner.MsTeamsChannel.Incident.LastNote.StatusPages) {
								r.Owner.MsTeamsChannel.Incident.LastNote.StatusPages = append(r.Owner.MsTeamsChannel.Incident.LastNote.StatusPages, statusPages5)
							} else {
								r.Owner.MsTeamsChannel.Incident.LastNote.StatusPages[statusPagesCount2].DisplayName = statusPages5.DisplayName
								r.Owner.MsTeamsChannel.Incident.LastNote.StatusPages[statusPagesCount2].ExternalID = statusPages5.ExternalID
								r.Owner.MsTeamsChannel.Incident.LastNote.StatusPages[statusPagesCount2].ID = statusPages5.ID
								r.Owner.MsTeamsChannel.Incident.LastNote.StatusPages[statusPagesCount2].Integration = statusPages5.Integration
								r.Owner.MsTeamsChannel.Incident.LastNote.StatusPages[statusPagesCount2].Name = statusPages5.Name
								r.Owner.MsTeamsChannel.Incident.LastNote.StatusPages[statusPagesCount2].URL = statusPages5.URL
							}
						}
					}
					r.Owner.MsTeamsChannel.Incident.LastUpdate = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.LastUpdate)
					r.Owner.MsTeamsChannel.Incident.LifecycleMeasurements = []tfTypes.IncidentsLifecycleMeasurementEntity{}
					if len(r.Owner.MsTeamsChannel.Incident.LifecycleMeasurements) > len(resp.Owner.MsTeamsChannel.Incident.LifecycleMeasurements) {
						r.Owner.MsTeamsChannel.Incident.LifecycleMeasurements = r.Owner.MsTeamsChannel.Incident.LifecycleMeasurements[:len(resp.Owner.MsTeamsChannel.Incident.LifecycleMeasurements)]
					}
					for lifecycleMeasurementsCount1, lifecycleMeasurementsItem1 := range resp.Owner.MsTeamsChannel.Incident.LifecycleMeasurements {
						var lifecycleMeasurements3 tfTypes.IncidentsLifecycleMeasurementEntity
						if lifecycleMeasurementsItem1.CalculatedAt != nil {
							lifecycleMeasurements3.CalculatedAt = types.StringValue(lifecycleMeasurementsItem1.CalculatedAt.Format(time.RFC3339Nano))
						} else {
							lifecycleMeasurements3.CalculatedAt = types.StringNull()
						}
						lifecycleMeasurements3.Description = types.StringPointerValue(lifecycleMeasurementsItem1.Description)
						lifecycleMeasurements3.EndsAtMilestone = types.StringPointerValue(lifecycleMeasurementsItem1.EndsAtMilestone)
						lifecycleMeasurements3.ID = types.StringPointerValue(lifecycleMeasurementsItem1.ID)
						lifecycleMeasurements3.Name = types.StringPointerValue(lifecycleMeasurementsItem1.Name)
						lifecycleMeasurements3.Slug = types.StringPointerValue(lifecycleMeasurementsItem1.Slug)
						lifecycleMeasurements3.StartsAtMilestone = types.StringPointerValue(lifecycleMeasurementsItem1.StartsAtMilestone)
						lifecycleMeasurements3.Value = types.StringPointerValue(lifecycleMeasurementsItem1.Value)
						if lifecycleMeasurementsCount1+1 > len(r.Owner.MsTeamsChannel.Incident.LifecycleMeasurements) {
							r.Owner.MsTeamsChannel.Incident.LifecycleMeasurements = append(r.Owner.MsTeamsChannel.Incident.LifecycleMeasurements, lifecycleMeasurements3)
						} else {
							r.Owner.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount1].CalculatedAt = lifecycleMeasurements3.CalculatedAt
							r.Owner.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount1].Description = lifecycleMeasurements3.Description
							r.Owner.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount1].EndsAtMilestone = lifecycleMeasurements3.EndsAtMilestone
							r.Owner.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount1].ID = lifecycleMeasurements3.ID
							r.Owner.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount1].Name = lifecycleMeasurements3.Name
							r.Owner.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount1].Slug = lifecycleMeasurements3.Slug
							r.Owner.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount1].StartsAtMilestone = lifecycleMeasurements3.StartsAtMilestone
							r.Owner.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount1].Value = lifecycleMeasurements3.Value
						}
					}
					r.Owner.MsTeamsChannel.Incident.LifecyclePhases = []tfTypes.IncidentsLifecyclePhaseEntity{}
					if len(r.Owner.MsTeamsChannel.Incident.LifecyclePhases) > len(resp.Owner.MsTeamsChannel.Incident.LifecyclePhases) {
						r.Owner.MsTeamsChannel.Incident.LifecyclePhases = r.Owner.MsTeamsChannel.Incident.LifecyclePhases[:len(resp.Owner.MsTeamsChannel.Incident.LifecyclePhases)]
					}
					for lifecyclePhasesCount1, lifecyclePhasesItem1 := range resp.Owner.MsTeamsChannel.Incident.LifecyclePhases {
						var lifecyclePhases3 tfTypes.IncidentsLifecyclePhaseEntity
						lifecyclePhases3.Description = types.StringPointerValue(lifecyclePhasesItem1.Description)
						lifecyclePhases3.ID = types.StringPointerValue(lifecyclePhasesItem1.ID)
						lifecyclePhases3.Milestones = []tfTypes.IncidentsLifecycleMilestoneEntity{}
						for milestonesCount2, milestonesItem2 := range lifecyclePhasesItem1.Milestones {
							var milestones5 tfTypes.IncidentsLifecycleMilestoneEntity
							milestones5.Description = types.StringPointerValue(milestonesItem2.Description)
							milestones5.Duration = types.StringPointerValue(milestonesItem2.Duration)
							milestones5.ID = types.StringPointerValue(milestonesItem2.ID)
							milestones5.Name = types.StringPointerValue(milestonesItem2.Name)
							if milestonesItem2.OccurredAt != nil {
								milestones5.OccurredAt = types.StringValue(milestonesItem2.OccurredAt.Format(time.RFC3339Nano))
							} else {
								milestones5.OccurredAt = types.StringNull()
							}
							if milestonesItem2.Position != nil {
								milestones5.Position = types.Int64Value(int64(*milestonesItem2.Position))
							} else {
								milestones5.Position = types.Int64Null()
							}
							milestones5.Slug = types.StringPointerValue(milestonesItem2.Slug)
							if milestonesItem2.UpdatedAt != nil {
								milestones5.UpdatedAt = types.StringValue(milestonesItem2.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								milestones5.UpdatedAt = types.StringNull()
							}
							if milestonesItem2.UpdatedBy == nil {
								milestones5.UpdatedBy = nil
							} else {
								milestones5.UpdatedBy = &tfTypes.AuthorEntity{}
								milestones5.UpdatedBy.Email = types.StringPointerValue(milestonesItem2.UpdatedBy.Email)
								milestones5.UpdatedBy.ID = types.StringPointerValue(milestonesItem2.UpdatedBy.ID)
								milestones5.UpdatedBy.Name = types.StringPointerValue(milestonesItem2.UpdatedBy.Name)
								milestones5.UpdatedBy.Source = types.StringPointerValue(milestonesItem2.UpdatedBy.Source)
							}
							if milestonesCount2+1 > len(lifecyclePhases3.Milestones) {
								lifecyclePhases3.Milestones = append(lifecyclePhases3.Milestones, milestones5)
							} else {
								lifecyclePhases3.Milestones[milestonesCount2].Description = milestones5.Description
								lifecyclePhases3.Milestones[milestonesCount2].Duration = milestones5.Duration
								lifecyclePhases3.Milestones[milestonesCount2].ID = milestones5.ID
								lifecyclePhases3.Milestones[milestonesCount2].Name = milestones5.Name
								lifecyclePhases3.Milestones[milestonesCount2].OccurredAt = milestones5.OccurredAt
								lifecyclePhases3.Milestones[milestonesCount2].Position = milestones5.Position
								lifecyclePhases3.Milestones[milestonesCount2].Slug = milestones5.Slug
								lifecyclePhases3.Milestones[milestonesCount2].UpdatedAt = milestones5.UpdatedAt
								lifecyclePhases3.Milestones[milestonesCount2].UpdatedBy = milestones5.UpdatedBy
							}
						}
						lifecyclePhases3.Name = types.StringPointerValue(lifecyclePhasesItem1.Name)
						if lifecyclePhasesItem1.Position != nil {
							lifecyclePhases3.Position = types.Int64Value(int64(*lifecyclePhasesItem1.Position))
						} else {
							lifecyclePhases3.Position = types.Int64Null()
						}
						lifecyclePhases3.Type = types.StringPointerValue(lifecyclePhasesItem1.Type)
						if lifecyclePhasesCount1+1 > len(r.Owner.MsTeamsChannel.Incident.LifecyclePhases) {
							r.Owner.MsTeamsChannel.Incident.LifecyclePhases = append(r.Owner.MsTeamsChannel.Incident.LifecyclePhases, lifecyclePhases3)
						} else {
							r.Owner.MsTeamsChannel.Incident.LifecyclePhases[lifecyclePhasesCount1].Description = lifecyclePhases3.Description
							r.Owner.MsTeamsChannel.Incident.LifecyclePhases[lifecyclePhasesCount1].ID = lifecyclePhases3.ID
							r.Owner.MsTeamsChannel.Incident.LifecyclePhases[lifecyclePhasesCount1].Milestones = lifecyclePhases3.Milestones
							r.Owner.MsTeamsChannel.Incident.LifecyclePhases[lifecyclePhasesCount1].Name = lifecyclePhases3.Name
							r.Owner.MsTeamsChannel.Incident.LifecyclePhases[lifecyclePhasesCount1].Position = lifecyclePhases3.Position
							r.Owner.MsTeamsChannel.Incident.LifecyclePhases[lifecyclePhasesCount1].Type = lifecyclePhases3.Type
						}
					}
					r.Owner.MsTeamsChannel.Incident.Milestones = []tfTypes.IncidentsMilestoneEntity{}
					if len(r.Owner.MsTeamsChannel.Incident.Milestones) > len(resp.Owner.MsTeamsChannel.Incident.Milestones) {
						r.Owner.MsTeamsChannel.Incident.Milestones = r.Owner.MsTeamsChannel.Incident.Milestones[:len(resp.Owner.MsTeamsChannel.Incident.Milestones)]
					}
					for milestonesCount3, milestonesItem3 := range resp.Owner.MsTeamsChannel.Incident.Milestones {
						var milestones7 tfTypes.IncidentsMilestoneEntity
						if milestonesItem3.CreatedAt != nil {
							milestones7.CreatedAt = types.StringValue(milestonesItem3.CreatedAt.Format(time.RFC3339Nano))
						} else {
							milestones7.CreatedAt = types.StringNull()
						}
						milestones7.Duration = types.StringPointerValue(milestonesItem3.Duration)
						milestones7.ID = types.StringPointerValue(milestonesItem3.ID)
						if milestonesItem3.OccurredAt != nil {
							milestones7.OccurredAt = types.StringValue(milestonesItem3.OccurredAt.Format(time.RFC3339Nano))
						} else {
							milestones7.OccurredAt = types.StringNull()
						}
						milestones7.Type = types.StringPointerValue(milestonesItem3.Type)
						if milestonesItem3.UpdatedAt != nil {
							milestones7.UpdatedAt = types.StringValue(milestonesItem3.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							milestones7.UpdatedAt = types.StringNull()
						}
						if milestonesCount3+1 > len(r.Owner.MsTeamsChannel.Incident.Milestones) {
							r.Owner.MsTeamsChannel.Incident.Milestones = append(r.Owner.MsTeamsChannel.Incident.Milestones, milestones7)
						} else {
							r.Owner.MsTeamsChannel.Incident.Milestones[milestonesCount3].CreatedAt = milestones7.CreatedAt
							r.Owner.MsTeamsChannel.Incident.Milestones[milestonesCount3].Duration = milestones7.Duration
							r.Owner.MsTeamsChannel.Incident.Milestones[milestonesCount3].ID = milestones7.ID
							r.Owner.MsTeamsChannel.Incident.Milestones[milestonesCount3].OccurredAt = milestones7.OccurredAt
							r.Owner.MsTeamsChannel.Incident.Milestones[milestonesCount3].Type = milestones7.Type
							r.Owner.MsTeamsChannel.Incident.Milestones[milestonesCount3].UpdatedAt = milestones7.UpdatedAt
						}
					}
					if resp.Owner.MsTeamsChannel.Incident.MonetaryImpact != nil {
						r.Owner.MsTeamsChannel.Incident.MonetaryImpact = types.Int64Value(int64(*resp.Owner.MsTeamsChannel.Incident.MonetaryImpact))
					} else {
						r.Owner.MsTeamsChannel.Incident.MonetaryImpact = types.Int64Null()
					}
					if resp.Owner.MsTeamsChannel.Incident.MonetaryImpactCents != nil {
						r.Owner.MsTeamsChannel.Incident.MonetaryImpactCents = types.Int64Value(int64(*resp.Owner.MsTeamsChannel.Incident.MonetaryImpactCents))
					} else {
						r.Owner.MsTeamsChannel.Incident.MonetaryImpactCents = types.Int64Null()
					}
					r.Owner.MsTeamsChannel.Incident.Name = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Name)
					if resp.Owner.MsTeamsChannel.Incident.Number != nil {
						r.Owner.MsTeamsChannel.Incident.Number = types.Int64Value(int64(*resp.Owner.MsTeamsChannel.Incident.Number))
					} else {
						r.Owner.MsTeamsChannel.Incident.Number = types.Int64Null()
					}
					if resp.Owner.MsTeamsChannel.Incident.Organization == nil {
						r.Owner.MsTeamsChannel.Incident.Organization = nil
					} else {
						r.Owner.MsTeamsChannel.Incident.Organization = &tfTypes.SuccinctEntity{}
						r.Owner.MsTeamsChannel.Incident.Organization.ID = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Organization.ID)
						r.Owner.MsTeamsChannel.Incident.Organization.Name = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Organization.Name)
					}
					r.Owner.MsTeamsChannel.Incident.OrganizationID = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.OrganizationID)
					r.Owner.MsTeamsChannel.Incident.Priority = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Priority)
					r.Owner.MsTeamsChannel.Incident.PrivateID = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.PrivateID)
					r.Owner.MsTeamsChannel.Incident.PrivateStatusPageURL = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.PrivateStatusPageURL)
					r.Owner.MsTeamsChannel.Incident.ReportID = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.ReportID)
					r.Owner.MsTeamsChannel.Incident.RoleAssignments = []tfTypes.IncidentsRoleAssignmentEntity{}
					if len(r.Owner.MsTeamsChannel.Incident.RoleAssignments) > len(resp.Owner.MsTeamsChannel.Incident.RoleAssignments) {
						r.Owner.MsTeamsChannel.Incident.RoleAssignments = r.Owner.MsTeamsChannel.Incident.RoleAssignments[:len(resp.Owner.MsTeamsChannel.Incident.RoleAssignments)]
					}
					for roleAssignmentsCount1, roleAssignmentsItem1 := range resp.Owner.MsTeamsChannel.Incident.RoleAssignments {
						var roleAssignments3 tfTypes.IncidentsRoleAssignmentEntity
						if roleAssignmentsItem1.CreatedAt != nil {
							roleAssignments3.CreatedAt = types.StringValue(roleAssignmentsItem1.CreatedAt.Format(time.RFC3339Nano))
						} else {
							roleAssignments3.CreatedAt = types.StringNull()
						}
						roleAssignments3.ID = types.StringPointerValue(roleAssignmentsItem1.ID)
						if roleAssignmentsItem1.IncidentRole == nil {
							roleAssignments3.IncidentRole = nil
						} else {
							roleAssignments3.IncidentRole = &tfTypes.IncidentRoleEntity{}
							if roleAssignmentsItem1.IncidentRole.CreatedAt != nil {
								roleAssignments3.IncidentRole.CreatedAt = types.StringValue(roleAssignmentsItem1.IncidentRole.CreatedAt.Format(time.RFC3339Nano))
							} else {
								roleAssignments3.IncidentRole.CreatedAt = types.StringNull()
							}
							roleAssignments3.IncidentRole.Description = types.StringPointerValue(roleAssignmentsItem1.IncidentRole.Description)
							if roleAssignmentsItem1.IncidentRole.DiscardedAt != nil {
								roleAssignments3.IncidentRole.DiscardedAt = types.StringValue(roleAssignmentsItem1.IncidentRole.DiscardedAt.Format(time.RFC3339Nano))
							} else {
								roleAssignments3.IncidentRole.DiscardedAt = types.StringNull()
							}
							roleAssignments3.IncidentRole.ID = types.StringPointerValue(roleAssignmentsItem1.IncidentRole.ID)
							roleAssignments3.IncidentRole.Name = types.StringPointerValue(roleAssignmentsItem1.IncidentRole.Name)
							roleAssignments3.IncidentRole.Summary = types.StringPointerValue(roleAssignmentsItem1.IncidentRole.Summary)
							if roleAssignmentsItem1.IncidentRole.UpdatedAt != nil {
								roleAssignments3.IncidentRole.UpdatedAt = types.StringValue(roleAssignmentsItem1.IncidentRole.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								roleAssignments3.IncidentRole.UpdatedAt = types.StringNull()
							}
						}
						if roleAssignmentsItem1.Status != nil {
							roleAssignments3.Status = types.StringValue(string(*roleAssignmentsItem1.Status))
						} else {
							roleAssignments3.Status = types.StringNull()
						}
						if roleAssignmentsItem1.UpdatedAt != nil {
							roleAssignments3.UpdatedAt = types.StringValue(roleAssignmentsItem1.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							roleAssignments3.UpdatedAt = types.StringNull()
						}
						if roleAssignmentsItem1.User == nil {
							roleAssignments3.User = nil
						} else {
							roleAssignments3.User = &tfTypes.UserEntity{}
							if roleAssignmentsItem1.User.CreatedAt != nil {
								roleAssignments3.User.CreatedAt = types.StringValue(roleAssignmentsItem1.User.CreatedAt.Format(time.RFC3339Nano))
							} else {
								roleAssignments3.User.CreatedAt = types.StringNull()
							}
							roleAssignments3.User.Email = types.StringPointerValue(roleAssignmentsItem1.User.Email)
							roleAssignments3.User.ID = types.StringPointerValue(roleAssignmentsItem1.User.ID)
							roleAssignments3.User.Name = types.StringPointerValue(roleAssignmentsItem1.User.Name)
							roleAssignments3.User.SignalsEnabledNotificationTypes = []types.String{}
							for _, v := range roleAssignmentsItem1.User.SignalsEnabledNotificationTypes {
								roleAssignments3.User.SignalsEnabledNotificationTypes = append(roleAssignments3.User.SignalsEnabledNotificationTypes, types.StringValue(v))
							}
							roleAssignments3.User.SlackLinked = types.BoolPointerValue(roleAssignmentsItem1.User.SlackLinked)
							roleAssignments3.User.SlackUserID = types.StringPointerValue(roleAssignmentsItem1.User.SlackUserID)
							if roleAssignmentsItem1.User.UpdatedAt != nil {
								roleAssignments3.User.UpdatedAt = types.StringValue(roleAssignmentsItem1.User.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								roleAssignments3.User.UpdatedAt = types.StringNull()
							}
						}
						if roleAssignmentsCount1+1 > len(r.Owner.MsTeamsChannel.Incident.RoleAssignments) {
							r.Owner.MsTeamsChannel.Incident.RoleAssignments = append(r.Owner.MsTeamsChannel.Incident.RoleAssignments, roleAssignments3)
						} else {
							r.Owner.MsTeamsChannel.Incident.RoleAssignments[roleAssignmentsCount1].CreatedAt = roleAssignments3.CreatedAt
							r.Owner.MsTeamsChannel.Incident.RoleAssignments[roleAssignmentsCount1].ID = roleAssignments3.ID
							r.Owner.MsTeamsChannel.Incident.RoleAssignments[roleAssignmentsCount1].IncidentRole = roleAssignments3.IncidentRole
							r.Owner.MsTeamsChannel.Incident.RoleAssignments[roleAssignmentsCount1].Status = roleAssignments3.Status
							r.Owner.MsTeamsChannel.Incident.RoleAssignments[roleAssignmentsCount1].UpdatedAt = roleAssignments3.UpdatedAt
							r.Owner.MsTeamsChannel.Incident.RoleAssignments[roleAssignmentsCount1].User = roleAssignments3.User
						}
					}
					r.Owner.MsTeamsChannel.Incident.Services = []tfTypes.SuccinctEntity{}
					if len(r.Owner.MsTeamsChannel.Incident.Services) > len(resp.Owner.MsTeamsChannel.Incident.Services) {
						r.Owner.MsTeamsChannel.Incident.Services = r.Owner.MsTeamsChannel.Incident.Services[:len(resp.Owner.MsTeamsChannel.Incident.Services)]
					}
					for servicesCount1, servicesItem1 := range resp.Owner.MsTeamsChannel.Incident.Services {
						var services3 tfTypes.SuccinctEntity
						services3.ID = types.StringPointerValue(servicesItem1.ID)
						services3.Name = types.StringPointerValue(servicesItem1.Name)
						if servicesCount1+1 > len(r.Owner.MsTeamsChannel.Incident.Services) {
							r.Owner.MsTeamsChannel.Incident.Services = append(r.Owner.MsTeamsChannel.Incident.Services, services3)
						} else {
							r.Owner.MsTeamsChannel.Incident.Services[servicesCount1].ID = services3.ID
							r.Owner.MsTeamsChannel.Incident.Services[servicesCount1].Name = services3.Name
						}
					}
					r.Owner.MsTeamsChannel.Incident.Severity = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Severity)
					r.Owner.MsTeamsChannel.Incident.SeverityColor = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.SeverityColor)
					r.Owner.MsTeamsChannel.Incident.SeverityCondition = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.SeverityCondition)
					if resp.Owner.MsTeamsChannel.Incident.SeverityConditionObject == nil {
						r.Owner.MsTeamsChannel.Incident.SeverityConditionObject = nil
					} else {
						r.Owner.MsTeamsChannel.Incident.SeverityConditionObject = &tfTypes.SeverityMatrixConditionEntity{}
						r.Owner.MsTeamsChannel.Incident.SeverityConditionObject.ID = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.SeverityConditionObject.ID)
						r.Owner.MsTeamsChannel.Incident.SeverityConditionObject.Name = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.SeverityConditionObject.Name)
						if resp.Owner.MsTeamsChannel.Incident.SeverityConditionObject.Position != nil {
							r.Owner.MsTeamsChannel.Incident.SeverityConditionObject.Position = types.Int64Value(int64(*resp.Owner.MsTeamsChannel.Incident.SeverityConditionObject.Position))
						} else {
							r.Owner.MsTeamsChannel.Incident.SeverityConditionObject.Position = types.Int64Null()
						}
					}
					r.Owner.MsTeamsChannel.Incident.SeverityImpact = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.SeverityImpact)
					if resp.Owner.MsTeamsChannel.Incident.SeverityImpactObject == nil {
						r.Owner.MsTeamsChannel.Incident.SeverityImpactObject = nil
					} else {
						r.Owner.MsTeamsChannel.Incident.SeverityImpactObject = &tfTypes.SeverityMatrixImpactEntity{}
						r.Owner.MsTeamsChannel.Incident.SeverityImpactObject.AffectsID = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.SeverityImpactObject.AffectsID)
						r.Owner.MsTeamsChannel.Incident.SeverityImpactObject.ID = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.SeverityImpactObject.ID)
						r.Owner.MsTeamsChannel.Incident.SeverityImpactObject.Name = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.SeverityImpactObject.Name)
						if resp.Owner.MsTeamsChannel.Incident.SeverityImpactObject.Position != nil {
							r.Owner.MsTeamsChannel.Incident.SeverityImpactObject.Position = types.Int64Value(int64(*resp.Owner.MsTeamsChannel.Incident.SeverityImpactObject.Position))
						} else {
							r.Owner.MsTeamsChannel.Incident.SeverityImpactObject.Position = types.Int64Null()
						}
						r.Owner.MsTeamsChannel.Incident.SeverityImpactObject.Type = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.SeverityImpactObject.Type)
					}
					if resp.Owner.MsTeamsChannel.Incident.StartedAt != nil {
						r.Owner.MsTeamsChannel.Incident.StartedAt = types.StringValue(resp.Owner.MsTeamsChannel.Incident.StartedAt.Format(time.RFC3339Nano))
					} else {
						r.Owner.MsTeamsChannel.Incident.StartedAt = types.StringNull()
					}
					r.Owner.MsTeamsChannel.Incident.StatusPages = []tfTypes.IncidentsStatusPageEntity{}
					if len(r.Owner.MsTeamsChannel.Incident.StatusPages) > len(resp.Owner.MsTeamsChannel.Incident.StatusPages) {
						r.Owner.MsTeamsChannel.Incident.StatusPages = r.Owner.MsTeamsChannel.Incident.StatusPages[:len(resp.Owner.MsTeamsChannel.Incident.StatusPages)]
					}
					for statusPagesCount3, statusPagesItem3 := range resp.Owner.MsTeamsChannel.Incident.StatusPages {
						var statusPages7 tfTypes.IncidentsStatusPageEntity
						statusPages7.DisplayName = types.StringPointerValue(statusPagesItem3.DisplayName)
						statusPages7.ExternalID = types.StringPointerValue(statusPagesItem3.ExternalID)
						statusPages7.ID = types.StringPointerValue(statusPagesItem3.ID)
						if statusPagesItem3.Integration == nil {
							statusPages7.Integration = nil
						} else {
							statusPages7.Integration = &tfTypes.IntegrationEntity{}
							if statusPagesItem3.Integration.CreatedAt != nil {
								statusPages7.Integration.CreatedAt = types.StringValue(statusPagesItem3.Integration.CreatedAt.Format(time.RFC3339Nano))
							} else {
								statusPages7.Integration.CreatedAt = types.StringNull()
							}
							statusPages7.Integration.DisplayName = types.StringPointerValue(statusPagesItem3.Integration.DisplayName)
							statusPages7.Integration.ID = types.StringPointerValue(statusPagesItem3.Integration.ID)
							statusPages7.Integration.IntegrationName = types.StringPointerValue(statusPagesItem3.Integration.IntegrationName)
							statusPages7.Integration.IntegrationSlug = types.StringPointerValue(statusPagesItem3.Integration.IntegrationSlug)
						}
						statusPages7.Name = types.StringPointerValue(statusPagesItem3.Name)
						statusPages7.URL = types.StringPointerValue(statusPagesItem3.URL)
						if statusPagesCount3+1 > len(r.Owner.MsTeamsChannel.Incident.StatusPages) {
							r.Owner.MsTeamsChannel.Incident.StatusPages = append(r.Owner.MsTeamsChannel.Incident.StatusPages, statusPages7)
						} else {
							r.Owner.MsTeamsChannel.Incident.StatusPages[statusPagesCount3].DisplayName = statusPages7.DisplayName
							r.Owner.MsTeamsChannel.Incident.StatusPages[statusPagesCount3].ExternalID = statusPages7.ExternalID
							r.Owner.MsTeamsChannel.Incident.StatusPages[statusPagesCount3].ID = statusPages7.ID
							r.Owner.MsTeamsChannel.Incident.StatusPages[statusPagesCount3].Integration = statusPages7.Integration
							r.Owner.MsTeamsChannel.Incident.StatusPages[statusPagesCount3].Name = statusPages7.Name
							r.Owner.MsTeamsChannel.Incident.StatusPages[statusPagesCount3].URL = statusPages7.URL
						}
					}
					r.Owner.MsTeamsChannel.Incident.Summary = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Summary)
					r.Owner.MsTeamsChannel.Incident.TagList = []types.String{}
					for _, v := range resp.Owner.MsTeamsChannel.Incident.TagList {
						r.Owner.MsTeamsChannel.Incident.TagList = append(r.Owner.MsTeamsChannel.Incident.TagList, types.StringValue(v))
					}
					r.Owner.MsTeamsChannel.Incident.TeamAssignments = []tfTypes.IncidentsTeamAssignmentEntity{}
					if len(r.Owner.MsTeamsChannel.Incident.TeamAssignments) > len(resp.Owner.MsTeamsChannel.Incident.TeamAssignments) {
						r.Owner.MsTeamsChannel.Incident.TeamAssignments = r.Owner.MsTeamsChannel.Incident.TeamAssignments[:len(resp.Owner.MsTeamsChannel.Incident.TeamAssignments)]
					}
					for teamAssignmentsCount1, teamAssignmentsItem1 := range resp.Owner.MsTeamsChannel.Incident.TeamAssignments {
						var teamAssignments3 tfTypes.IncidentsTeamAssignmentEntity
						if teamAssignmentsItem1.CreatedAt != nil {
							teamAssignments3.CreatedAt = types.StringValue(teamAssignmentsItem1.CreatedAt.Format(time.RFC3339Nano))
						} else {
							teamAssignments3.CreatedAt = types.StringNull()
						}
						teamAssignments3.ID = types.StringPointerValue(teamAssignmentsItem1.ID)
						teamAssignments3.Status = types.StringPointerValue(teamAssignmentsItem1.Status)
						if teamAssignmentsItem1.Team == nil {
							teamAssignments3.Team = nil
						} else {
							teamAssignments3.Team = &tfTypes.TeamEntity1{}
						}
						if teamAssignmentsItem1.UpdatedAt != nil {
							teamAssignments3.UpdatedAt = types.StringValue(teamAssignmentsItem1.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							teamAssignments3.UpdatedAt = types.StringNull()
						}
						if teamAssignmentsCount1+1 > len(r.Owner.MsTeamsChannel.Incident.TeamAssignments) {
							r.Owner.MsTeamsChannel.Incident.TeamAssignments = append(r.Owner.MsTeamsChannel.Incident.TeamAssignments, teamAssignments3)
						} else {
							r.Owner.MsTeamsChannel.Incident.TeamAssignments[teamAssignmentsCount1].CreatedAt = teamAssignments3.CreatedAt
							r.Owner.MsTeamsChannel.Incident.TeamAssignments[teamAssignmentsCount1].ID = teamAssignments3.ID
							r.Owner.MsTeamsChannel.Incident.TeamAssignments[teamAssignmentsCount1].Status = teamAssignments3.Status
							r.Owner.MsTeamsChannel.Incident.TeamAssignments[teamAssignmentsCount1].Team = teamAssignments3.Team
							r.Owner.MsTeamsChannel.Incident.TeamAssignments[teamAssignmentsCount1].UpdatedAt = teamAssignments3.UpdatedAt
						}
					}
					if resp.Owner.MsTeamsChannel.Incident.Ticket == nil {
						r.Owner.MsTeamsChannel.Incident.Ticket = nil
					} else {
						r.Owner.MsTeamsChannel.Incident.Ticket = &tfTypes.TicketingTicketEntity{}
						r.Owner.MsTeamsChannel.Incident.Ticket.Assignees = []tfTypes.AuthorEntity{}
						if len(r.Owner.MsTeamsChannel.Incident.Ticket.Assignees) > len(resp.Owner.MsTeamsChannel.Incident.Ticket.Assignees) {
							r.Owner.MsTeamsChannel.Incident.Ticket.Assignees = r.Owner.MsTeamsChannel.Incident.Ticket.Assignees[:len(resp.Owner.MsTeamsChannel.Incident.Ticket.Assignees)]
						}
						for assigneesCount3, assigneesItem3 := range resp.Owner.MsTeamsChannel.Incident.Ticket.Assignees {
							var assignees7 tfTypes.AuthorEntity
							assignees7.Email = types.StringPointerValue(assigneesItem3.Email)
							assignees7.ID = types.StringPointerValue(assigneesItem3.ID)
							assignees7.Name = types.StringPointerValue(assigneesItem3.Name)
							assignees7.Source = types.StringPointerValue(assigneesItem3.Source)
							if assigneesCount3+1 > len(r.Owner.MsTeamsChannel.Incident.Ticket.Assignees) {
								r.Owner.MsTeamsChannel.Incident.Ticket.Assignees = append(r.Owner.MsTeamsChannel.Incident.Ticket.Assignees, assignees7)
							} else {
								r.Owner.MsTeamsChannel.Incident.Ticket.Assignees[assigneesCount3].Email = assignees7.Email
								r.Owner.MsTeamsChannel.Incident.Ticket.Assignees[assigneesCount3].ID = assignees7.ID
								r.Owner.MsTeamsChannel.Incident.Ticket.Assignees[assigneesCount3].Name = assignees7.Name
								r.Owner.MsTeamsChannel.Incident.Ticket.Assignees[assigneesCount3].Source = assignees7.Source
							}
						}
						if resp.Owner.MsTeamsChannel.Incident.Ticket.CreatedAt != nil {
							r.Owner.MsTeamsChannel.Incident.Ticket.CreatedAt = types.StringValue(resp.Owner.MsTeamsChannel.Incident.Ticket.CreatedAt.Format(time.RFC3339Nano))
						} else {
							r.Owner.MsTeamsChannel.Incident.Ticket.CreatedAt = types.StringNull()
						}
						if resp.Owner.MsTeamsChannel.Incident.Ticket.CreatedBy == nil {
							r.Owner.MsTeamsChannel.Incident.Ticket.CreatedBy = nil
						} else {
							r.Owner.MsTeamsChannel.Incident.Ticket.CreatedBy = &tfTypes.AuthorEntity{}
							r.Owner.MsTeamsChannel.Incident.Ticket.CreatedBy.Email = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Ticket.CreatedBy.Email)
							r.Owner.MsTeamsChannel.Incident.Ticket.CreatedBy.ID = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Ticket.CreatedBy.ID)
							r.Owner.MsTeamsChannel.Incident.Ticket.CreatedBy.Name = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Ticket.CreatedBy.Name)
							r.Owner.MsTeamsChannel.Incident.Ticket.CreatedBy.Source = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Ticket.CreatedBy.Source)
						}
						r.Owner.MsTeamsChannel.Incident.Ticket.Description = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Ticket.Description)
						if resp.Owner.MsTeamsChannel.Incident.Ticket.DueAt != nil {
							r.Owner.MsTeamsChannel.Incident.Ticket.DueAt = types.StringValue(resp.Owner.MsTeamsChannel.Incident.Ticket.DueAt.Format(time.RFC3339Nano))
						} else {
							r.Owner.MsTeamsChannel.Incident.Ticket.DueAt = types.StringNull()
						}
						r.Owner.MsTeamsChannel.Incident.Ticket.ID = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Ticket.ID)
						r.Owner.MsTeamsChannel.Incident.Ticket.IncidentCurrentMilestone = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Ticket.IncidentCurrentMilestone)
						r.Owner.MsTeamsChannel.Incident.Ticket.IncidentID = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Ticket.IncidentID)
						r.Owner.MsTeamsChannel.Incident.Ticket.IncidentName = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Ticket.IncidentName)
						if resp.Owner.MsTeamsChannel.Incident.Ticket.Link == nil {
							r.Owner.MsTeamsChannel.Incident.Ticket.Link = nil
						} else {
							r.Owner.MsTeamsChannel.Incident.Ticket.Link = &tfTypes.AttachmentsLinkEntity{}
							r.Owner.MsTeamsChannel.Incident.Ticket.Link.Deletable = types.BoolPointerValue(resp.Owner.MsTeamsChannel.Incident.Ticket.Link.Deletable)
							r.Owner.MsTeamsChannel.Incident.Ticket.Link.DisplayText = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Ticket.Link.DisplayText)
							r.Owner.MsTeamsChannel.Incident.Ticket.Link.Editable = types.BoolPointerValue(resp.Owner.MsTeamsChannel.Incident.Ticket.Link.Editable)
							r.Owner.MsTeamsChannel.Incident.Ticket.Link.HrefURL = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Ticket.Link.HrefURL)
							r.Owner.MsTeamsChannel.Incident.Ticket.Link.IconURL = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Ticket.Link.IconURL)
							r.Owner.MsTeamsChannel.Incident.Ticket.Link.ID = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Ticket.Link.ID)
							r.Owner.MsTeamsChannel.Incident.Ticket.Link.Type = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Ticket.Link.Type)
						}
						if resp.Owner.MsTeamsChannel.Incident.Ticket.Priority == nil {
							r.Owner.MsTeamsChannel.Incident.Ticket.Priority = nil
						} else {
							r.Owner.MsTeamsChannel.Incident.Ticket.Priority = &tfTypes.TicketingPriorityEntity{}
							if resp.Owner.MsTeamsChannel.Incident.Ticket.Priority.CreatedAt != nil {
								r.Owner.MsTeamsChannel.Incident.Ticket.Priority.CreatedAt = types.StringValue(resp.Owner.MsTeamsChannel.Incident.Ticket.Priority.CreatedAt.Format(time.RFC3339Nano))
							} else {
								r.Owner.MsTeamsChannel.Incident.Ticket.Priority.CreatedAt = types.StringNull()
							}
							r.Owner.MsTeamsChannel.Incident.Ticket.Priority.ID = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Ticket.Priority.ID)
							r.Owner.MsTeamsChannel.Incident.Ticket.Priority.Name = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Ticket.Priority.Name)
							if resp.Owner.MsTeamsChannel.Incident.Ticket.Priority.Position != nil {
								r.Owner.MsTeamsChannel.Incident.Ticket.Priority.Position = types.Int64Value(int64(*resp.Owner.MsTeamsChannel.Incident.Ticket.Priority.Position))
							} else {
								r.Owner.MsTeamsChannel.Incident.Ticket.Priority.Position = types.Int64Null()
							}
							if resp.Owner.MsTeamsChannel.Incident.Ticket.Priority.UpdatedAt != nil {
								r.Owner.MsTeamsChannel.Incident.Ticket.Priority.UpdatedAt = types.StringValue(resp.Owner.MsTeamsChannel.Incident.Ticket.Priority.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								r.Owner.MsTeamsChannel.Incident.Ticket.Priority.UpdatedAt = types.StringNull()
							}
						}
						if resp.Owner.MsTeamsChannel.Incident.Ticket.State != nil {
							r.Owner.MsTeamsChannel.Incident.Ticket.State = types.StringValue(string(*resp.Owner.MsTeamsChannel.Incident.Ticket.State))
						} else {
							r.Owner.MsTeamsChannel.Incident.Ticket.State = types.StringNull()
						}
						r.Owner.MsTeamsChannel.Incident.Ticket.Summary = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Ticket.Summary)
						r.Owner.MsTeamsChannel.Incident.Ticket.TagList = []types.String{}
						for _, v := range resp.Owner.MsTeamsChannel.Incident.Ticket.TagList {
							r.Owner.MsTeamsChannel.Incident.Ticket.TagList = append(r.Owner.MsTeamsChannel.Incident.Ticket.TagList, types.StringValue(v))
						}
						r.Owner.MsTeamsChannel.Incident.Ticket.TaskID = types.StringPointerValue(resp.Owner.MsTeamsChannel.Incident.Ticket.TaskID)
						if resp.Owner.MsTeamsChannel.Incident.Ticket.Type != nil {
							r.Owner.MsTeamsChannel.Incident.Ticket.Type = types.StringValue(string(*resp.Owner.MsTeamsChannel.Incident.Ticket.Type))
						} else {
							r.Owner.MsTeamsChannel.Incident.Ticket.Type = types.StringNull()
						}
						if resp.Owner.MsTeamsChannel.Incident.Ticket.UpdatedAt != nil {
							r.Owner.MsTeamsChannel.Incident.Ticket.UpdatedAt = types.StringValue(resp.Owner.MsTeamsChannel.Incident.Ticket.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							r.Owner.MsTeamsChannel.Incident.Ticket.UpdatedAt = types.StringNull()
						}
					}
				}
				r.Owner.MsTeamsChannel.MsTeamID = types.StringPointerValue(resp.Owner.MsTeamsChannel.MsTeamID)
				r.Owner.MsTeamsChannel.Status = types.StringPointerValue(resp.Owner.MsTeamsChannel.Status)
				r.Owner.MsTeamsChannel.TeamName = types.StringPointerValue(resp.Owner.MsTeamsChannel.TeamName)
			}
			r.Owner.Name = types.StringPointerValue(resp.Owner.Name)
			r.Owner.OwnedFunctionalities = []tfTypes.FunctionalityEntity{}
			if len(r.Owner.OwnedFunctionalities) > len(resp.Owner.OwnedFunctionalities) {
				r.Owner.OwnedFunctionalities = r.Owner.OwnedFunctionalities[:len(resp.Owner.OwnedFunctionalities)]
			}
			for ownedFunctionalitiesCount1, ownedFunctionalitiesItem1 := range resp.Owner.OwnedFunctionalities {
				var ownedFunctionalities3 tfTypes.FunctionalityEntity
				ownedFunctionalities3.ActiveIncidents = []types.String{}
				for _, v := range ownedFunctionalitiesItem1.ActiveIncidents {
					ownedFunctionalities3.ActiveIncidents = append(ownedFunctionalities3.ActiveIncidents, types.StringValue(v))
				}
				ownedFunctionalities3.AlertOnAdd = types.BoolPointerValue(ownedFunctionalitiesItem1.AlertOnAdd)
				ownedFunctionalities3.AutoAddRespondingTeam = types.BoolPointerValue(ownedFunctionalitiesItem1.AutoAddRespondingTeam)
				if ownedFunctionalitiesItem1.CreatedAt != nil {
					ownedFunctionalities3.CreatedAt = types.StringValue(ownedFunctionalitiesItem1.CreatedAt.Format(time.RFC3339Nano))
				} else {
					ownedFunctionalities3.CreatedAt = types.StringNull()
				}
				ownedFunctionalities3.Description = types.StringPointerValue(ownedFunctionalitiesItem1.Description)
				ownedFunctionalities3.ExternalResources = []tfTypes.ExternalResourceEntity{}
				for externalResourcesCount5, externalResourcesItem5 := range ownedFunctionalitiesItem1.ExternalResources {
					var externalResources11 tfTypes.ExternalResourceEntity
					externalResources11.ConnectionID = types.StringPointerValue(externalResourcesItem5.ConnectionID)
					externalResources11.ConnectionName = types.StringPointerValue(externalResourcesItem5.ConnectionName)
					externalResources11.ConnectionType = types.StringPointerValue(externalResourcesItem5.ConnectionType)
					if externalResourcesItem5.CreatedAt != nil {
						externalResources11.CreatedAt = types.StringValue(externalResourcesItem5.CreatedAt.Format(time.RFC3339Nano))
					} else {
						externalResources11.CreatedAt = types.StringNull()
					}
					externalResources11.Name = types.StringPointerValue(externalResourcesItem5.Name)
					externalResources11.RemoteID = types.StringPointerValue(externalResourcesItem5.RemoteID)
					externalResources11.RemoteURL = types.StringPointerValue(externalResourcesItem5.RemoteURL)
					if externalResourcesItem5.UpdatedAt != nil {
						externalResources11.UpdatedAt = types.StringValue(externalResourcesItem5.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						externalResources11.UpdatedAt = types.StringNull()
					}
					if externalResourcesCount5+1 > len(ownedFunctionalities3.ExternalResources) {
						ownedFunctionalities3.ExternalResources = append(ownedFunctionalities3.ExternalResources, externalResources11)
					} else {
						ownedFunctionalities3.ExternalResources[externalResourcesCount5].ConnectionID = externalResources11.ConnectionID
						ownedFunctionalities3.ExternalResources[externalResourcesCount5].ConnectionName = externalResources11.ConnectionName
						ownedFunctionalities3.ExternalResources[externalResourcesCount5].ConnectionType = externalResources11.ConnectionType
						ownedFunctionalities3.ExternalResources[externalResourcesCount5].CreatedAt = externalResources11.CreatedAt
						ownedFunctionalities3.ExternalResources[externalResourcesCount5].Name = externalResources11.Name
						ownedFunctionalities3.ExternalResources[externalResourcesCount5].RemoteID = externalResources11.RemoteID
						ownedFunctionalities3.ExternalResources[externalResourcesCount5].RemoteURL = externalResources11.RemoteURL
						ownedFunctionalities3.ExternalResources[externalResourcesCount5].UpdatedAt = externalResources11.UpdatedAt
					}
				}
				ownedFunctionalities3.ID = types.StringPointerValue(ownedFunctionalitiesItem1.ID)
				if len(ownedFunctionalitiesItem1.Labels) > 0 {
					ownedFunctionalities3.Labels = make(map[string]types.String)
					for key7, value12 := range ownedFunctionalitiesItem1.Labels {
						ownedFunctionalities3.Labels[key7] = types.StringValue(value12)
					}
				}
				ownedFunctionalities3.Links = []tfTypes.LinksEntity{}
				for linksCount5, linksItem5 := range ownedFunctionalitiesItem1.Links {
					var links11 tfTypes.LinksEntity
					links11.HrefURL = types.StringPointerValue(linksItem5.HrefURL)
					links11.IconURL = types.StringPointerValue(linksItem5.IconURL)
					links11.ID = types.StringPointerValue(linksItem5.ID)
					links11.Name = types.StringPointerValue(linksItem5.Name)
					if linksCount5+1 > len(ownedFunctionalities3.Links) {
						ownedFunctionalities3.Links = append(ownedFunctionalities3.Links, links11)
					} else {
						ownedFunctionalities3.Links[linksCount5].HrefURL = links11.HrefURL
						ownedFunctionalities3.Links[linksCount5].IconURL = links11.IconURL
						ownedFunctionalities3.Links[linksCount5].ID = links11.ID
						ownedFunctionalities3.Links[linksCount5].Name = links11.Name
					}
				}
				ownedFunctionalities3.Name = types.StringPointerValue(ownedFunctionalitiesItem1.Name)
				if ownedFunctionalitiesItem1.Owner == nil {
					ownedFunctionalities3.Owner = nil
				} else {
					ownedFunctionalities3.Owner = &tfTypes.TeamEntity1{}
				}
				ownedFunctionalities3.Slug = types.StringPointerValue(ownedFunctionalitiesItem1.Slug)
				if ownedFunctionalitiesItem1.UpdatedAt != nil {
					ownedFunctionalities3.UpdatedAt = types.StringValue(ownedFunctionalitiesItem1.UpdatedAt.Format(time.RFC3339Nano))
				} else {
					ownedFunctionalities3.UpdatedAt = types.StringNull()
				}
				if ownedFunctionalitiesItem1.UpdatedBy == nil {
					ownedFunctionalities3.UpdatedBy = nil
				} else {
					ownedFunctionalities3.UpdatedBy = &tfTypes.AuthorEntity{}
					ownedFunctionalities3.UpdatedBy.Email = types.StringPointerValue(ownedFunctionalitiesItem1.UpdatedBy.Email)
					ownedFunctionalities3.UpdatedBy.ID = types.StringPointerValue(ownedFunctionalitiesItem1.UpdatedBy.ID)
					ownedFunctionalities3.UpdatedBy.Name = types.StringPointerValue(ownedFunctionalitiesItem1.UpdatedBy.Name)
					ownedFunctionalities3.UpdatedBy.Source = types.StringPointerValue(ownedFunctionalitiesItem1.UpdatedBy.Source)
				}
				if ownedFunctionalitiesCount1+1 > len(r.Owner.OwnedFunctionalities) {
					r.Owner.OwnedFunctionalities = append(r.Owner.OwnedFunctionalities, ownedFunctionalities3)
				} else {
					r.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].ActiveIncidents = ownedFunctionalities3.ActiveIncidents
					r.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].AlertOnAdd = ownedFunctionalities3.AlertOnAdd
					r.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].AutoAddRespondingTeam = ownedFunctionalities3.AutoAddRespondingTeam
					r.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].CreatedAt = ownedFunctionalities3.CreatedAt
					r.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].Description = ownedFunctionalities3.Description
					r.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].ExternalResources = ownedFunctionalities3.ExternalResources
					r.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].ID = ownedFunctionalities3.ID
					r.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].Labels = ownedFunctionalities3.Labels
					r.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].Links = ownedFunctionalities3.Links
					r.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].Name = ownedFunctionalities3.Name
					r.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].Owner = ownedFunctionalities3.Owner
					r.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].Slug = ownedFunctionalities3.Slug
					r.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].UpdatedAt = ownedFunctionalities3.UpdatedAt
					r.Owner.OwnedFunctionalities[ownedFunctionalitiesCount1].UpdatedBy = ownedFunctionalities3.UpdatedBy
				}
			}
			r.Owner.OwnedRunbooks = []tfTypes.SlimRunbookEntity{}
			if len(r.Owner.OwnedRunbooks) > len(resp.Owner.OwnedRunbooks) {
				r.Owner.OwnedRunbooks = r.Owner.OwnedRunbooks[:len(resp.Owner.OwnedRunbooks)]
			}
			for ownedRunbooksCount1, ownedRunbooksItem1 := range resp.Owner.OwnedRunbooks {
				var ownedRunbooks3 tfTypes.SlimRunbookEntity
				if ownedRunbooksItem1.AttachmentRule == nil {
					ownedRunbooks3.AttachmentRule = nil
				} else {
					ownedRunbooks3.AttachmentRule = &tfTypes.RulesRuleEntity{}
					if ownedRunbooksItem1.AttachmentRule.Logic == nil {
						ownedRunbooks3.AttachmentRule.Logic = nil
					} else {
						ownedRunbooks3.AttachmentRule.Logic = &tfTypes.TeamEntity1{}
					}
					if ownedRunbooksItem1.AttachmentRule.UserData == nil {
						ownedRunbooks3.AttachmentRule.UserData = nil
					} else {
						ownedRunbooks3.AttachmentRule.UserData = &tfTypes.FHTypesGenericEntity{}
						ownedRunbooks3.AttachmentRule.UserData.Label = types.StringPointerValue(ownedRunbooksItem1.AttachmentRule.UserData.Label)
						ownedRunbooks3.AttachmentRule.UserData.Type = types.StringPointerValue(ownedRunbooksItem1.AttachmentRule.UserData.Type)
						ownedRunbooks3.AttachmentRule.UserData.Value = types.StringPointerValue(ownedRunbooksItem1.AttachmentRule.UserData.Value)
					}
				}
				ownedRunbooks3.Categories = types.StringPointerValue(ownedRunbooksItem1.Categories)
				if ownedRunbooksItem1.CreatedAt != nil {
					ownedRunbooks3.CreatedAt = types.StringValue(ownedRunbooksItem1.CreatedAt.Format(time.RFC3339Nano))
				} else {
					ownedRunbooks3.CreatedAt = types.StringNull()
				}
				ownedRunbooks3.Description = types.StringPointerValue(ownedRunbooksItem1.Description)
				ownedRunbooks3.ID = types.StringPointerValue(ownedRunbooksItem1.ID)
				ownedRunbooks3.Name = types.StringPointerValue(ownedRunbooksItem1.Name)
				if ownedRunbooksItem1.Owner == nil {
					ownedRunbooks3.Owner = nil
				} else {
					ownedRunbooks3.Owner = &tfTypes.TeamEntity1{}
				}
				ownedRunbooks3.Summary = types.StringPointerValue(ownedRunbooksItem1.Summary)
				ownedRunbooks3.Type = types.StringPointerValue(ownedRunbooksItem1.Type)
				if ownedRunbooksItem1.UpdatedAt != nil {
					ownedRunbooks3.UpdatedAt = types.StringValue(ownedRunbooksItem1.UpdatedAt.Format(time.RFC3339Nano))
				} else {
					ownedRunbooks3.UpdatedAt = types.StringNull()
				}
				if ownedRunbooksCount1+1 > len(r.Owner.OwnedRunbooks) {
					r.Owner.OwnedRunbooks = append(r.Owner.OwnedRunbooks, ownedRunbooks3)
				} else {
					r.Owner.OwnedRunbooks[ownedRunbooksCount1].AttachmentRule = ownedRunbooks3.AttachmentRule
					r.Owner.OwnedRunbooks[ownedRunbooksCount1].Categories = ownedRunbooks3.Categories
					r.Owner.OwnedRunbooks[ownedRunbooksCount1].CreatedAt = ownedRunbooks3.CreatedAt
					r.Owner.OwnedRunbooks[ownedRunbooksCount1].Description = ownedRunbooks3.Description
					r.Owner.OwnedRunbooks[ownedRunbooksCount1].ID = ownedRunbooks3.ID
					r.Owner.OwnedRunbooks[ownedRunbooksCount1].Name = ownedRunbooks3.Name
					r.Owner.OwnedRunbooks[ownedRunbooksCount1].Owner = ownedRunbooks3.Owner
					r.Owner.OwnedRunbooks[ownedRunbooksCount1].Summary = ownedRunbooks3.Summary
					r.Owner.OwnedRunbooks[ownedRunbooksCount1].Type = ownedRunbooks3.Type
					r.Owner.OwnedRunbooks[ownedRunbooksCount1].UpdatedAt = ownedRunbooks3.UpdatedAt
				}
			}
			r.Owner.SignalsIcalURL = types.StringPointerValue(resp.Owner.SignalsIcalURL)
			if resp.Owner.SlackChannel == nil {
				r.Owner.SlackChannel = nil
			} else {
				r.Owner.SlackChannel = &tfTypes.IntegrationsSlackSlackChannelEntity{}
				r.Owner.SlackChannel.ID = types.StringPointerValue(resp.Owner.SlackChannel.ID)
				r.Owner.SlackChannel.Name = types.StringPointerValue(resp.Owner.SlackChannel.Name)
				r.Owner.SlackChannel.SlackChannelID = types.StringPointerValue(resp.Owner.SlackChannel.SlackChannelID)
			}
			r.Owner.Slug = types.StringPointerValue(resp.Owner.Slug)
			if resp.Owner.UpdatedAt != nil {
				r.Owner.UpdatedAt = types.StringValue(resp.Owner.UpdatedAt.Format(time.RFC3339Nano))
			} else {
				r.Owner.UpdatedAt = types.StringNull()
			}
		}
		if resp.ServiceChecklistUpdatedAt != nil {
			r.ServiceChecklistUpdatedAt = types.StringValue(resp.ServiceChecklistUpdatedAt.Format(time.RFC3339Nano))
		} else {
			r.ServiceChecklistUpdatedAt = types.StringNull()
		}
		if resp.ServiceTier != nil {
			r.ServiceTier = types.Int64Value(int64(*resp.ServiceTier))
		} else {
			r.ServiceTier = types.Int64Null()
		}
		r.Slug = types.StringPointerValue(resp.Slug)
		r.Teams = []tfTypes.TeamEntity{}
		if len(r.Teams) > len(resp.Teams) {
			r.Teams = r.Teams[:len(resp.Teams)]
		}
		for teamsCount, teamsItem := range resp.Teams {
			var teams1 tfTypes.TeamEntity
			if teamsItem.CreatedAt != nil {
				teams1.CreatedAt = types.StringValue(teamsItem.CreatedAt.Format(time.RFC3339Nano))
			} else {
				teams1.CreatedAt = types.StringNull()
			}
			if teamsItem.CreatedBy == nil {
				teams1.CreatedBy = nil
			} else {
				teams1.CreatedBy = &tfTypes.AuthorEntity{}
				teams1.CreatedBy.Email = types.StringPointerValue(teamsItem.CreatedBy.Email)
				teams1.CreatedBy.ID = types.StringPointerValue(teamsItem.CreatedBy.ID)
				teams1.CreatedBy.Name = types.StringPointerValue(teamsItem.CreatedBy.Name)
				teams1.CreatedBy.Source = types.StringPointerValue(teamsItem.CreatedBy.Source)
			}
			teams1.Description = types.StringPointerValue(teamsItem.Description)
			teams1.Functionalities = []tfTypes.FunctionalityEntity{}
			for functionalitiesCount5, functionalitiesItem5 := range teamsItem.Functionalities {
				var functionalities11 tfTypes.FunctionalityEntity
				functionalities11.ActiveIncidents = []types.String{}
				for _, v := range functionalitiesItem5.ActiveIncidents {
					functionalities11.ActiveIncidents = append(functionalities11.ActiveIncidents, types.StringValue(v))
				}
				functionalities11.AlertOnAdd = types.BoolPointerValue(functionalitiesItem5.AlertOnAdd)
				functionalities11.AutoAddRespondingTeam = types.BoolPointerValue(functionalitiesItem5.AutoAddRespondingTeam)
				if functionalitiesItem5.CreatedAt != nil {
					functionalities11.CreatedAt = types.StringValue(functionalitiesItem5.CreatedAt.Format(time.RFC3339Nano))
				} else {
					functionalities11.CreatedAt = types.StringNull()
				}
				functionalities11.Description = types.StringPointerValue(functionalitiesItem5.Description)
				functionalities11.ExternalResources = []tfTypes.ExternalResourceEntity{}
				for externalResourcesCount6, externalResourcesItem6 := range functionalitiesItem5.ExternalResources {
					var externalResources13 tfTypes.ExternalResourceEntity
					externalResources13.ConnectionID = types.StringPointerValue(externalResourcesItem6.ConnectionID)
					externalResources13.ConnectionName = types.StringPointerValue(externalResourcesItem6.ConnectionName)
					externalResources13.ConnectionType = types.StringPointerValue(externalResourcesItem6.ConnectionType)
					if externalResourcesItem6.CreatedAt != nil {
						externalResources13.CreatedAt = types.StringValue(externalResourcesItem6.CreatedAt.Format(time.RFC3339Nano))
					} else {
						externalResources13.CreatedAt = types.StringNull()
					}
					externalResources13.Name = types.StringPointerValue(externalResourcesItem6.Name)
					externalResources13.RemoteID = types.StringPointerValue(externalResourcesItem6.RemoteID)
					externalResources13.RemoteURL = types.StringPointerValue(externalResourcesItem6.RemoteURL)
					if externalResourcesItem6.UpdatedAt != nil {
						externalResources13.UpdatedAt = types.StringValue(externalResourcesItem6.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						externalResources13.UpdatedAt = types.StringNull()
					}
					if externalResourcesCount6+1 > len(functionalities11.ExternalResources) {
						functionalities11.ExternalResources = append(functionalities11.ExternalResources, externalResources13)
					} else {
						functionalities11.ExternalResources[externalResourcesCount6].ConnectionID = externalResources13.ConnectionID
						functionalities11.ExternalResources[externalResourcesCount6].ConnectionName = externalResources13.ConnectionName
						functionalities11.ExternalResources[externalResourcesCount6].ConnectionType = externalResources13.ConnectionType
						functionalities11.ExternalResources[externalResourcesCount6].CreatedAt = externalResources13.CreatedAt
						functionalities11.ExternalResources[externalResourcesCount6].Name = externalResources13.Name
						functionalities11.ExternalResources[externalResourcesCount6].RemoteID = externalResources13.RemoteID
						functionalities11.ExternalResources[externalResourcesCount6].RemoteURL = externalResources13.RemoteURL
						functionalities11.ExternalResources[externalResourcesCount6].UpdatedAt = externalResources13.UpdatedAt
					}
				}
				functionalities11.ID = types.StringPointerValue(functionalitiesItem5.ID)
				if len(functionalitiesItem5.Labels) > 0 {
					functionalities11.Labels = make(map[string]types.String)
					for key8, value14 := range functionalitiesItem5.Labels {
						functionalities11.Labels[key8] = types.StringValue(value14)
					}
				}
				functionalities11.Links = []tfTypes.LinksEntity{}
				for linksCount6, linksItem6 := range functionalitiesItem5.Links {
					var links13 tfTypes.LinksEntity
					links13.HrefURL = types.StringPointerValue(linksItem6.HrefURL)
					links13.IconURL = types.StringPointerValue(linksItem6.IconURL)
					links13.ID = types.StringPointerValue(linksItem6.ID)
					links13.Name = types.StringPointerValue(linksItem6.Name)
					if linksCount6+1 > len(functionalities11.Links) {
						functionalities11.Links = append(functionalities11.Links, links13)
					} else {
						functionalities11.Links[linksCount6].HrefURL = links13.HrefURL
						functionalities11.Links[linksCount6].IconURL = links13.IconURL
						functionalities11.Links[linksCount6].ID = links13.ID
						functionalities11.Links[linksCount6].Name = links13.Name
					}
				}
				functionalities11.Name = types.StringPointerValue(functionalitiesItem5.Name)
				if functionalitiesItem5.Owner == nil {
					functionalities11.Owner = nil
				} else {
					functionalities11.Owner = &tfTypes.TeamEntity1{}
				}
				functionalities11.Slug = types.StringPointerValue(functionalitiesItem5.Slug)
				if functionalitiesItem5.UpdatedAt != nil {
					functionalities11.UpdatedAt = types.StringValue(functionalitiesItem5.UpdatedAt.Format(time.RFC3339Nano))
				} else {
					functionalities11.UpdatedAt = types.StringNull()
				}
				if functionalitiesItem5.UpdatedBy == nil {
					functionalities11.UpdatedBy = nil
				} else {
					functionalities11.UpdatedBy = &tfTypes.AuthorEntity{}
					functionalities11.UpdatedBy.Email = types.StringPointerValue(functionalitiesItem5.UpdatedBy.Email)
					functionalities11.UpdatedBy.ID = types.StringPointerValue(functionalitiesItem5.UpdatedBy.ID)
					functionalities11.UpdatedBy.Name = types.StringPointerValue(functionalitiesItem5.UpdatedBy.Name)
					functionalities11.UpdatedBy.Source = types.StringPointerValue(functionalitiesItem5.UpdatedBy.Source)
				}
				if functionalitiesCount5+1 > len(teams1.Functionalities) {
					teams1.Functionalities = append(teams1.Functionalities, functionalities11)
				} else {
					teams1.Functionalities[functionalitiesCount5].ActiveIncidents = functionalities11.ActiveIncidents
					teams1.Functionalities[functionalitiesCount5].AlertOnAdd = functionalities11.AlertOnAdd
					teams1.Functionalities[functionalitiesCount5].AutoAddRespondingTeam = functionalities11.AutoAddRespondingTeam
					teams1.Functionalities[functionalitiesCount5].CreatedAt = functionalities11.CreatedAt
					teams1.Functionalities[functionalitiesCount5].Description = functionalities11.Description
					teams1.Functionalities[functionalitiesCount5].ExternalResources = functionalities11.ExternalResources
					teams1.Functionalities[functionalitiesCount5].ID = functionalities11.ID
					teams1.Functionalities[functionalitiesCount5].Labels = functionalities11.Labels
					teams1.Functionalities[functionalitiesCount5].Links = functionalities11.Links
					teams1.Functionalities[functionalitiesCount5].Name = functionalities11.Name
					teams1.Functionalities[functionalitiesCount5].Owner = functionalities11.Owner
					teams1.Functionalities[functionalitiesCount5].Slug = functionalities11.Slug
					teams1.Functionalities[functionalitiesCount5].UpdatedAt = functionalities11.UpdatedAt
					teams1.Functionalities[functionalitiesCount5].UpdatedBy = functionalities11.UpdatedBy
				}
			}
			teams1.ID = types.StringPointerValue(teamsItem.ID)
			teams1.Memberships = []tfTypes.MembershipEntity{}
			for membershipsCount2, membershipsItem2 := range teamsItem.Memberships {
				var memberships5 tfTypes.MembershipEntity
				if membershipsItem2.DefaultIncidentRole == nil {
					memberships5.DefaultIncidentRole = nil
				} else {
					memberships5.DefaultIncidentRole = &tfTypes.IncidentRoleEntity{}
					if membershipsItem2.DefaultIncidentRole.CreatedAt != nil {
						memberships5.DefaultIncidentRole.CreatedAt = types.StringValue(membershipsItem2.DefaultIncidentRole.CreatedAt.Format(time.RFC3339Nano))
					} else {
						memberships5.DefaultIncidentRole.CreatedAt = types.StringNull()
					}
					memberships5.DefaultIncidentRole.Description = types.StringPointerValue(membershipsItem2.DefaultIncidentRole.Description)
					if membershipsItem2.DefaultIncidentRole.DiscardedAt != nil {
						memberships5.DefaultIncidentRole.DiscardedAt = types.StringValue(membershipsItem2.DefaultIncidentRole.DiscardedAt.Format(time.RFC3339Nano))
					} else {
						memberships5.DefaultIncidentRole.DiscardedAt = types.StringNull()
					}
					memberships5.DefaultIncidentRole.ID = types.StringPointerValue(membershipsItem2.DefaultIncidentRole.ID)
					memberships5.DefaultIncidentRole.Name = types.StringPointerValue(membershipsItem2.DefaultIncidentRole.Name)
					memberships5.DefaultIncidentRole.Summary = types.StringPointerValue(membershipsItem2.DefaultIncidentRole.Summary)
					if membershipsItem2.DefaultIncidentRole.UpdatedAt != nil {
						memberships5.DefaultIncidentRole.UpdatedAt = types.StringValue(membershipsItem2.DefaultIncidentRole.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						memberships5.DefaultIncidentRole.UpdatedAt = types.StringNull()
					}
				}
				if membershipsItem2.Schedule == nil {
					memberships5.Schedule = nil
				} else {
					memberships5.Schedule = &tfTypes.ScheduleEntity{}
					memberships5.Schedule.Discarded = types.BoolPointerValue(membershipsItem2.Schedule.Discarded)
					memberships5.Schedule.ID = types.StringPointerValue(membershipsItem2.Schedule.ID)
					memberships5.Schedule.Integration = types.StringPointerValue(membershipsItem2.Schedule.Integration)
					memberships5.Schedule.Name = types.StringPointerValue(membershipsItem2.Schedule.Name)
				}
				if membershipsItem2.User == nil {
					memberships5.User = nil
				} else {
					memberships5.User = &tfTypes.UserEntity{}
					if membershipsItem2.User.CreatedAt != nil {
						memberships5.User.CreatedAt = types.StringValue(membershipsItem2.User.CreatedAt.Format(time.RFC3339Nano))
					} else {
						memberships5.User.CreatedAt = types.StringNull()
					}
					memberships5.User.Email = types.StringPointerValue(membershipsItem2.User.Email)
					memberships5.User.ID = types.StringPointerValue(membershipsItem2.User.ID)
					memberships5.User.Name = types.StringPointerValue(membershipsItem2.User.Name)
					memberships5.User.SignalsEnabledNotificationTypes = []types.String{}
					for _, v := range membershipsItem2.User.SignalsEnabledNotificationTypes {
						memberships5.User.SignalsEnabledNotificationTypes = append(memberships5.User.SignalsEnabledNotificationTypes, types.StringValue(v))
					}
					memberships5.User.SlackLinked = types.BoolPointerValue(membershipsItem2.User.SlackLinked)
					memberships5.User.SlackUserID = types.StringPointerValue(membershipsItem2.User.SlackUserID)
					if membershipsItem2.User.UpdatedAt != nil {
						memberships5.User.UpdatedAt = types.StringValue(membershipsItem2.User.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						memberships5.User.UpdatedAt = types.StringNull()
					}
				}
				if membershipsCount2+1 > len(teams1.Memberships) {
					teams1.Memberships = append(teams1.Memberships, memberships5)
				} else {
					teams1.Memberships[membershipsCount2].DefaultIncidentRole = memberships5.DefaultIncidentRole
					teams1.Memberships[membershipsCount2].Schedule = memberships5.Schedule
					teams1.Memberships[membershipsCount2].User = memberships5.User
				}
			}
			if teamsItem.MsTeamsChannel == nil {
				teams1.MsTeamsChannel = nil
			} else {
				teams1.MsTeamsChannel = &tfTypes.IntegrationsMicrosoftTeamsV2ChannelEntity{}
				teams1.MsTeamsChannel.ChannelID = types.StringPointerValue(teamsItem.MsTeamsChannel.ChannelID)
				teams1.MsTeamsChannel.ChannelName = types.StringPointerValue(teamsItem.MsTeamsChannel.ChannelName)
				teams1.MsTeamsChannel.ChannelURL = types.StringPointerValue(teamsItem.MsTeamsChannel.ChannelURL)
				teams1.MsTeamsChannel.ID = types.StringPointerValue(teamsItem.MsTeamsChannel.ID)
				if teamsItem.MsTeamsChannel.Incident == nil {
					teams1.MsTeamsChannel.Incident = nil
				} else {
					teams1.MsTeamsChannel.Incident = &tfTypes.IncidentEntity{}
					teams1.MsTeamsChannel.Incident.Active = types.BoolPointerValue(teamsItem.MsTeamsChannel.Incident.Active)
					teams1.MsTeamsChannel.Incident.AiIncidentSummary = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.AiIncidentSummary)
					teams1.MsTeamsChannel.Incident.ChannelID = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.ChannelID)
					teams1.MsTeamsChannel.Incident.ChannelName = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.ChannelName)
					teams1.MsTeamsChannel.Incident.ChannelReference = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.ChannelReference)
					teams1.MsTeamsChannel.Incident.ChannelStatus = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.ChannelStatus)
					teams1.MsTeamsChannel.Incident.ConferenceBridges = []tfTypes.IncidentsConferenceBridgeEntity{}
					for conferenceBridgesCount2, conferenceBridgesItem2 := range teamsItem.MsTeamsChannel.Incident.ConferenceBridges {
						var conferenceBridges5 tfTypes.IncidentsConferenceBridgeEntity
						conferenceBridges5.ID = types.StringPointerValue(conferenceBridgesItem2.ID)
						if conferenceBridgesCount2+1 > len(teams1.MsTeamsChannel.Incident.ConferenceBridges) {
							teams1.MsTeamsChannel.Incident.ConferenceBridges = append(teams1.MsTeamsChannel.Incident.ConferenceBridges, conferenceBridges5)
						} else {
							teams1.MsTeamsChannel.Incident.ConferenceBridges[conferenceBridgesCount2].ID = conferenceBridges5.ID
						}
					}
					if teamsItem.MsTeamsChannel.Incident.ContextObject == nil {
						teams1.MsTeamsChannel.Incident.ContextObject = nil
					} else {
						teams1.MsTeamsChannel.Incident.ContextObject = &tfTypes.IncidentsContextObjectEntity{}
						teams1.MsTeamsChannel.Incident.ContextObject.ContextDescription = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.ContextObject.ContextDescription)
						teams1.MsTeamsChannel.Incident.ContextObject.ContextTag = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.ContextObject.ContextTag)
						teams1.MsTeamsChannel.Incident.ContextObject.ObjectID = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.ContextObject.ObjectID)
						teams1.MsTeamsChannel.Incident.ContextObject.ObjectType = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.ContextObject.ObjectType)
					}
					teams1.MsTeamsChannel.Incident.Conversations = []tfTypes.ConversationsAPIEntitiesReference{}
					for conversationsCount6, conversationsItem6 := range teamsItem.MsTeamsChannel.Incident.Conversations {
						var conversations13 tfTypes.ConversationsAPIEntitiesReference
						if conversationsItem6.Channel == nil {
							conversations13.Channel = nil
						} else {
							conversations13.Channel = &tfTypes.ConversationsAPIEntitiesChannel{}
							conversations13.Channel.Name = types.StringPointerValue(conversationsItem6.Channel.Name)
						}
						conversations13.CommentsURL = types.StringPointerValue(conversationsItem6.CommentsURL)
						conversations13.Field = types.StringPointerValue(conversationsItem6.Field)
						conversations13.ID = types.StringPointerValue(conversationsItem6.ID)
						conversations13.ResourceClass = types.StringPointerValue(conversationsItem6.ResourceClass)
						conversations13.ResourceID = types.StringPointerValue(conversationsItem6.ResourceID)
						if conversationsCount6+1 > len(teams1.MsTeamsChannel.Incident.Conversations) {
							teams1.MsTeamsChannel.Incident.Conversations = append(teams1.MsTeamsChannel.Incident.Conversations, conversations13)
						} else {
							teams1.MsTeamsChannel.Incident.Conversations[conversationsCount6].Channel = conversations13.Channel
							teams1.MsTeamsChannel.Incident.Conversations[conversationsCount6].CommentsURL = conversations13.CommentsURL
							teams1.MsTeamsChannel.Incident.Conversations[conversationsCount6].Field = conversations13.Field
							teams1.MsTeamsChannel.Incident.Conversations[conversationsCount6].ID = conversations13.ID
							teams1.MsTeamsChannel.Incident.Conversations[conversationsCount6].ResourceClass = conversations13.ResourceClass
							teams1.MsTeamsChannel.Incident.Conversations[conversationsCount6].ResourceID = conversations13.ResourceID
						}
					}
					if teamsItem.MsTeamsChannel.Incident.CreatedAt != nil {
						teams1.MsTeamsChannel.Incident.CreatedAt = types.StringValue(teamsItem.MsTeamsChannel.Incident.CreatedAt.Format(time.RFC3339Nano))
					} else {
						teams1.MsTeamsChannel.Incident.CreatedAt = types.StringNull()
					}
					if teamsItem.MsTeamsChannel.Incident.CreatedBy == nil {
						teams1.MsTeamsChannel.Incident.CreatedBy = nil
					} else {
						teams1.MsTeamsChannel.Incident.CreatedBy = &tfTypes.AuthorEntity{}
						teams1.MsTeamsChannel.Incident.CreatedBy.Email = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.CreatedBy.Email)
						teams1.MsTeamsChannel.Incident.CreatedBy.ID = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.CreatedBy.ID)
						teams1.MsTeamsChannel.Incident.CreatedBy.Name = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.CreatedBy.Name)
						teams1.MsTeamsChannel.Incident.CreatedBy.Source = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.CreatedBy.Source)
					}
					teams1.MsTeamsChannel.Incident.CurrentMilestone = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.CurrentMilestone)
					teams1.MsTeamsChannel.Incident.CustomFields = []tfTypes.CustomFieldsFieldValue{}
					for customFieldsCount2, customFieldsItem2 := range teamsItem.MsTeamsChannel.Incident.CustomFields {
						var customFields5 tfTypes.CustomFieldsFieldValue
						customFields5.Description = types.StringPointerValue(customFieldsItem2.Description)
						customFields5.DisplayName = types.StringPointerValue(customFieldsItem2.DisplayName)
						customFields5.FieldID = types.StringPointerValue(customFieldsItem2.FieldID)
						customFields5.Name = types.StringPointerValue(customFieldsItem2.Name)
						customFields5.Slug = types.StringPointerValue(customFieldsItem2.Slug)
						customFields5.Value = types.StringPointerValue(customFieldsItem2.Value)
						customFields5.ValueArray = types.StringPointerValue(customFieldsItem2.ValueArray)
						customFields5.ValueString = types.StringPointerValue(customFieldsItem2.ValueString)
						customFields5.ValueType = types.StringPointerValue(customFieldsItem2.ValueType)
						if customFieldsCount2+1 > len(teams1.MsTeamsChannel.Incident.CustomFields) {
							teams1.MsTeamsChannel.Incident.CustomFields = append(teams1.MsTeamsChannel.Incident.CustomFields, customFields5)
						} else {
							teams1.MsTeamsChannel.Incident.CustomFields[customFieldsCount2].Description = customFields5.Description
							teams1.MsTeamsChannel.Incident.CustomFields[customFieldsCount2].DisplayName = customFields5.DisplayName
							teams1.MsTeamsChannel.Incident.CustomFields[customFieldsCount2].FieldID = customFields5.FieldID
							teams1.MsTeamsChannel.Incident.CustomFields[customFieldsCount2].Name = customFields5.Name
							teams1.MsTeamsChannel.Incident.CustomFields[customFieldsCount2].Slug = customFields5.Slug
							teams1.MsTeamsChannel.Incident.CustomFields[customFieldsCount2].Value = customFields5.Value
							teams1.MsTeamsChannel.Incident.CustomFields[customFieldsCount2].ValueArray = customFields5.ValueArray
							teams1.MsTeamsChannel.Incident.CustomFields[customFieldsCount2].ValueString = customFields5.ValueString
							teams1.MsTeamsChannel.Incident.CustomFields[customFieldsCount2].ValueType = customFields5.ValueType
						}
					}
					teams1.MsTeamsChannel.Incident.CustomerImpactSummary = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.CustomerImpactSummary)
					if teamsItem.MsTeamsChannel.Incident.CustomersImpacted != nil {
						teams1.MsTeamsChannel.Incident.CustomersImpacted = types.Int64Value(int64(*teamsItem.MsTeamsChannel.Incident.CustomersImpacted))
					} else {
						teams1.MsTeamsChannel.Incident.CustomersImpacted = types.Int64Null()
					}
					teams1.MsTeamsChannel.Incident.Description = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Description)
					if teamsItem.MsTeamsChannel.Incident.DiscardedAt != nil {
						teams1.MsTeamsChannel.Incident.DiscardedAt = types.StringValue(teamsItem.MsTeamsChannel.Incident.DiscardedAt.Format(time.RFC3339Nano))
					} else {
						teams1.MsTeamsChannel.Incident.DiscardedAt = types.StringNull()
					}
					teams1.MsTeamsChannel.Incident.Environments = []tfTypes.SuccinctEntity{}
					for environmentsCount2, environmentsItem2 := range teamsItem.MsTeamsChannel.Incident.Environments {
						var environments5 tfTypes.SuccinctEntity
						environments5.ID = types.StringPointerValue(environmentsItem2.ID)
						environments5.Name = types.StringPointerValue(environmentsItem2.Name)
						if environmentsCount2+1 > len(teams1.MsTeamsChannel.Incident.Environments) {
							teams1.MsTeamsChannel.Incident.Environments = append(teams1.MsTeamsChannel.Incident.Environments, environments5)
						} else {
							teams1.MsTeamsChannel.Incident.Environments[environmentsCount2].ID = environments5.ID
							teams1.MsTeamsChannel.Incident.Environments[environmentsCount2].Name = environments5.Name
						}
					}
					teams1.MsTeamsChannel.Incident.FieldRequirements = []tfTypes.IncidentEntityFieldRequirementEntity{}
					for fieldRequirementsCount2, fieldRequirementsItem2 := range teamsItem.MsTeamsChannel.Incident.FieldRequirements {
						var fieldRequirements5 tfTypes.IncidentEntityFieldRequirementEntity
						fieldRequirements5.FieldID = types.StringPointerValue(fieldRequirementsItem2.FieldID)
						fieldRequirements5.RequiredAtMilestoneID = types.StringPointerValue(fieldRequirementsItem2.RequiredAtMilestoneID)
						if fieldRequirementsCount2+1 > len(teams1.MsTeamsChannel.Incident.FieldRequirements) {
							teams1.MsTeamsChannel.Incident.FieldRequirements = append(teams1.MsTeamsChannel.Incident.FieldRequirements, fieldRequirements5)
						} else {
							teams1.MsTeamsChannel.Incident.FieldRequirements[fieldRequirementsCount2].FieldID = fieldRequirements5.FieldID
							teams1.MsTeamsChannel.Incident.FieldRequirements[fieldRequirementsCount2].RequiredAtMilestoneID = fieldRequirements5.RequiredAtMilestoneID
						}
					}
					teams1.MsTeamsChannel.Incident.Functionalities = []tfTypes.SuccinctEntity{}
					for functionalitiesCount6, functionalitiesItem6 := range teamsItem.MsTeamsChannel.Incident.Functionalities {
						var functionalities13 tfTypes.SuccinctEntity
						functionalities13.ID = types.StringPointerValue(functionalitiesItem6.ID)
						functionalities13.Name = types.StringPointerValue(functionalitiesItem6.Name)
						if functionalitiesCount6+1 > len(teams1.MsTeamsChannel.Incident.Functionalities) {
							teams1.MsTeamsChannel.Incident.Functionalities = append(teams1.MsTeamsChannel.Incident.Functionalities, functionalities13)
						} else {
							teams1.MsTeamsChannel.Incident.Functionalities[functionalitiesCount6].ID = functionalities13.ID
							teams1.MsTeamsChannel.Incident.Functionalities[functionalitiesCount6].Name = functionalities13.Name
						}
					}
					teams1.MsTeamsChannel.Incident.ID = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.ID)
					teams1.MsTeamsChannel.Incident.Impacts = []tfTypes.IncidentsImpactEntity{}
					for impactsCount2, impactsItem2 := range teamsItem.MsTeamsChannel.Incident.Impacts {
						var impacts5 tfTypes.IncidentsImpactEntity
						if impactsItem2.Condition == nil {
							impacts5.Condition = nil
						} else {
							impacts5.Condition = &tfTypes.SeverityMatrixConditionEntity{}
							impacts5.Condition.ID = types.StringPointerValue(impactsItem2.Condition.ID)
							impacts5.Condition.Name = types.StringPointerValue(impactsItem2.Condition.Name)
							if impactsItem2.Condition.Position != nil {
								impacts5.Condition.Position = types.Int64Value(int64(*impactsItem2.Condition.Position))
							} else {
								impacts5.Condition.Position = types.Int64Null()
							}
						}
						impacts5.Conversations = []tfTypes.ConversationsAPIEntitiesReference{}
						for conversationsCount7, conversationsItem7 := range impactsItem2.Conversations {
							var conversations15 tfTypes.ConversationsAPIEntitiesReference
							if conversationsItem7.Channel == nil {
								conversations15.Channel = nil
							} else {
								conversations15.Channel = &tfTypes.ConversationsAPIEntitiesChannel{}
								conversations15.Channel.Name = types.StringPointerValue(conversationsItem7.Channel.Name)
							}
							conversations15.CommentsURL = types.StringPointerValue(conversationsItem7.CommentsURL)
							conversations15.Field = types.StringPointerValue(conversationsItem7.Field)
							conversations15.ID = types.StringPointerValue(conversationsItem7.ID)
							conversations15.ResourceClass = types.StringPointerValue(conversationsItem7.ResourceClass)
							conversations15.ResourceID = types.StringPointerValue(conversationsItem7.ResourceID)
							if conversationsCount7+1 > len(impacts5.Conversations) {
								impacts5.Conversations = append(impacts5.Conversations, conversations15)
							} else {
								impacts5.Conversations[conversationsCount7].Channel = conversations15.Channel
								impacts5.Conversations[conversationsCount7].CommentsURL = conversations15.CommentsURL
								impacts5.Conversations[conversationsCount7].Field = conversations15.Field
								impacts5.Conversations[conversationsCount7].ID = conversations15.ID
								impacts5.Conversations[conversationsCount7].ResourceClass = conversations15.ResourceClass
								impacts5.Conversations[conversationsCount7].ResourceID = conversations15.ResourceID
							}
						}
						impacts5.ID = types.StringPointerValue(impactsItem2.ID)
						if impactsItem2.Impact == nil {
							impacts5.Impact = nil
						} else {
							impacts5.Impact = &tfTypes.SuccinctEntity{}
							impacts5.Impact.ID = types.StringPointerValue(impactsItem2.Impact.ID)
							impacts5.Impact.Name = types.StringPointerValue(impactsItem2.Impact.Name)
						}
						if impactsItem2.Type != nil {
							impacts5.Type = types.StringValue(string(*impactsItem2.Type))
						} else {
							impacts5.Type = types.StringNull()
						}
						if impactsCount2+1 > len(teams1.MsTeamsChannel.Incident.Impacts) {
							teams1.MsTeamsChannel.Incident.Impacts = append(teams1.MsTeamsChannel.Incident.Impacts, impacts5)
						} else {
							teams1.MsTeamsChannel.Incident.Impacts[impactsCount2].Condition = impacts5.Condition
							teams1.MsTeamsChannel.Incident.Impacts[impactsCount2].Conversations = impacts5.Conversations
							teams1.MsTeamsChannel.Incident.Impacts[impactsCount2].ID = impacts5.ID
							teams1.MsTeamsChannel.Incident.Impacts[impactsCount2].Impact = impacts5.Impact
							teams1.MsTeamsChannel.Incident.Impacts[impactsCount2].Type = impacts5.Type
						}
					}
					teams1.MsTeamsChannel.Incident.IncidentChannels = []tfTypes.IncidentsChannelEntity{}
					for incidentChannelsCount2, incidentChannelsItem2 := range teamsItem.MsTeamsChannel.Incident.IncidentChannels {
						var incidentChannels5 tfTypes.IncidentsChannelEntity
						incidentChannels5.IconURL = types.StringPointerValue(incidentChannelsItem2.IconURL)
						incidentChannels5.ID = types.StringPointerValue(incidentChannelsItem2.ID)
						incidentChannels5.Name = types.StringPointerValue(incidentChannelsItem2.Name)
						incidentChannels5.Source = types.StringPointerValue(incidentChannelsItem2.Source)
						incidentChannels5.SourceID = types.StringPointerValue(incidentChannelsItem2.SourceID)
						incidentChannels5.SourceName = types.StringPointerValue(incidentChannelsItem2.SourceName)
						incidentChannels5.Status = types.StringPointerValue(incidentChannelsItem2.Status)
						incidentChannels5.URL = types.StringPointerValue(incidentChannelsItem2.URL)
						if incidentChannelsCount2+1 > len(teams1.MsTeamsChannel.Incident.IncidentChannels) {
							teams1.MsTeamsChannel.Incident.IncidentChannels = append(teams1.MsTeamsChannel.Incident.IncidentChannels, incidentChannels5)
						} else {
							teams1.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount2].IconURL = incidentChannels5.IconURL
							teams1.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount2].ID = incidentChannels5.ID
							teams1.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount2].Name = incidentChannels5.Name
							teams1.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount2].Source = incidentChannels5.Source
							teams1.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount2].SourceID = incidentChannels5.SourceID
							teams1.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount2].SourceName = incidentChannels5.SourceName
							teams1.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount2].Status = incidentChannels5.Status
							teams1.MsTeamsChannel.Incident.IncidentChannels[incidentChannelsCount2].URL = incidentChannels5.URL
						}
					}
					teams1.MsTeamsChannel.Incident.IncidentTickets = []tfTypes.TicketingTicketEntity{}
					for incidentTicketsCount2, incidentTicketsItem2 := range teamsItem.MsTeamsChannel.Incident.IncidentTickets {
						var incidentTickets5 tfTypes.TicketingTicketEntity
						incidentTickets5.Assignees = []tfTypes.AuthorEntity{}
						for assigneesCount4, assigneesItem4 := range incidentTicketsItem2.Assignees {
							var assignees9 tfTypes.AuthorEntity
							assignees9.Email = types.StringPointerValue(assigneesItem4.Email)
							assignees9.ID = types.StringPointerValue(assigneesItem4.ID)
							assignees9.Name = types.StringPointerValue(assigneesItem4.Name)
							assignees9.Source = types.StringPointerValue(assigneesItem4.Source)
							if assigneesCount4+1 > len(incidentTickets5.Assignees) {
								incidentTickets5.Assignees = append(incidentTickets5.Assignees, assignees9)
							} else {
								incidentTickets5.Assignees[assigneesCount4].Email = assignees9.Email
								incidentTickets5.Assignees[assigneesCount4].ID = assignees9.ID
								incidentTickets5.Assignees[assigneesCount4].Name = assignees9.Name
								incidentTickets5.Assignees[assigneesCount4].Source = assignees9.Source
							}
						}
						if incidentTicketsItem2.CreatedAt != nil {
							incidentTickets5.CreatedAt = types.StringValue(incidentTicketsItem2.CreatedAt.Format(time.RFC3339Nano))
						} else {
							incidentTickets5.CreatedAt = types.StringNull()
						}
						if incidentTicketsItem2.CreatedBy == nil {
							incidentTickets5.CreatedBy = nil
						} else {
							incidentTickets5.CreatedBy = &tfTypes.AuthorEntity{}
							incidentTickets5.CreatedBy.Email = types.StringPointerValue(incidentTicketsItem2.CreatedBy.Email)
							incidentTickets5.CreatedBy.ID = types.StringPointerValue(incidentTicketsItem2.CreatedBy.ID)
							incidentTickets5.CreatedBy.Name = types.StringPointerValue(incidentTicketsItem2.CreatedBy.Name)
							incidentTickets5.CreatedBy.Source = types.StringPointerValue(incidentTicketsItem2.CreatedBy.Source)
						}
						incidentTickets5.Description = types.StringPointerValue(incidentTicketsItem2.Description)
						if incidentTicketsItem2.DueAt != nil {
							incidentTickets5.DueAt = types.StringValue(incidentTicketsItem2.DueAt.Format(time.RFC3339Nano))
						} else {
							incidentTickets5.DueAt = types.StringNull()
						}
						incidentTickets5.ID = types.StringPointerValue(incidentTicketsItem2.ID)
						incidentTickets5.IncidentCurrentMilestone = types.StringPointerValue(incidentTicketsItem2.IncidentCurrentMilestone)
						incidentTickets5.IncidentID = types.StringPointerValue(incidentTicketsItem2.IncidentID)
						incidentTickets5.IncidentName = types.StringPointerValue(incidentTicketsItem2.IncidentName)
						if incidentTicketsItem2.Link == nil {
							incidentTickets5.Link = nil
						} else {
							incidentTickets5.Link = &tfTypes.AttachmentsLinkEntity{}
							incidentTickets5.Link.Deletable = types.BoolPointerValue(incidentTicketsItem2.Link.Deletable)
							incidentTickets5.Link.DisplayText = types.StringPointerValue(incidentTicketsItem2.Link.DisplayText)
							incidentTickets5.Link.Editable = types.BoolPointerValue(incidentTicketsItem2.Link.Editable)
							incidentTickets5.Link.HrefURL = types.StringPointerValue(incidentTicketsItem2.Link.HrefURL)
							incidentTickets5.Link.IconURL = types.StringPointerValue(incidentTicketsItem2.Link.IconURL)
							incidentTickets5.Link.ID = types.StringPointerValue(incidentTicketsItem2.Link.ID)
							incidentTickets5.Link.Type = types.StringPointerValue(incidentTicketsItem2.Link.Type)
						}
						if incidentTicketsItem2.Priority == nil {
							incidentTickets5.Priority = nil
						} else {
							incidentTickets5.Priority = &tfTypes.TicketingPriorityEntity{}
							if incidentTicketsItem2.Priority.CreatedAt != nil {
								incidentTickets5.Priority.CreatedAt = types.StringValue(incidentTicketsItem2.Priority.CreatedAt.Format(time.RFC3339Nano))
							} else {
								incidentTickets5.Priority.CreatedAt = types.StringNull()
							}
							incidentTickets5.Priority.ID = types.StringPointerValue(incidentTicketsItem2.Priority.ID)
							incidentTickets5.Priority.Name = types.StringPointerValue(incidentTicketsItem2.Priority.Name)
							if incidentTicketsItem2.Priority.Position != nil {
								incidentTickets5.Priority.Position = types.Int64Value(int64(*incidentTicketsItem2.Priority.Position))
							} else {
								incidentTickets5.Priority.Position = types.Int64Null()
							}
							if incidentTicketsItem2.Priority.UpdatedAt != nil {
								incidentTickets5.Priority.UpdatedAt = types.StringValue(incidentTicketsItem2.Priority.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								incidentTickets5.Priority.UpdatedAt = types.StringNull()
							}
						}
						if incidentTicketsItem2.State != nil {
							incidentTickets5.State = types.StringValue(string(*incidentTicketsItem2.State))
						} else {
							incidentTickets5.State = types.StringNull()
						}
						incidentTickets5.Summary = types.StringPointerValue(incidentTicketsItem2.Summary)
						incidentTickets5.TagList = []types.String{}
						for _, v := range incidentTicketsItem2.TagList {
							incidentTickets5.TagList = append(incidentTickets5.TagList, types.StringValue(v))
						}
						incidentTickets5.TaskID = types.StringPointerValue(incidentTicketsItem2.TaskID)
						if incidentTicketsItem2.Type != nil {
							incidentTickets5.Type = types.StringValue(string(*incidentTicketsItem2.Type))
						} else {
							incidentTickets5.Type = types.StringNull()
						}
						if incidentTicketsItem2.UpdatedAt != nil {
							incidentTickets5.UpdatedAt = types.StringValue(incidentTicketsItem2.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							incidentTickets5.UpdatedAt = types.StringNull()
						}
						if incidentTicketsCount2+1 > len(teams1.MsTeamsChannel.Incident.IncidentTickets) {
							teams1.MsTeamsChannel.Incident.IncidentTickets = append(teams1.MsTeamsChannel.Incident.IncidentTickets, incidentTickets5)
						} else {
							teams1.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount2].Assignees = incidentTickets5.Assignees
							teams1.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount2].CreatedAt = incidentTickets5.CreatedAt
							teams1.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount2].CreatedBy = incidentTickets5.CreatedBy
							teams1.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount2].Description = incidentTickets5.Description
							teams1.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount2].DueAt = incidentTickets5.DueAt
							teams1.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount2].ID = incidentTickets5.ID
							teams1.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount2].IncidentCurrentMilestone = incidentTickets5.IncidentCurrentMilestone
							teams1.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount2].IncidentID = incidentTickets5.IncidentID
							teams1.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount2].IncidentName = incidentTickets5.IncidentName
							teams1.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount2].Link = incidentTickets5.Link
							teams1.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount2].Priority = incidentTickets5.Priority
							teams1.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount2].State = incidentTickets5.State
							teams1.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount2].Summary = incidentTickets5.Summary
							teams1.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount2].TagList = incidentTickets5.TagList
							teams1.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount2].TaskID = incidentTickets5.TaskID
							teams1.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount2].Type = incidentTickets5.Type
							teams1.MsTeamsChannel.Incident.IncidentTickets[incidentTicketsCount2].UpdatedAt = incidentTickets5.UpdatedAt
						}
					}
					teams1.MsTeamsChannel.Incident.IncidentURL = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.IncidentURL)
					if len(teamsItem.MsTeamsChannel.Incident.Labels) > 0 {
						teams1.MsTeamsChannel.Incident.Labels = make(map[string]types.String)
						for key9, value16 := range teamsItem.MsTeamsChannel.Incident.Labels {
							teams1.MsTeamsChannel.Incident.Labels[key9] = types.StringValue(value16)
						}
					}
					if teamsItem.MsTeamsChannel.Incident.LastNote == nil {
						teams1.MsTeamsChannel.Incident.LastNote = nil
					} else {
						teams1.MsTeamsChannel.Incident.LastNote = &tfTypes.EventNoteEntity{}
						teams1.MsTeamsChannel.Incident.LastNote.Body = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.LastNote.Body)
						teams1.MsTeamsChannel.Incident.LastNote.Conversations = []tfTypes.ConversationsAPIEntitiesReference{}
						for conversationsCount8, conversationsItem8 := range teamsItem.MsTeamsChannel.Incident.LastNote.Conversations {
							var conversations17 tfTypes.ConversationsAPIEntitiesReference
							if conversationsItem8.Channel == nil {
								conversations17.Channel = nil
							} else {
								conversations17.Channel = &tfTypes.ConversationsAPIEntitiesChannel{}
								conversations17.Channel.Name = types.StringPointerValue(conversationsItem8.Channel.Name)
							}
							conversations17.CommentsURL = types.StringPointerValue(conversationsItem8.CommentsURL)
							conversations17.Field = types.StringPointerValue(conversationsItem8.Field)
							conversations17.ID = types.StringPointerValue(conversationsItem8.ID)
							conversations17.ResourceClass = types.StringPointerValue(conversationsItem8.ResourceClass)
							conversations17.ResourceID = types.StringPointerValue(conversationsItem8.ResourceID)
							if conversationsCount8+1 > len(teams1.MsTeamsChannel.Incident.LastNote.Conversations) {
								teams1.MsTeamsChannel.Incident.LastNote.Conversations = append(teams1.MsTeamsChannel.Incident.LastNote.Conversations, conversations17)
							} else {
								teams1.MsTeamsChannel.Incident.LastNote.Conversations[conversationsCount8].Channel = conversations17.Channel
								teams1.MsTeamsChannel.Incident.LastNote.Conversations[conversationsCount8].CommentsURL = conversations17.CommentsURL
								teams1.MsTeamsChannel.Incident.LastNote.Conversations[conversationsCount8].Field = conversations17.Field
								teams1.MsTeamsChannel.Incident.LastNote.Conversations[conversationsCount8].ID = conversations17.ID
								teams1.MsTeamsChannel.Incident.LastNote.Conversations[conversationsCount8].ResourceClass = conversations17.ResourceClass
								teams1.MsTeamsChannel.Incident.LastNote.Conversations[conversationsCount8].ResourceID = conversations17.ResourceID
							}
						}
						if teamsItem.MsTeamsChannel.Incident.LastNote.CreatedAt != nil {
							teams1.MsTeamsChannel.Incident.LastNote.CreatedAt = types.StringValue(teamsItem.MsTeamsChannel.Incident.LastNote.CreatedAt.Format(time.RFC3339Nano))
						} else {
							teams1.MsTeamsChannel.Incident.LastNote.CreatedAt = types.StringNull()
						}
						teams1.MsTeamsChannel.Incident.LastNote.ID = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.LastNote.ID)
						teams1.MsTeamsChannel.Incident.LastNote.StatusPages = []tfTypes.IncidentsStatusPageEntity{}
						for statusPagesCount4, statusPagesItem4 := range teamsItem.MsTeamsChannel.Incident.LastNote.StatusPages {
							var statusPages9 tfTypes.IncidentsStatusPageEntity
							statusPages9.DisplayName = types.StringPointerValue(statusPagesItem4.DisplayName)
							statusPages9.ExternalID = types.StringPointerValue(statusPagesItem4.ExternalID)
							statusPages9.ID = types.StringPointerValue(statusPagesItem4.ID)
							if statusPagesItem4.Integration == nil {
								statusPages9.Integration = nil
							} else {
								statusPages9.Integration = &tfTypes.IntegrationEntity{}
								if statusPagesItem4.Integration.CreatedAt != nil {
									statusPages9.Integration.CreatedAt = types.StringValue(statusPagesItem4.Integration.CreatedAt.Format(time.RFC3339Nano))
								} else {
									statusPages9.Integration.CreatedAt = types.StringNull()
								}
								statusPages9.Integration.DisplayName = types.StringPointerValue(statusPagesItem4.Integration.DisplayName)
								statusPages9.Integration.ID = types.StringPointerValue(statusPagesItem4.Integration.ID)
								statusPages9.Integration.IntegrationName = types.StringPointerValue(statusPagesItem4.Integration.IntegrationName)
								statusPages9.Integration.IntegrationSlug = types.StringPointerValue(statusPagesItem4.Integration.IntegrationSlug)
							}
							statusPages9.Name = types.StringPointerValue(statusPagesItem4.Name)
							statusPages9.URL = types.StringPointerValue(statusPagesItem4.URL)
							if statusPagesCount4+1 > len(teams1.MsTeamsChannel.Incident.LastNote.StatusPages) {
								teams1.MsTeamsChannel.Incident.LastNote.StatusPages = append(teams1.MsTeamsChannel.Incident.LastNote.StatusPages, statusPages9)
							} else {
								teams1.MsTeamsChannel.Incident.LastNote.StatusPages[statusPagesCount4].DisplayName = statusPages9.DisplayName
								teams1.MsTeamsChannel.Incident.LastNote.StatusPages[statusPagesCount4].ExternalID = statusPages9.ExternalID
								teams1.MsTeamsChannel.Incident.LastNote.StatusPages[statusPagesCount4].ID = statusPages9.ID
								teams1.MsTeamsChannel.Incident.LastNote.StatusPages[statusPagesCount4].Integration = statusPages9.Integration
								teams1.MsTeamsChannel.Incident.LastNote.StatusPages[statusPagesCount4].Name = statusPages9.Name
								teams1.MsTeamsChannel.Incident.LastNote.StatusPages[statusPagesCount4].URL = statusPages9.URL
							}
						}
					}
					teams1.MsTeamsChannel.Incident.LastUpdate = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.LastUpdate)
					teams1.MsTeamsChannel.Incident.LifecycleMeasurements = []tfTypes.IncidentsLifecycleMeasurementEntity{}
					for lifecycleMeasurementsCount2, lifecycleMeasurementsItem2 := range teamsItem.MsTeamsChannel.Incident.LifecycleMeasurements {
						var lifecycleMeasurements5 tfTypes.IncidentsLifecycleMeasurementEntity
						if lifecycleMeasurementsItem2.CalculatedAt != nil {
							lifecycleMeasurements5.CalculatedAt = types.StringValue(lifecycleMeasurementsItem2.CalculatedAt.Format(time.RFC3339Nano))
						} else {
							lifecycleMeasurements5.CalculatedAt = types.StringNull()
						}
						lifecycleMeasurements5.Description = types.StringPointerValue(lifecycleMeasurementsItem2.Description)
						lifecycleMeasurements5.EndsAtMilestone = types.StringPointerValue(lifecycleMeasurementsItem2.EndsAtMilestone)
						lifecycleMeasurements5.ID = types.StringPointerValue(lifecycleMeasurementsItem2.ID)
						lifecycleMeasurements5.Name = types.StringPointerValue(lifecycleMeasurementsItem2.Name)
						lifecycleMeasurements5.Slug = types.StringPointerValue(lifecycleMeasurementsItem2.Slug)
						lifecycleMeasurements5.StartsAtMilestone = types.StringPointerValue(lifecycleMeasurementsItem2.StartsAtMilestone)
						lifecycleMeasurements5.Value = types.StringPointerValue(lifecycleMeasurementsItem2.Value)
						if lifecycleMeasurementsCount2+1 > len(teams1.MsTeamsChannel.Incident.LifecycleMeasurements) {
							teams1.MsTeamsChannel.Incident.LifecycleMeasurements = append(teams1.MsTeamsChannel.Incident.LifecycleMeasurements, lifecycleMeasurements5)
						} else {
							teams1.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount2].CalculatedAt = lifecycleMeasurements5.CalculatedAt
							teams1.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount2].Description = lifecycleMeasurements5.Description
							teams1.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount2].EndsAtMilestone = lifecycleMeasurements5.EndsAtMilestone
							teams1.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount2].ID = lifecycleMeasurements5.ID
							teams1.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount2].Name = lifecycleMeasurements5.Name
							teams1.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount2].Slug = lifecycleMeasurements5.Slug
							teams1.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount2].StartsAtMilestone = lifecycleMeasurements5.StartsAtMilestone
							teams1.MsTeamsChannel.Incident.LifecycleMeasurements[lifecycleMeasurementsCount2].Value = lifecycleMeasurements5.Value
						}
					}
					teams1.MsTeamsChannel.Incident.LifecyclePhases = []tfTypes.IncidentsLifecyclePhaseEntity{}
					for lifecyclePhasesCount2, lifecyclePhasesItem2 := range teamsItem.MsTeamsChannel.Incident.LifecyclePhases {
						var lifecyclePhases5 tfTypes.IncidentsLifecyclePhaseEntity
						lifecyclePhases5.Description = types.StringPointerValue(lifecyclePhasesItem2.Description)
						lifecyclePhases5.ID = types.StringPointerValue(lifecyclePhasesItem2.ID)
						lifecyclePhases5.Milestones = []tfTypes.IncidentsLifecycleMilestoneEntity{}
						for milestonesCount4, milestonesItem4 := range lifecyclePhasesItem2.Milestones {
							var milestones9 tfTypes.IncidentsLifecycleMilestoneEntity
							milestones9.Description = types.StringPointerValue(milestonesItem4.Description)
							milestones9.Duration = types.StringPointerValue(milestonesItem4.Duration)
							milestones9.ID = types.StringPointerValue(milestonesItem4.ID)
							milestones9.Name = types.StringPointerValue(milestonesItem4.Name)
							if milestonesItem4.OccurredAt != nil {
								milestones9.OccurredAt = types.StringValue(milestonesItem4.OccurredAt.Format(time.RFC3339Nano))
							} else {
								milestones9.OccurredAt = types.StringNull()
							}
							if milestonesItem4.Position != nil {
								milestones9.Position = types.Int64Value(int64(*milestonesItem4.Position))
							} else {
								milestones9.Position = types.Int64Null()
							}
							milestones9.Slug = types.StringPointerValue(milestonesItem4.Slug)
							if milestonesItem4.UpdatedAt != nil {
								milestones9.UpdatedAt = types.StringValue(milestonesItem4.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								milestones9.UpdatedAt = types.StringNull()
							}
							if milestonesItem4.UpdatedBy == nil {
								milestones9.UpdatedBy = nil
							} else {
								milestones9.UpdatedBy = &tfTypes.AuthorEntity{}
								milestones9.UpdatedBy.Email = types.StringPointerValue(milestonesItem4.UpdatedBy.Email)
								milestones9.UpdatedBy.ID = types.StringPointerValue(milestonesItem4.UpdatedBy.ID)
								milestones9.UpdatedBy.Name = types.StringPointerValue(milestonesItem4.UpdatedBy.Name)
								milestones9.UpdatedBy.Source = types.StringPointerValue(milestonesItem4.UpdatedBy.Source)
							}
							if milestonesCount4+1 > len(lifecyclePhases5.Milestones) {
								lifecyclePhases5.Milestones = append(lifecyclePhases5.Milestones, milestones9)
							} else {
								lifecyclePhases5.Milestones[milestonesCount4].Description = milestones9.Description
								lifecyclePhases5.Milestones[milestonesCount4].Duration = milestones9.Duration
								lifecyclePhases5.Milestones[milestonesCount4].ID = milestones9.ID
								lifecyclePhases5.Milestones[milestonesCount4].Name = milestones9.Name
								lifecyclePhases5.Milestones[milestonesCount4].OccurredAt = milestones9.OccurredAt
								lifecyclePhases5.Milestones[milestonesCount4].Position = milestones9.Position
								lifecyclePhases5.Milestones[milestonesCount4].Slug = milestones9.Slug
								lifecyclePhases5.Milestones[milestonesCount4].UpdatedAt = milestones9.UpdatedAt
								lifecyclePhases5.Milestones[milestonesCount4].UpdatedBy = milestones9.UpdatedBy
							}
						}
						lifecyclePhases5.Name = types.StringPointerValue(lifecyclePhasesItem2.Name)
						if lifecyclePhasesItem2.Position != nil {
							lifecyclePhases5.Position = types.Int64Value(int64(*lifecyclePhasesItem2.Position))
						} else {
							lifecyclePhases5.Position = types.Int64Null()
						}
						lifecyclePhases5.Type = types.StringPointerValue(lifecyclePhasesItem2.Type)
						if lifecyclePhasesCount2+1 > len(teams1.MsTeamsChannel.Incident.LifecyclePhases) {
							teams1.MsTeamsChannel.Incident.LifecyclePhases = append(teams1.MsTeamsChannel.Incident.LifecyclePhases, lifecyclePhases5)
						} else {
							teams1.MsTeamsChannel.Incident.LifecyclePhases[lifecyclePhasesCount2].Description = lifecyclePhases5.Description
							teams1.MsTeamsChannel.Incident.LifecyclePhases[lifecyclePhasesCount2].ID = lifecyclePhases5.ID
							teams1.MsTeamsChannel.Incident.LifecyclePhases[lifecyclePhasesCount2].Milestones = lifecyclePhases5.Milestones
							teams1.MsTeamsChannel.Incident.LifecyclePhases[lifecyclePhasesCount2].Name = lifecyclePhases5.Name
							teams1.MsTeamsChannel.Incident.LifecyclePhases[lifecyclePhasesCount2].Position = lifecyclePhases5.Position
							teams1.MsTeamsChannel.Incident.LifecyclePhases[lifecyclePhasesCount2].Type = lifecyclePhases5.Type
						}
					}
					teams1.MsTeamsChannel.Incident.Milestones = []tfTypes.IncidentsMilestoneEntity{}
					for milestonesCount5, milestonesItem5 := range teamsItem.MsTeamsChannel.Incident.Milestones {
						var milestones11 tfTypes.IncidentsMilestoneEntity
						if milestonesItem5.CreatedAt != nil {
							milestones11.CreatedAt = types.StringValue(milestonesItem5.CreatedAt.Format(time.RFC3339Nano))
						} else {
							milestones11.CreatedAt = types.StringNull()
						}
						milestones11.Duration = types.StringPointerValue(milestonesItem5.Duration)
						milestones11.ID = types.StringPointerValue(milestonesItem5.ID)
						if milestonesItem5.OccurredAt != nil {
							milestones11.OccurredAt = types.StringValue(milestonesItem5.OccurredAt.Format(time.RFC3339Nano))
						} else {
							milestones11.OccurredAt = types.StringNull()
						}
						milestones11.Type = types.StringPointerValue(milestonesItem5.Type)
						if milestonesItem5.UpdatedAt != nil {
							milestones11.UpdatedAt = types.StringValue(milestonesItem5.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							milestones11.UpdatedAt = types.StringNull()
						}
						if milestonesCount5+1 > len(teams1.MsTeamsChannel.Incident.Milestones) {
							teams1.MsTeamsChannel.Incident.Milestones = append(teams1.MsTeamsChannel.Incident.Milestones, milestones11)
						} else {
							teams1.MsTeamsChannel.Incident.Milestones[milestonesCount5].CreatedAt = milestones11.CreatedAt
							teams1.MsTeamsChannel.Incident.Milestones[milestonesCount5].Duration = milestones11.Duration
							teams1.MsTeamsChannel.Incident.Milestones[milestonesCount5].ID = milestones11.ID
							teams1.MsTeamsChannel.Incident.Milestones[milestonesCount5].OccurredAt = milestones11.OccurredAt
							teams1.MsTeamsChannel.Incident.Milestones[milestonesCount5].Type = milestones11.Type
							teams1.MsTeamsChannel.Incident.Milestones[milestonesCount5].UpdatedAt = milestones11.UpdatedAt
						}
					}
					if teamsItem.MsTeamsChannel.Incident.MonetaryImpact != nil {
						teams1.MsTeamsChannel.Incident.MonetaryImpact = types.Int64Value(int64(*teamsItem.MsTeamsChannel.Incident.MonetaryImpact))
					} else {
						teams1.MsTeamsChannel.Incident.MonetaryImpact = types.Int64Null()
					}
					if teamsItem.MsTeamsChannel.Incident.MonetaryImpactCents != nil {
						teams1.MsTeamsChannel.Incident.MonetaryImpactCents = types.Int64Value(int64(*teamsItem.MsTeamsChannel.Incident.MonetaryImpactCents))
					} else {
						teams1.MsTeamsChannel.Incident.MonetaryImpactCents = types.Int64Null()
					}
					teams1.MsTeamsChannel.Incident.Name = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Name)
					if teamsItem.MsTeamsChannel.Incident.Number != nil {
						teams1.MsTeamsChannel.Incident.Number = types.Int64Value(int64(*teamsItem.MsTeamsChannel.Incident.Number))
					} else {
						teams1.MsTeamsChannel.Incident.Number = types.Int64Null()
					}
					if teamsItem.MsTeamsChannel.Incident.Organization == nil {
						teams1.MsTeamsChannel.Incident.Organization = nil
					} else {
						teams1.MsTeamsChannel.Incident.Organization = &tfTypes.SuccinctEntity{}
						teams1.MsTeamsChannel.Incident.Organization.ID = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Organization.ID)
						teams1.MsTeamsChannel.Incident.Organization.Name = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Organization.Name)
					}
					teams1.MsTeamsChannel.Incident.OrganizationID = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.OrganizationID)
					teams1.MsTeamsChannel.Incident.Priority = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Priority)
					teams1.MsTeamsChannel.Incident.PrivateID = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.PrivateID)
					teams1.MsTeamsChannel.Incident.PrivateStatusPageURL = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.PrivateStatusPageURL)
					teams1.MsTeamsChannel.Incident.ReportID = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.ReportID)
					teams1.MsTeamsChannel.Incident.RoleAssignments = []tfTypes.IncidentsRoleAssignmentEntity{}
					for roleAssignmentsCount2, roleAssignmentsItem2 := range teamsItem.MsTeamsChannel.Incident.RoleAssignments {
						var roleAssignments5 tfTypes.IncidentsRoleAssignmentEntity
						if roleAssignmentsItem2.CreatedAt != nil {
							roleAssignments5.CreatedAt = types.StringValue(roleAssignmentsItem2.CreatedAt.Format(time.RFC3339Nano))
						} else {
							roleAssignments5.CreatedAt = types.StringNull()
						}
						roleAssignments5.ID = types.StringPointerValue(roleAssignmentsItem2.ID)
						if roleAssignmentsItem2.IncidentRole == nil {
							roleAssignments5.IncidentRole = nil
						} else {
							roleAssignments5.IncidentRole = &tfTypes.IncidentRoleEntity{}
							if roleAssignmentsItem2.IncidentRole.CreatedAt != nil {
								roleAssignments5.IncidentRole.CreatedAt = types.StringValue(roleAssignmentsItem2.IncidentRole.CreatedAt.Format(time.RFC3339Nano))
							} else {
								roleAssignments5.IncidentRole.CreatedAt = types.StringNull()
							}
							roleAssignments5.IncidentRole.Description = types.StringPointerValue(roleAssignmentsItem2.IncidentRole.Description)
							if roleAssignmentsItem2.IncidentRole.DiscardedAt != nil {
								roleAssignments5.IncidentRole.DiscardedAt = types.StringValue(roleAssignmentsItem2.IncidentRole.DiscardedAt.Format(time.RFC3339Nano))
							} else {
								roleAssignments5.IncidentRole.DiscardedAt = types.StringNull()
							}
							roleAssignments5.IncidentRole.ID = types.StringPointerValue(roleAssignmentsItem2.IncidentRole.ID)
							roleAssignments5.IncidentRole.Name = types.StringPointerValue(roleAssignmentsItem2.IncidentRole.Name)
							roleAssignments5.IncidentRole.Summary = types.StringPointerValue(roleAssignmentsItem2.IncidentRole.Summary)
							if roleAssignmentsItem2.IncidentRole.UpdatedAt != nil {
								roleAssignments5.IncidentRole.UpdatedAt = types.StringValue(roleAssignmentsItem2.IncidentRole.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								roleAssignments5.IncidentRole.UpdatedAt = types.StringNull()
							}
						}
						if roleAssignmentsItem2.Status != nil {
							roleAssignments5.Status = types.StringValue(string(*roleAssignmentsItem2.Status))
						} else {
							roleAssignments5.Status = types.StringNull()
						}
						if roleAssignmentsItem2.UpdatedAt != nil {
							roleAssignments5.UpdatedAt = types.StringValue(roleAssignmentsItem2.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							roleAssignments5.UpdatedAt = types.StringNull()
						}
						if roleAssignmentsItem2.User == nil {
							roleAssignments5.User = nil
						} else {
							roleAssignments5.User = &tfTypes.UserEntity{}
							if roleAssignmentsItem2.User.CreatedAt != nil {
								roleAssignments5.User.CreatedAt = types.StringValue(roleAssignmentsItem2.User.CreatedAt.Format(time.RFC3339Nano))
							} else {
								roleAssignments5.User.CreatedAt = types.StringNull()
							}
							roleAssignments5.User.Email = types.StringPointerValue(roleAssignmentsItem2.User.Email)
							roleAssignments5.User.ID = types.StringPointerValue(roleAssignmentsItem2.User.ID)
							roleAssignments5.User.Name = types.StringPointerValue(roleAssignmentsItem2.User.Name)
							roleAssignments5.User.SignalsEnabledNotificationTypes = []types.String{}
							for _, v := range roleAssignmentsItem2.User.SignalsEnabledNotificationTypes {
								roleAssignments5.User.SignalsEnabledNotificationTypes = append(roleAssignments5.User.SignalsEnabledNotificationTypes, types.StringValue(v))
							}
							roleAssignments5.User.SlackLinked = types.BoolPointerValue(roleAssignmentsItem2.User.SlackLinked)
							roleAssignments5.User.SlackUserID = types.StringPointerValue(roleAssignmentsItem2.User.SlackUserID)
							if roleAssignmentsItem2.User.UpdatedAt != nil {
								roleAssignments5.User.UpdatedAt = types.StringValue(roleAssignmentsItem2.User.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								roleAssignments5.User.UpdatedAt = types.StringNull()
							}
						}
						if roleAssignmentsCount2+1 > len(teams1.MsTeamsChannel.Incident.RoleAssignments) {
							teams1.MsTeamsChannel.Incident.RoleAssignments = append(teams1.MsTeamsChannel.Incident.RoleAssignments, roleAssignments5)
						} else {
							teams1.MsTeamsChannel.Incident.RoleAssignments[roleAssignmentsCount2].CreatedAt = roleAssignments5.CreatedAt
							teams1.MsTeamsChannel.Incident.RoleAssignments[roleAssignmentsCount2].ID = roleAssignments5.ID
							teams1.MsTeamsChannel.Incident.RoleAssignments[roleAssignmentsCount2].IncidentRole = roleAssignments5.IncidentRole
							teams1.MsTeamsChannel.Incident.RoleAssignments[roleAssignmentsCount2].Status = roleAssignments5.Status
							teams1.MsTeamsChannel.Incident.RoleAssignments[roleAssignmentsCount2].UpdatedAt = roleAssignments5.UpdatedAt
							teams1.MsTeamsChannel.Incident.RoleAssignments[roleAssignmentsCount2].User = roleAssignments5.User
						}
					}
					teams1.MsTeamsChannel.Incident.Services = []tfTypes.SuccinctEntity{}
					for servicesCount2, servicesItem2 := range teamsItem.MsTeamsChannel.Incident.Services {
						var services5 tfTypes.SuccinctEntity
						services5.ID = types.StringPointerValue(servicesItem2.ID)
						services5.Name = types.StringPointerValue(servicesItem2.Name)
						if servicesCount2+1 > len(teams1.MsTeamsChannel.Incident.Services) {
							teams1.MsTeamsChannel.Incident.Services = append(teams1.MsTeamsChannel.Incident.Services, services5)
						} else {
							teams1.MsTeamsChannel.Incident.Services[servicesCount2].ID = services5.ID
							teams1.MsTeamsChannel.Incident.Services[servicesCount2].Name = services5.Name
						}
					}
					teams1.MsTeamsChannel.Incident.Severity = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Severity)
					teams1.MsTeamsChannel.Incident.SeverityColor = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.SeverityColor)
					teams1.MsTeamsChannel.Incident.SeverityCondition = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.SeverityCondition)
					if teamsItem.MsTeamsChannel.Incident.SeverityConditionObject == nil {
						teams1.MsTeamsChannel.Incident.SeverityConditionObject = nil
					} else {
						teams1.MsTeamsChannel.Incident.SeverityConditionObject = &tfTypes.SeverityMatrixConditionEntity{}
						teams1.MsTeamsChannel.Incident.SeverityConditionObject.ID = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.SeverityConditionObject.ID)
						teams1.MsTeamsChannel.Incident.SeverityConditionObject.Name = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.SeverityConditionObject.Name)
						if teamsItem.MsTeamsChannel.Incident.SeverityConditionObject.Position != nil {
							teams1.MsTeamsChannel.Incident.SeverityConditionObject.Position = types.Int64Value(int64(*teamsItem.MsTeamsChannel.Incident.SeverityConditionObject.Position))
						} else {
							teams1.MsTeamsChannel.Incident.SeverityConditionObject.Position = types.Int64Null()
						}
					}
					teams1.MsTeamsChannel.Incident.SeverityImpact = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.SeverityImpact)
					if teamsItem.MsTeamsChannel.Incident.SeverityImpactObject == nil {
						teams1.MsTeamsChannel.Incident.SeverityImpactObject = nil
					} else {
						teams1.MsTeamsChannel.Incident.SeverityImpactObject = &tfTypes.SeverityMatrixImpactEntity{}
						teams1.MsTeamsChannel.Incident.SeverityImpactObject.AffectsID = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.SeverityImpactObject.AffectsID)
						teams1.MsTeamsChannel.Incident.SeverityImpactObject.ID = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.SeverityImpactObject.ID)
						teams1.MsTeamsChannel.Incident.SeverityImpactObject.Name = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.SeverityImpactObject.Name)
						if teamsItem.MsTeamsChannel.Incident.SeverityImpactObject.Position != nil {
							teams1.MsTeamsChannel.Incident.SeverityImpactObject.Position = types.Int64Value(int64(*teamsItem.MsTeamsChannel.Incident.SeverityImpactObject.Position))
						} else {
							teams1.MsTeamsChannel.Incident.SeverityImpactObject.Position = types.Int64Null()
						}
						teams1.MsTeamsChannel.Incident.SeverityImpactObject.Type = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.SeverityImpactObject.Type)
					}
					if teamsItem.MsTeamsChannel.Incident.StartedAt != nil {
						teams1.MsTeamsChannel.Incident.StartedAt = types.StringValue(teamsItem.MsTeamsChannel.Incident.StartedAt.Format(time.RFC3339Nano))
					} else {
						teams1.MsTeamsChannel.Incident.StartedAt = types.StringNull()
					}
					teams1.MsTeamsChannel.Incident.StatusPages = []tfTypes.IncidentsStatusPageEntity{}
					for statusPagesCount5, statusPagesItem5 := range teamsItem.MsTeamsChannel.Incident.StatusPages {
						var statusPages11 tfTypes.IncidentsStatusPageEntity
						statusPages11.DisplayName = types.StringPointerValue(statusPagesItem5.DisplayName)
						statusPages11.ExternalID = types.StringPointerValue(statusPagesItem5.ExternalID)
						statusPages11.ID = types.StringPointerValue(statusPagesItem5.ID)
						if statusPagesItem5.Integration == nil {
							statusPages11.Integration = nil
						} else {
							statusPages11.Integration = &tfTypes.IntegrationEntity{}
							if statusPagesItem5.Integration.CreatedAt != nil {
								statusPages11.Integration.CreatedAt = types.StringValue(statusPagesItem5.Integration.CreatedAt.Format(time.RFC3339Nano))
							} else {
								statusPages11.Integration.CreatedAt = types.StringNull()
							}
							statusPages11.Integration.DisplayName = types.StringPointerValue(statusPagesItem5.Integration.DisplayName)
							statusPages11.Integration.ID = types.StringPointerValue(statusPagesItem5.Integration.ID)
							statusPages11.Integration.IntegrationName = types.StringPointerValue(statusPagesItem5.Integration.IntegrationName)
							statusPages11.Integration.IntegrationSlug = types.StringPointerValue(statusPagesItem5.Integration.IntegrationSlug)
						}
						statusPages11.Name = types.StringPointerValue(statusPagesItem5.Name)
						statusPages11.URL = types.StringPointerValue(statusPagesItem5.URL)
						if statusPagesCount5+1 > len(teams1.MsTeamsChannel.Incident.StatusPages) {
							teams1.MsTeamsChannel.Incident.StatusPages = append(teams1.MsTeamsChannel.Incident.StatusPages, statusPages11)
						} else {
							teams1.MsTeamsChannel.Incident.StatusPages[statusPagesCount5].DisplayName = statusPages11.DisplayName
							teams1.MsTeamsChannel.Incident.StatusPages[statusPagesCount5].ExternalID = statusPages11.ExternalID
							teams1.MsTeamsChannel.Incident.StatusPages[statusPagesCount5].ID = statusPages11.ID
							teams1.MsTeamsChannel.Incident.StatusPages[statusPagesCount5].Integration = statusPages11.Integration
							teams1.MsTeamsChannel.Incident.StatusPages[statusPagesCount5].Name = statusPages11.Name
							teams1.MsTeamsChannel.Incident.StatusPages[statusPagesCount5].URL = statusPages11.URL
						}
					}
					teams1.MsTeamsChannel.Incident.Summary = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Summary)
					teams1.MsTeamsChannel.Incident.TagList = []types.String{}
					for _, v := range teamsItem.MsTeamsChannel.Incident.TagList {
						teams1.MsTeamsChannel.Incident.TagList = append(teams1.MsTeamsChannel.Incident.TagList, types.StringValue(v))
					}
					teams1.MsTeamsChannel.Incident.TeamAssignments = []tfTypes.IncidentsTeamAssignmentEntity{}
					for teamAssignmentsCount2, teamAssignmentsItem2 := range teamsItem.MsTeamsChannel.Incident.TeamAssignments {
						var teamAssignments5 tfTypes.IncidentsTeamAssignmentEntity
						if teamAssignmentsItem2.CreatedAt != nil {
							teamAssignments5.CreatedAt = types.StringValue(teamAssignmentsItem2.CreatedAt.Format(time.RFC3339Nano))
						} else {
							teamAssignments5.CreatedAt = types.StringNull()
						}
						teamAssignments5.ID = types.StringPointerValue(teamAssignmentsItem2.ID)
						teamAssignments5.Status = types.StringPointerValue(teamAssignmentsItem2.Status)
						if teamAssignmentsItem2.Team == nil {
							teamAssignments5.Team = nil
						} else {
							teamAssignments5.Team = &tfTypes.TeamEntity1{}
						}
						if teamAssignmentsItem2.UpdatedAt != nil {
							teamAssignments5.UpdatedAt = types.StringValue(teamAssignmentsItem2.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							teamAssignments5.UpdatedAt = types.StringNull()
						}
						if teamAssignmentsCount2+1 > len(teams1.MsTeamsChannel.Incident.TeamAssignments) {
							teams1.MsTeamsChannel.Incident.TeamAssignments = append(teams1.MsTeamsChannel.Incident.TeamAssignments, teamAssignments5)
						} else {
							teams1.MsTeamsChannel.Incident.TeamAssignments[teamAssignmentsCount2].CreatedAt = teamAssignments5.CreatedAt
							teams1.MsTeamsChannel.Incident.TeamAssignments[teamAssignmentsCount2].ID = teamAssignments5.ID
							teams1.MsTeamsChannel.Incident.TeamAssignments[teamAssignmentsCount2].Status = teamAssignments5.Status
							teams1.MsTeamsChannel.Incident.TeamAssignments[teamAssignmentsCount2].Team = teamAssignments5.Team
							teams1.MsTeamsChannel.Incident.TeamAssignments[teamAssignmentsCount2].UpdatedAt = teamAssignments5.UpdatedAt
						}
					}
					if teamsItem.MsTeamsChannel.Incident.Ticket == nil {
						teams1.MsTeamsChannel.Incident.Ticket = nil
					} else {
						teams1.MsTeamsChannel.Incident.Ticket = &tfTypes.TicketingTicketEntity{}
						teams1.MsTeamsChannel.Incident.Ticket.Assignees = []tfTypes.AuthorEntity{}
						for assigneesCount5, assigneesItem5 := range teamsItem.MsTeamsChannel.Incident.Ticket.Assignees {
							var assignees11 tfTypes.AuthorEntity
							assignees11.Email = types.StringPointerValue(assigneesItem5.Email)
							assignees11.ID = types.StringPointerValue(assigneesItem5.ID)
							assignees11.Name = types.StringPointerValue(assigneesItem5.Name)
							assignees11.Source = types.StringPointerValue(assigneesItem5.Source)
							if assigneesCount5+1 > len(teams1.MsTeamsChannel.Incident.Ticket.Assignees) {
								teams1.MsTeamsChannel.Incident.Ticket.Assignees = append(teams1.MsTeamsChannel.Incident.Ticket.Assignees, assignees11)
							} else {
								teams1.MsTeamsChannel.Incident.Ticket.Assignees[assigneesCount5].Email = assignees11.Email
								teams1.MsTeamsChannel.Incident.Ticket.Assignees[assigneesCount5].ID = assignees11.ID
								teams1.MsTeamsChannel.Incident.Ticket.Assignees[assigneesCount5].Name = assignees11.Name
								teams1.MsTeamsChannel.Incident.Ticket.Assignees[assigneesCount5].Source = assignees11.Source
							}
						}
						if teamsItem.MsTeamsChannel.Incident.Ticket.CreatedAt != nil {
							teams1.MsTeamsChannel.Incident.Ticket.CreatedAt = types.StringValue(teamsItem.MsTeamsChannel.Incident.Ticket.CreatedAt.Format(time.RFC3339Nano))
						} else {
							teams1.MsTeamsChannel.Incident.Ticket.CreatedAt = types.StringNull()
						}
						if teamsItem.MsTeamsChannel.Incident.Ticket.CreatedBy == nil {
							teams1.MsTeamsChannel.Incident.Ticket.CreatedBy = nil
						} else {
							teams1.MsTeamsChannel.Incident.Ticket.CreatedBy = &tfTypes.AuthorEntity{}
							teams1.MsTeamsChannel.Incident.Ticket.CreatedBy.Email = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Ticket.CreatedBy.Email)
							teams1.MsTeamsChannel.Incident.Ticket.CreatedBy.ID = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Ticket.CreatedBy.ID)
							teams1.MsTeamsChannel.Incident.Ticket.CreatedBy.Name = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Ticket.CreatedBy.Name)
							teams1.MsTeamsChannel.Incident.Ticket.CreatedBy.Source = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Ticket.CreatedBy.Source)
						}
						teams1.MsTeamsChannel.Incident.Ticket.Description = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Ticket.Description)
						if teamsItem.MsTeamsChannel.Incident.Ticket.DueAt != nil {
							teams1.MsTeamsChannel.Incident.Ticket.DueAt = types.StringValue(teamsItem.MsTeamsChannel.Incident.Ticket.DueAt.Format(time.RFC3339Nano))
						} else {
							teams1.MsTeamsChannel.Incident.Ticket.DueAt = types.StringNull()
						}
						teams1.MsTeamsChannel.Incident.Ticket.ID = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Ticket.ID)
						teams1.MsTeamsChannel.Incident.Ticket.IncidentCurrentMilestone = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Ticket.IncidentCurrentMilestone)
						teams1.MsTeamsChannel.Incident.Ticket.IncidentID = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Ticket.IncidentID)
						teams1.MsTeamsChannel.Incident.Ticket.IncidentName = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Ticket.IncidentName)
						if teamsItem.MsTeamsChannel.Incident.Ticket.Link == nil {
							teams1.MsTeamsChannel.Incident.Ticket.Link = nil
						} else {
							teams1.MsTeamsChannel.Incident.Ticket.Link = &tfTypes.AttachmentsLinkEntity{}
							teams1.MsTeamsChannel.Incident.Ticket.Link.Deletable = types.BoolPointerValue(teamsItem.MsTeamsChannel.Incident.Ticket.Link.Deletable)
							teams1.MsTeamsChannel.Incident.Ticket.Link.DisplayText = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Ticket.Link.DisplayText)
							teams1.MsTeamsChannel.Incident.Ticket.Link.Editable = types.BoolPointerValue(teamsItem.MsTeamsChannel.Incident.Ticket.Link.Editable)
							teams1.MsTeamsChannel.Incident.Ticket.Link.HrefURL = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Ticket.Link.HrefURL)
							teams1.MsTeamsChannel.Incident.Ticket.Link.IconURL = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Ticket.Link.IconURL)
							teams1.MsTeamsChannel.Incident.Ticket.Link.ID = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Ticket.Link.ID)
							teams1.MsTeamsChannel.Incident.Ticket.Link.Type = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Ticket.Link.Type)
						}
						if teamsItem.MsTeamsChannel.Incident.Ticket.Priority == nil {
							teams1.MsTeamsChannel.Incident.Ticket.Priority = nil
						} else {
							teams1.MsTeamsChannel.Incident.Ticket.Priority = &tfTypes.TicketingPriorityEntity{}
							if teamsItem.MsTeamsChannel.Incident.Ticket.Priority.CreatedAt != nil {
								teams1.MsTeamsChannel.Incident.Ticket.Priority.CreatedAt = types.StringValue(teamsItem.MsTeamsChannel.Incident.Ticket.Priority.CreatedAt.Format(time.RFC3339Nano))
							} else {
								teams1.MsTeamsChannel.Incident.Ticket.Priority.CreatedAt = types.StringNull()
							}
							teams1.MsTeamsChannel.Incident.Ticket.Priority.ID = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Ticket.Priority.ID)
							teams1.MsTeamsChannel.Incident.Ticket.Priority.Name = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Ticket.Priority.Name)
							if teamsItem.MsTeamsChannel.Incident.Ticket.Priority.Position != nil {
								teams1.MsTeamsChannel.Incident.Ticket.Priority.Position = types.Int64Value(int64(*teamsItem.MsTeamsChannel.Incident.Ticket.Priority.Position))
							} else {
								teams1.MsTeamsChannel.Incident.Ticket.Priority.Position = types.Int64Null()
							}
							if teamsItem.MsTeamsChannel.Incident.Ticket.Priority.UpdatedAt != nil {
								teams1.MsTeamsChannel.Incident.Ticket.Priority.UpdatedAt = types.StringValue(teamsItem.MsTeamsChannel.Incident.Ticket.Priority.UpdatedAt.Format(time.RFC3339Nano))
							} else {
								teams1.MsTeamsChannel.Incident.Ticket.Priority.UpdatedAt = types.StringNull()
							}
						}
						if teamsItem.MsTeamsChannel.Incident.Ticket.State != nil {
							teams1.MsTeamsChannel.Incident.Ticket.State = types.StringValue(string(*teamsItem.MsTeamsChannel.Incident.Ticket.State))
						} else {
							teams1.MsTeamsChannel.Incident.Ticket.State = types.StringNull()
						}
						teams1.MsTeamsChannel.Incident.Ticket.Summary = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Ticket.Summary)
						teams1.MsTeamsChannel.Incident.Ticket.TagList = []types.String{}
						for _, v := range teamsItem.MsTeamsChannel.Incident.Ticket.TagList {
							teams1.MsTeamsChannel.Incident.Ticket.TagList = append(teams1.MsTeamsChannel.Incident.Ticket.TagList, types.StringValue(v))
						}
						teams1.MsTeamsChannel.Incident.Ticket.TaskID = types.StringPointerValue(teamsItem.MsTeamsChannel.Incident.Ticket.TaskID)
						if teamsItem.MsTeamsChannel.Incident.Ticket.Type != nil {
							teams1.MsTeamsChannel.Incident.Ticket.Type = types.StringValue(string(*teamsItem.MsTeamsChannel.Incident.Ticket.Type))
						} else {
							teams1.MsTeamsChannel.Incident.Ticket.Type = types.StringNull()
						}
						if teamsItem.MsTeamsChannel.Incident.Ticket.UpdatedAt != nil {
							teams1.MsTeamsChannel.Incident.Ticket.UpdatedAt = types.StringValue(teamsItem.MsTeamsChannel.Incident.Ticket.UpdatedAt.Format(time.RFC3339Nano))
						} else {
							teams1.MsTeamsChannel.Incident.Ticket.UpdatedAt = types.StringNull()
						}
					}
				}
				teams1.MsTeamsChannel.MsTeamID = types.StringPointerValue(teamsItem.MsTeamsChannel.MsTeamID)
				teams1.MsTeamsChannel.Status = types.StringPointerValue(teamsItem.MsTeamsChannel.Status)
				teams1.MsTeamsChannel.TeamName = types.StringPointerValue(teamsItem.MsTeamsChannel.TeamName)
			}
			teams1.Name = types.StringPointerValue(teamsItem.Name)
			teams1.OwnedFunctionalities = []tfTypes.FunctionalityEntity{}
			for ownedFunctionalitiesCount2, ownedFunctionalitiesItem2 := range teamsItem.OwnedFunctionalities {
				var ownedFunctionalities5 tfTypes.FunctionalityEntity
				ownedFunctionalities5.ActiveIncidents = []types.String{}
				for _, v := range ownedFunctionalitiesItem2.ActiveIncidents {
					ownedFunctionalities5.ActiveIncidents = append(ownedFunctionalities5.ActiveIncidents, types.StringValue(v))
				}
				ownedFunctionalities5.AlertOnAdd = types.BoolPointerValue(ownedFunctionalitiesItem2.AlertOnAdd)
				ownedFunctionalities5.AutoAddRespondingTeam = types.BoolPointerValue(ownedFunctionalitiesItem2.AutoAddRespondingTeam)
				if ownedFunctionalitiesItem2.CreatedAt != nil {
					ownedFunctionalities5.CreatedAt = types.StringValue(ownedFunctionalitiesItem2.CreatedAt.Format(time.RFC3339Nano))
				} else {
					ownedFunctionalities5.CreatedAt = types.StringNull()
				}
				ownedFunctionalities5.Description = types.StringPointerValue(ownedFunctionalitiesItem2.Description)
				ownedFunctionalities5.ExternalResources = []tfTypes.ExternalResourceEntity{}
				for externalResourcesCount7, externalResourcesItem7 := range ownedFunctionalitiesItem2.ExternalResources {
					var externalResources15 tfTypes.ExternalResourceEntity
					externalResources15.ConnectionID = types.StringPointerValue(externalResourcesItem7.ConnectionID)
					externalResources15.ConnectionName = types.StringPointerValue(externalResourcesItem7.ConnectionName)
					externalResources15.ConnectionType = types.StringPointerValue(externalResourcesItem7.ConnectionType)
					if externalResourcesItem7.CreatedAt != nil {
						externalResources15.CreatedAt = types.StringValue(externalResourcesItem7.CreatedAt.Format(time.RFC3339Nano))
					} else {
						externalResources15.CreatedAt = types.StringNull()
					}
					externalResources15.Name = types.StringPointerValue(externalResourcesItem7.Name)
					externalResources15.RemoteID = types.StringPointerValue(externalResourcesItem7.RemoteID)
					externalResources15.RemoteURL = types.StringPointerValue(externalResourcesItem7.RemoteURL)
					if externalResourcesItem7.UpdatedAt != nil {
						externalResources15.UpdatedAt = types.StringValue(externalResourcesItem7.UpdatedAt.Format(time.RFC3339Nano))
					} else {
						externalResources15.UpdatedAt = types.StringNull()
					}
					if externalResourcesCount7+1 > len(ownedFunctionalities5.ExternalResources) {
						ownedFunctionalities5.ExternalResources = append(ownedFunctionalities5.ExternalResources, externalResources15)
					} else {
						ownedFunctionalities5.ExternalResources[externalResourcesCount7].ConnectionID = externalResources15.ConnectionID
						ownedFunctionalities5.ExternalResources[externalResourcesCount7].ConnectionName = externalResources15.ConnectionName
						ownedFunctionalities5.ExternalResources[externalResourcesCount7].ConnectionType = externalResources15.ConnectionType
						ownedFunctionalities5.ExternalResources[externalResourcesCount7].CreatedAt = externalResources15.CreatedAt
						ownedFunctionalities5.ExternalResources[externalResourcesCount7].Name = externalResources15.Name
						ownedFunctionalities5.ExternalResources[externalResourcesCount7].RemoteID = externalResources15.RemoteID
						ownedFunctionalities5.ExternalResources[externalResourcesCount7].RemoteURL = externalResources15.RemoteURL
						ownedFunctionalities5.ExternalResources[externalResourcesCount7].UpdatedAt = externalResources15.UpdatedAt
					}
				}
				ownedFunctionalities5.ID = types.StringPointerValue(ownedFunctionalitiesItem2.ID)
				if len(ownedFunctionalitiesItem2.Labels) > 0 {
					ownedFunctionalities5.Labels = make(map[string]types.String)
					for key10, value18 := range ownedFunctionalitiesItem2.Labels {
						ownedFunctionalities5.Labels[key10] = types.StringValue(value18)
					}
				}
				ownedFunctionalities5.Links = []tfTypes.LinksEntity{}
				for linksCount7, linksItem7 := range ownedFunctionalitiesItem2.Links {
					var links15 tfTypes.LinksEntity
					links15.HrefURL = types.StringPointerValue(linksItem7.HrefURL)
					links15.IconURL = types.StringPointerValue(linksItem7.IconURL)
					links15.ID = types.StringPointerValue(linksItem7.ID)
					links15.Name = types.StringPointerValue(linksItem7.Name)
					if linksCount7+1 > len(ownedFunctionalities5.Links) {
						ownedFunctionalities5.Links = append(ownedFunctionalities5.Links, links15)
					} else {
						ownedFunctionalities5.Links[linksCount7].HrefURL = links15.HrefURL
						ownedFunctionalities5.Links[linksCount7].IconURL = links15.IconURL
						ownedFunctionalities5.Links[linksCount7].ID = links15.ID
						ownedFunctionalities5.Links[linksCount7].Name = links15.Name
					}
				}
				ownedFunctionalities5.Name = types.StringPointerValue(ownedFunctionalitiesItem2.Name)
				if ownedFunctionalitiesItem2.Owner == nil {
					ownedFunctionalities5.Owner = nil
				} else {
					ownedFunctionalities5.Owner = &tfTypes.TeamEntity1{}
				}
				ownedFunctionalities5.Slug = types.StringPointerValue(ownedFunctionalitiesItem2.Slug)
				if ownedFunctionalitiesItem2.UpdatedAt != nil {
					ownedFunctionalities5.UpdatedAt = types.StringValue(ownedFunctionalitiesItem2.UpdatedAt.Format(time.RFC3339Nano))
				} else {
					ownedFunctionalities5.UpdatedAt = types.StringNull()
				}
				if ownedFunctionalitiesItem2.UpdatedBy == nil {
					ownedFunctionalities5.UpdatedBy = nil
				} else {
					ownedFunctionalities5.UpdatedBy = &tfTypes.AuthorEntity{}
					ownedFunctionalities5.UpdatedBy.Email = types.StringPointerValue(ownedFunctionalitiesItem2.UpdatedBy.Email)
					ownedFunctionalities5.UpdatedBy.ID = types.StringPointerValue(ownedFunctionalitiesItem2.UpdatedBy.ID)
					ownedFunctionalities5.UpdatedBy.Name = types.StringPointerValue(ownedFunctionalitiesItem2.UpdatedBy.Name)
					ownedFunctionalities5.UpdatedBy.Source = types.StringPointerValue(ownedFunctionalitiesItem2.UpdatedBy.Source)
				}
				if ownedFunctionalitiesCount2+1 > len(teams1.OwnedFunctionalities) {
					teams1.OwnedFunctionalities = append(teams1.OwnedFunctionalities, ownedFunctionalities5)
				} else {
					teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].ActiveIncidents = ownedFunctionalities5.ActiveIncidents
					teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].AlertOnAdd = ownedFunctionalities5.AlertOnAdd
					teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].AutoAddRespondingTeam = ownedFunctionalities5.AutoAddRespondingTeam
					teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].CreatedAt = ownedFunctionalities5.CreatedAt
					teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].Description = ownedFunctionalities5.Description
					teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].ExternalResources = ownedFunctionalities5.ExternalResources
					teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].ID = ownedFunctionalities5.ID
					teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].Labels = ownedFunctionalities5.Labels
					teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].Links = ownedFunctionalities5.Links
					teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].Name = ownedFunctionalities5.Name
					teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].Owner = ownedFunctionalities5.Owner
					teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].Slug = ownedFunctionalities5.Slug
					teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].UpdatedAt = ownedFunctionalities5.UpdatedAt
					teams1.OwnedFunctionalities[ownedFunctionalitiesCount2].UpdatedBy = ownedFunctionalities5.UpdatedBy
				}
			}
			teams1.OwnedRunbooks = []tfTypes.SlimRunbookEntity{}
			for ownedRunbooksCount2, ownedRunbooksItem2 := range teamsItem.OwnedRunbooks {
				var ownedRunbooks5 tfTypes.SlimRunbookEntity
				if ownedRunbooksItem2.AttachmentRule == nil {
					ownedRunbooks5.AttachmentRule = nil
				} else {
					ownedRunbooks5.AttachmentRule = &tfTypes.RulesRuleEntity{}
					if ownedRunbooksItem2.AttachmentRule.Logic == nil {
						ownedRunbooks5.AttachmentRule.Logic = nil
					} else {
						ownedRunbooks5.AttachmentRule.Logic = &tfTypes.TeamEntity1{}
					}
					if ownedRunbooksItem2.AttachmentRule.UserData == nil {
						ownedRunbooks5.AttachmentRule.UserData = nil
					} else {
						ownedRunbooks5.AttachmentRule.UserData = &tfTypes.FHTypesGenericEntity{}
						ownedRunbooks5.AttachmentRule.UserData.Label = types.StringPointerValue(ownedRunbooksItem2.AttachmentRule.UserData.Label)
						ownedRunbooks5.AttachmentRule.UserData.Type = types.StringPointerValue(ownedRunbooksItem2.AttachmentRule.UserData.Type)
						ownedRunbooks5.AttachmentRule.UserData.Value = types.StringPointerValue(ownedRunbooksItem2.AttachmentRule.UserData.Value)
					}
				}
				ownedRunbooks5.Categories = types.StringPointerValue(ownedRunbooksItem2.Categories)
				if ownedRunbooksItem2.CreatedAt != nil {
					ownedRunbooks5.CreatedAt = types.StringValue(ownedRunbooksItem2.CreatedAt.Format(time.RFC3339Nano))
				} else {
					ownedRunbooks5.CreatedAt = types.StringNull()
				}
				ownedRunbooks5.Description = types.StringPointerValue(ownedRunbooksItem2.Description)
				ownedRunbooks5.ID = types.StringPointerValue(ownedRunbooksItem2.ID)
				ownedRunbooks5.Name = types.StringPointerValue(ownedRunbooksItem2.Name)
				if ownedRunbooksItem2.Owner == nil {
					ownedRunbooks5.Owner = nil
				} else {
					ownedRunbooks5.Owner = &tfTypes.TeamEntity1{}
				}
				ownedRunbooks5.Summary = types.StringPointerValue(ownedRunbooksItem2.Summary)
				ownedRunbooks5.Type = types.StringPointerValue(ownedRunbooksItem2.Type)
				if ownedRunbooksItem2.UpdatedAt != nil {
					ownedRunbooks5.UpdatedAt = types.StringValue(ownedRunbooksItem2.UpdatedAt.Format(time.RFC3339Nano))
				} else {
					ownedRunbooks5.UpdatedAt = types.StringNull()
				}
				if ownedRunbooksCount2+1 > len(teams1.OwnedRunbooks) {
					teams1.OwnedRunbooks = append(teams1.OwnedRunbooks, ownedRunbooks5)
				} else {
					teams1.OwnedRunbooks[ownedRunbooksCount2].AttachmentRule = ownedRunbooks5.AttachmentRule
					teams1.OwnedRunbooks[ownedRunbooksCount2].Categories = ownedRunbooks5.Categories
					teams1.OwnedRunbooks[ownedRunbooksCount2].CreatedAt = ownedRunbooks5.CreatedAt
					teams1.OwnedRunbooks[ownedRunbooksCount2].Description = ownedRunbooks5.Description
					teams1.OwnedRunbooks[ownedRunbooksCount2].ID = ownedRunbooks5.ID
					teams1.OwnedRunbooks[ownedRunbooksCount2].Name = ownedRunbooks5.Name
					teams1.OwnedRunbooks[ownedRunbooksCount2].Owner = ownedRunbooks5.Owner
					teams1.OwnedRunbooks[ownedRunbooksCount2].Summary = ownedRunbooks5.Summary
					teams1.OwnedRunbooks[ownedRunbooksCount2].Type = ownedRunbooks5.Type
					teams1.OwnedRunbooks[ownedRunbooksCount2].UpdatedAt = ownedRunbooks5.UpdatedAt
				}
			}
			teams1.SignalsIcalURL = types.StringPointerValue(teamsItem.SignalsIcalURL)
			if teamsItem.SlackChannel == nil {
				teams1.SlackChannel = nil
			} else {
				teams1.SlackChannel = &tfTypes.IntegrationsSlackSlackChannelEntity{}
				teams1.SlackChannel.ID = types.StringPointerValue(teamsItem.SlackChannel.ID)
				teams1.SlackChannel.Name = types.StringPointerValue(teamsItem.SlackChannel.Name)
				teams1.SlackChannel.SlackChannelID = types.StringPointerValue(teamsItem.SlackChannel.SlackChannelID)
			}
			teams1.Slug = types.StringPointerValue(teamsItem.Slug)
			if teamsItem.UpdatedAt != nil {
				teams1.UpdatedAt = types.StringValue(teamsItem.UpdatedAt.Format(time.RFC3339Nano))
			} else {
				teams1.UpdatedAt = types.StringNull()
			}
			if teamsCount+1 > len(r.Teams) {
				r.Teams = append(r.Teams, teams1)
			} else {
				r.Teams[teamsCount].CreatedAt = teams1.CreatedAt
				r.Teams[teamsCount].CreatedBy = teams1.CreatedBy
				r.Teams[teamsCount].Description = teams1.Description
				r.Teams[teamsCount].Functionalities = teams1.Functionalities
				r.Teams[teamsCount].ID = teams1.ID
				r.Teams[teamsCount].Memberships = teams1.Memberships
				r.Teams[teamsCount].MsTeamsChannel = teams1.MsTeamsChannel
				r.Teams[teamsCount].Name = teams1.Name
				r.Teams[teamsCount].OwnedFunctionalities = teams1.OwnedFunctionalities
				r.Teams[teamsCount].OwnedRunbooks = teams1.OwnedRunbooks
				r.Teams[teamsCount].SignalsIcalURL = teams1.SignalsIcalURL
				r.Teams[teamsCount].SlackChannel = teams1.SlackChannel
				r.Teams[teamsCount].Slug = teams1.Slug
				r.Teams[teamsCount].UpdatedAt = teams1.UpdatedAt
			}
		}
		if resp.UpdatedAt != nil {
			r.UpdatedAt = types.StringValue(resp.UpdatedAt.Format(time.RFC3339Nano))
		} else {
			r.UpdatedAt = types.StringNull()
		}
		if resp.UpdatedBy == nil {
			r.UpdatedBy = nil
		} else {
			r.UpdatedBy = &tfTypes.AuthorEntity{}
			r.UpdatedBy.Email = types.StringPointerValue(resp.UpdatedBy.Email)
			r.UpdatedBy.ID = types.StringPointerValue(resp.UpdatedBy.ID)
			r.UpdatedBy.Name = types.StringPointerValue(resp.UpdatedBy.Name)
			r.UpdatedBy.Source = types.StringPointerValue(resp.UpdatedBy.Source)
		}
	}
}
